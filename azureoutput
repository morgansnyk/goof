2023-06-01T17:20:02.8956977Z ##[section]Starting: SnykCode
2023-06-01T17:20:02.9106735Z ==============================================================================
2023-06-01T17:20:02.9106895Z Task         : Command line
2023-06-01T17:20:02.9106947Z Description  : Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
2023-06-01T17:20:02.9107043Z Version      : 2.212.0
2023-06-01T17:20:02.9107091Z Author       : Microsoft Corporation
2023-06-01T17:20:02.9107166Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/command-line
2023-06-01T17:20:02.9107256Z ==============================================================================
2023-06-01T17:20:04.7709567Z Generating script.
2023-06-01T17:20:04.8292416Z ========================== Starting Command Output ===========================
2023-06-01T17:20:04.8593558Z ##[command]"C:\Windows\system32\cmd.exe" /D /E:ON /V:OFF /S /C "CALL "D:\a\_temp\62c80664-cd58-4615-9f88-f3ec6b18de19.cmd""
2023-06-01T17:20:04.9250123Z   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
2023-06-01T17:20:04.9251022Z                                  Dload  Upload   Total   Spent    Left  Speed
2023-06-01T17:20:04.9251134Z
2023-06-01T17:20:05.2556816Z   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
2023-06-01T17:20:06.1628011Z   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
2023-06-01T17:20:06.1628575Z 100 82.1M  100 82.1M    0     0  66.1M      0  0:00:01  0:00:01 --:--:-- 66.3M
2023-06-01T17:20:06.1835278Z   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
2023-06-01T17:20:06.1836137Z                                  Dload  Upload   Total   Spent    Left  Speed
2023-06-01T17:20:06.1836484Z
2023-06-01T17:20:06.3929841Z   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
2023-06-01T17:20:07.0674453Z   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
2023-06-01T17:20:07.0677160Z 100 39.4M  100 39.4M    0     0  44.5M      0 --:--:-- --:--:-- --:--:-- 44.5M
2023-06-01T17:20:08.2703097Z 2023-06-01T17:20:08Z main - Version:               1.1171.0
2023-06-01T17:20:08.2703846Z 2023-06-01T17:20:08Z main - Platform:              windows amd64
2023-06-01T17:20:08.2704195Z 2023-06-01T17:20:08Z main - API:                   https://api.snyk.io
2023-06-01T17:20:08.2704515Z 2023-06-01T17:20:08Z main - Cache:                 C:\Users\VssAdministrator\AppData\Local/snyk
2023-06-01T17:20:08.2704902Z 2023-06-01T17:20:08Z main - Organization:          732931c6-cf4e-49d3-83e4-a494892be357
2023-06-01T17:20:08.2705214Z 2023-06-01T17:20:08Z main - Insecure HTTPS:        false
2023-06-01T17:20:08.2705509Z 2023-06-01T17:20:08Z main - Analytics:             enabled
2023-06-01T17:20:08.2705957Z 2023-06-01T17:20:08Z main - Authorization:         1662ceaaab7b265a224d2018741e241f[...]  (type=token)
2023-06-01T17:20:08.2706297Z 2023-06-01T17:20:08Z main - Features:
2023-06-01T17:20:08.2706630Z 2023-06-01T17:20:08Z main -   --auth-type=oauth:   Disabled
2023-06-01T17:20:08.2768860Z 2023-06-01T17:20:08Z main - Using Legacy CLI to serve the command. (reason: unknown command "code" for "snyk")
2023-06-01T17:20:08.2769504Z 2023-06-01T17:20:08Z legacycli:1 - Arguments: [code test --sarif -d]
2023-06-01T17:20:08.2769813Z 2023-06-01T17:20:08Z legacycli:1 - Use StdIO: true
2023-06-01T17:20:08.2770123Z 2023-06-01T17:20:08Z legacycli:1 - Init start
2023-06-01T17:20:08.2776060Z 2023-06-01T17:20:08Z legacycli:1 - Init-Lock acquired: true (C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0.lock)
2023-06-01T17:20:08.2780517Z 2023-06-01T17:20:08Z legacycli:1 - Validating sha256 of C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/snyk-win.exe
2023-06-01T17:20:08.2783493Z 2023-06-01T17:20:08Z legacycli:1 - open C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/snyk-win.exe: The system cannot find the file specified.
2023-06-01T17:20:08.2784159Z 2023-06-01T17:20:08Z legacycli:1 - Extract cliv1 to C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/snyk-win.exe
2023-06-01T17:20:08.8469042Z 2023-06-01T17:20:08Z legacycli:1 - Validating sha256 of C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/snyk-win.exe
2023-06-01T17:20:09.0634642Z 2023-06-01T17:20:09Z legacycli:1 - expected:  05ee68fbbad211f4bfaf24146d620597cedb36457e02c6c52c70d50aca9393b8
2023-06-01T17:20:09.0635693Z 2023-06-01T17:20:09Z legacycli:1 - actual:    05ee68fbbad211f4bfaf24146d620597cedb36457e02c6c52c70d50aca9393b8
2023-06-01T17:20:09.0636081Z 2023-06-01T17:20:09Z legacycli:1 - Extracted cliv1 successfully
2023-06-01T17:20:09.0636412Z 2023-06-01T17:20:09Z legacycli:1 - Init end
2023-06-01T17:20:09.1831262Z 2023-06-01T17:20:09Z legacycli:1 - Temporary CertificateLocation: C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/tmp\snyk-cli-cert-1826463228.crt
2023-06-01T17:20:09.1836887Z 2023-06-01T17:20:09Z legacycli:1 - Enabled Proxy Authentication Mechanism: Anyauth
2023-06-01T17:20:09.1837334Z 2023-06-01T17:20:09Z legacycli:1 - starting proxy
2023-06-01T17:20:09.1839390Z 2023-06-01T17:20:09Z legacycli:1 - Wrapper proxy is listening on port:  50022
2023-06-01T17:20:09.1843770Z 2023-06-01T17:20:09Z legacycli:1 - Launching:
2023-06-01T17:20:09.1844334Z 2023-06-01T17:20:09Z legacycli:1 - C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/snyk-win.exe
2023-06-01T17:20:09.1844767Z 2023-06-01T17:20:09Z legacycli:1 - With Arguments:
2023-06-01T17:20:09.1845154Z 2023-06-01T17:20:09Z legacycli:1 - code, test, --sarif, -d
2023-06-01T17:20:09.1845520Z 2023-06-01T17:20:09Z legacycli:1 - With Environment:
2023-06-01T17:20:09.1846032Z 2023-06-01T17:20:09Z legacycli:1 - NODE_EXTRA_CA_CERTS = C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/tmp\snyk-cli-cert-1826463228.crt
2023-06-01T17:20:09.1847347Z 2023-06-01T17:20:09Z legacycli:1 - HTTPS_PROXY = http://snykcli:***@127.0.0.1:50022
2023-06-01T17:20:09.1848083Z 2023-06-01T17:20:09Z legacycli:1 - HTTP_PROXY = http://snykcli:***@127.0.0.1:50022
2023-06-01T17:20:09.1849404Z 2023-06-01T17:20:09Z legacycli:1 - NO_PROXY = localhost,127.0.0.1,::1
2023-06-01T17:20:09.1849816Z 2023-06-01T17:20:09Z legacycli:1 - SNYK_SYSTEM_HTTPS_PROXY =
2023-06-01T17:20:09.1851518Z 2023-06-01T17:20:09Z legacycli:1 - SNYK_SYSTEM_HTTP_PROXY =
2023-06-01T17:20:09.1851841Z 2023-06-01T17:20:09Z legacycli:1 - SNYK_SYSTEM_NO_PROXY =
2023-06-01T17:20:09.4454255Z 2023-06-01T17:20:09.433Z snyk test <ref *1> { _: [ [Circular *1] ], sarif: true, debug: true, code: true }
2023-06-01T17:20:10.5805516Z 2023-06-01T17:20:10.570Z snyk-code Request ID: 22abf590-cfa4-4477-a693-f0c325777e6d
2023-06-01T17:20:10.5851020Z 2023-06-01T17:20:10.575Z snyk using proxy: http://snykcli:***@127.0.0.1:50022
2023-06-01T17:20:10.5998580Z 2023-06-01T17:20:10Z legacycli:1 - [001] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:10.5999837Z 2023-06-01T17:20:10Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:10.6001389Z 2023-06-01T17:20:10Z legacycli:1 - [001] INFO: on 0th handler: &{2 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:10.6002601Z 2023-06-01T17:20:10Z legacycli:1 - [001] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:10.6003679Z 2023-06-01T17:20:10Z legacycli:1 - [001] INFO: signing for api.snyk.io
2023-06-01T17:20:10.8073247Z 2023-06-01T17:20:10Z legacycli:1 - [002] INFO: req api.snyk.io:443
2023-06-01T17:20:10.8074382Z 2023-06-01T17:20:10Z legacycli:1 - [002] INFO: Sending request GET https://api.snyk.io:443/v1/cli-config/settings/sast?org=
2023-06-01T17:20:12.2003090Z 2023-06-01T17:20:12Z legacycli:1 - [002] INFO: resp 200 OK
2023-06-01T17:20:12.2088950Z 2023-06-01T17:20:12Z legacycli:1 - [001] INFO: Exiting on EOF
2023-06-01T17:20:12.2131824Z 2023-06-01T17:20:12.202Z snyk using proxy: http://snykcli:***@127.0.0.1:50022
2023-06-01T17:20:12.2155717Z 2023-06-01T17:20:12Z legacycli:1 - [003] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:12.2156341Z 2023-06-01T17:20:12Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:12.2159727Z 2023-06-01T17:20:12Z legacycli:1 - [003] INFO: on 0th handler: &{2 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:12.2160681Z 2023-06-01T17:20:12Z legacycli:1 - [003] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:12.2161621Z 2023-06-01T17:20:12Z legacycli:1 - [003] INFO: signing for api.snyk.io
2023-06-01T17:20:12.3696332Z 2023-06-01T17:20:12Z legacycli:1 - [004] INFO: req api.snyk.io:443
2023-06-01T17:20:12.3696981Z 2023-06-01T17:20:12Z legacycli:1 - [004] INFO: Sending request POST https://api.snyk.io:443/v1/track-sast-usage/cli?org=
2023-06-01T17:20:13.6715263Z 2023-06-01T17:20:13Z legacycli:1 - [004] INFO: resp 200 OK
2023-06-01T17:20:13.6749206Z 2023-06-01T17:20:13Z legacycli:1 - [003] INFO: Exiting on EOF
2023-06-01T17:20:13.6785345Z 2023-06-01T17:20:13.668Z snyk-code ---> API request log  => HTTP GET https://deeproxy.snyk.io/filters
2023-06-01T17:20:13.6807311Z 2023-06-01T17:20:13Z legacycli:1 - [005] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:13.6808108Z 2023-06-01T17:20:13Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:13.6808614Z 2023-06-01T17:20:13Z legacycli:1 - [005] INFO: on 0th handler: &{2 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:13.6809145Z 2023-06-01T17:20:13Z legacycli:1 - [005] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:13.6809514Z 2023-06-01T17:20:13Z legacycli:1 - [005] INFO: signing for deeproxy.snyk.io
2023-06-01T17:20:13.9540599Z 2023-06-01T17:20:13Z legacycli:1 - [006] INFO: req deeproxy.snyk.io:443
2023-06-01T17:20:13.9541324Z 2023-06-01T17:20:13Z legacycli:1 - [006] INFO: Sending request GET https://deeproxy.snyk.io:443/filters
2023-06-01T17:20:14.2211911Z 2023-06-01T17:20:14Z legacycli:1 - [006] INFO: resp 200 OK
2023-06-01T17:20:14.2251632Z 2023-06-01T17:20:14Z legacycli:1 - [005] INFO: Exiting on EOF
2023-06-01T17:20:14.2279496Z 2023-06-01T17:20:14.217Z snyk-code ---> API request log  <= Response: 200 {"configFiles":[".dcignore",".gitignore",".snyk",".snyk-rules"],"extensions":[".KT",".Kt",".kT",".kt",".PY",".Py",".pY",".py",".ERB",".ERb",".ErB",".Erb",".HAML",".HAMl",".HAmL",".HAml",".HaML",".HaMl",".HamL",".Haml",".RB",".RHTML",".RHTMl",".RHTmL",".RHTml",".RHtML",".RHtMl",".RHtmL",".RHtml",".Rb",".RhTML",".RhTMl",".RhTmL",".RhTml",".RhtML",".RhtMl",".RhtmL",".Rhtml",".SLIM",".SLIm",".SLiM",".SLim",".SlIM",".SlIm",".SliM",".Slim",".eRB",".eRb",".erB",".erb",".hAML",".hAMl",".hAmL",".hAml",".haML",".haMl",".hamL",".haml",".rB",".rHTML",".rHTMl",".rHTmL",".rHTml",".rHtML",".rHtMl",".rHtmL",".rHtml",".rb",".rhTML",".rhTMl",".rhTmL",".rhTml",".rhtML",".rhtMl",".rhtmL",".rhtml",".sLIM",".sLIm",".sLiM",".sLim",".slIM",".slIm",".sliM",".slim",".VB",".Vb",".vB",".vb",".SWIFT",".SWIFt",".SWIfT",".SWIft",".SWiFT",".SWiFt",".SWifT",".SWift",".SwIFT",".SwIFt",".SwIfT",".SwIft",".SwiFT",".SwiFt",".SwifT",".Swift",".sWIFT",".sWIFt",".sWIfT",".sWIft",".sWiFT",".sWiFt",".sWifT",".sWift",".swIFT",".swIFt",".swIfT",".swIft",".swiFT",".swiFt",".swifT",".swift",".CONFIG",".CONFIg",".CONFiG",".CONFig",".CONfIG",".CONfIg",".CONfiG",".CONfig",".COnFIG",".COnFIg",".COnFiG",".COnFig",".COnfIG",".COnfIg",".COnfiG",".COnfig",".CoNFIG",".CoNFIg",".CoNFiG",".CoNFig",".CoNfIG",".CoNfIg",".CoNfiG",".CoNfig",".ConFIG",".ConFIg",".ConFiG",".ConFig",".ConfIG",".ConfIg",".ConfiG",".Config",".POM",".POm",".PoM",".Pom",".WXS",".WXs",".WxS",".Wxs",".XML",".XMl",".XSD",".XSd",".XmL",".Xml",".XsD",".Xsd",".cONFIG",".cONFIg",".cONFiG",".cONFig",".cONfIG",".cONfIg",".cONfiG",".cONfig",".cOnFIG",".cOnFIg",".cOnFiG",".cOnFig",".cOnfIG",".cOnfIg",".cOnfiG",".cOnfig",".coNFIG",".coNFIg",".coNFiG",".coNFig",".coNfIG",".coNfIg",".coNfiG",".coNfig",".conFIG",".conFIg",".conFiG",".conFig",".confIG",".confIg",".confiG",".config",".pOM",".pOm",".poM",".pom",".wXS",".wXs",".wxS",".wxs",".xML",".xMl",".xSD",".xSd",".xmL",".xml",".xsD",".xsd",".CONFIG",".CONFIg",".CONFiG",".CONFig",".CONfIG",".CONfIg",".CONfiG",".CONfig",".COnFIG",".COnFIg",".COnFiG",".COnFig",".COnfIG",".COnfIg",".COnfiG",".COnfig",".CoNFIG",".CoNFIg",".CoNFiG",".CoNFig",".CoNfIG",".CoNfIg",".CoNfiG",".CoNfig",".ConFIG",".ConFIg",".ConFiG",".ConFig",".ConfIG",".ConfIg",".ConfiG",".Config",".POM",".POm",".PoM",".Pom",".WXS",".WXs",".WxS",".Wxs",".XML",".XMl",".XSD",".XSd",".XmL",".Xml",".XsD",".Xsd",".cONFIG",".cONFIg",".cONFiG",".cONFig",".cONfIG",".cONfIg",".cONfiG",".cONfig",".cOnFIG",".cOnFIg",".cOnFiG",".cOnFig",".cOnfIG",".cOnfIg",".cOnfiG",".cOnfig",".coNFIG",".coNFIg",".coNFiG",".coNFig",".coNfIG",".coNfIg",".coNfiG",".coNfig",".conFIG",".conFIg",".conFiG",".conFig",".confIG",".confIg",".confiG",".config",".pOM",".pOm",".poM",".pom",".wXS",".wXs",".wxS",".wxs",".xML",".xMl",".xSD",".xSd",".xmL",".xml",".xsD",".xsd",".CONFIG",".CONFIg",".CONFiG",".CONFig",".CONfIG",".CONfIg",".CONfiG",".CONfig",".COnFIG",".COnFIg",".COnFiG",".COnFig",".COnfIG",".COnfIg",".COnfiG",".COnfig",".CoNFIG",".CoNFIg",".CoNFiG",".CoNFig",".CoNfIG",".CoNfIg",".CoNfiG",".CoNfig",".ConFIG",".ConFIg",".ConFiG",".ConFig",".ConfIG",".ConfIg",".ConfiG",".Config",".POM",".POm",".PoM",".Pom",".WXS",".WXs",".WxS",".Wxs",".XML",".XMl",".XSD",".XSd",".XmL",".Xml",".XsD",".Xsd",".cONFIG",".cONFIg",".cONFiG",".cONFig",".cONfIG",".cONfIg",".cONfiG",".cONfig",".cOnFIG",".cOnFIg",".cOnFiG",".cOnFig",".cOnfIG",".cOnfIg",".cOnfiG",".cOnfig",".coNFIG",".coNFIg",".coNFiG",".coNFig",".coNfIG",".coNfIg",".coNfiG",".coNfig",".conFIG",".conFIg",".conFiG",".conFig",".confIG",".confIg",".confiG",".config",".pOM",".pOm",".poM",".pom",".wXS",".wXs",".wxS",".wxs",".xML",".xMl",".xSD",".xSd",".xmL",".xml",".xsD",".xsd",".JAVA",".JAVa",".JAvA",".JAva",".JSP",".JSPX",".JSPx",".JSp",".JSpX",".JSpx",".JaVA",".JaVa",".JavA",".Java",".JsP",".JsPX",".JsPx",".Jsp",".JspX",".Jspx",".jAVA",".jAVa",".jAvA",".jAva",".jSP",".jSPX",".jSPx",".jSp",".jSpX",".jSpx",".jaVA",".jaVa",".javA",".java",".jsP",".jsPX",".jsPx",".jsp",".jspX",".jspx",".JAVA",".JAVa",".JAvA",".JAva",".JSP",".JSPX",".JSPx",".JSp",".JSpX",".JSpx",".JaVA",".JaVa",".JavA",".Java",".JsP",".JsPX",".JsPx",".Jsp",".JspX",".Jspx",".jAVA",".jAVa",".jAvA",".jAva",".jSP",".jSPX",".jSPx",".jSp",".jSpX",".jSpx",".jaVA",".jaVa",".javA",".java",".jsP",".jsPX",".jsPx",".jsp",".jspX",".jspx",".CJS",".CJs",".CjS",".Cjs",".EJS",".EJs",".ES",".ES6",".EjS",".Ejs",".Es",".Es6",".HTM",".HTML",".HTMl",".HTm",".HTmL",".HTml",".HtM",".HtML",".HtMl",".Htm",".HtmL",".Html",".JS",".JSX",".JSx",".Js",".JsX",".Jsx",".MJS",".MJs",".MjS",".Mjs",".TS",".TSX",".TSx",".Ts",".TsX",".Tsx",".VUE",".VUe",".VuE",".Vue",".cJS",".cJs",".cjS",".cjs",".eJS",".eJs",".eS",".eS6",".ejS",".ejs",".es",".es6",".hTM",".hTML",".hTMl",".hTm",".hTmL",".hTml",".htM",".htML",".htMl",".htm",".htmL",".html",".jS",".jSX",".jSx",".js",".jsX",".jsx",".mJS",".mJs",".mjS",".mjs",".tS",".tSX",".tSx",".ts",".tsX",".tsx",".vUE",".vUe",".vuE",".vue",".C",".CC",".CPP",".CPp",".CXX",".CXx",".Cc",".CpP",".Cpp",".CxX",".Cxx",".H",".HPP",".HPp",".HXX",".HXx",".HpP",".Hpp",".HxX",".Hxx",".c",".cC",".cPP",".cPp",".cXX",".cXx",".cc",".cpP",".cpp",".cxX",".cxx",".h",".hPP",".hPp",".hXX",".hXx",".hpP",".hpp",".hxX",".hxx",".ASPX",".ASPx",".ASpX",".ASpx",".AsPX",".AsPx",".AspX",".Aspx",".CS",".Cs",".aSPX",".aSPx",".aSpX",".aSpx",".asPX",".asPx",".aspX",".aspx",".cS",".cs",".CLS",".CLs",".ClS",".Cls",".TGR",".TGr",".TRIGGER",".TRIGGEr",".TRIGGeR",".TRIGGer",".TRIGgER",".TRIGgEr",".TRIGgeR",".TRIGger",".TRIgGER",".TRIgGEr",".TRIgGeR",".TRIgGer",".TRIggER",".TRIggEr",".TRIggeR",".TRIgger",".TRiGGER",".TRiGGEr",".TRiGGeR",".TRiGGer",".TRiGgER",".TRiGgEr",".TRiGgeR",".TRiGger",".TRigGER",".TRigGEr",".TRigGeR",".TRigGer",".TRiggER",".TRiggEr",".TRiggeR",".TRigger",".TgR",".Tgr",".TrIGGER",".TrIGGEr",".TrIGGeR",".TrIGGer",".TrIGgER",".TrIGgEr",".TrIGgeR",".TrIGger",".TrIgGER",".TrIgGEr",".TrIgGeR",".TrIgGer",".TrIggER",".TrIggEr",".TrIggeR",".TrIgger",".TriGGER",".TriGGEr",".TriGGeR",".TriGGer",".TriGgER",".TriGgEr",".TriGgeR",".TriGger",".TrigGER",".TrigGEr",".TrigGeR",".TrigGer",".TriggER",".TriggEr",".TriggeR",".Trigger",".cLS",".cLs",".clS",".cls",".tGR",".tGr",".tRIGGER",".tRIGGEr",".tRIGGeR",".tRIGGer",".tRIGgER",".tRIGgEr",".tRIGgeR",".tRIGger",".tRIgGER",".tRIgGEr",".tRIgGeR",".tRIgGer",".tRIggER",".tRIggEr",".tRIggeR",".tRIgger",".tRiGGER",".tRiGGEr",".tRiGGeR",".tRiGGer",".tRiGgER",".tRiGgEr",".tRiGgeR",".tRiGger",".tRigGER",".tRigGEr",".tRigGeR",".tRigGer",".tRiggER",".tRiggEr",".tRiggeR",".tRigger",".tgR",".tgr",".trIGGER",".trIGGEr",".trIGGeR",".trIGGer",".trIGgER",".trIGgEr",".trIGgeR",".trIGger",".trIgGER",".trIgGEr",".trIgGeR",".trIgGer",".trIggER",".trIggEr",".trIggeR",".trIgger",".triGGER",".triGGEr",".triGGeR",".triGGer",".triGgER",".triGgEr",".triGgeR",".triGger",".trigGER",".trigGEr",".trigGeR",".trigGer",".triggER",".triggEr",".triggeR",".trigger",".PHP",".PHTML",".PHTMl",".PHTmL",".PHTml",".PHp",".PHtML",".PHtMl",".PHtmL",".PHtml",".PhP",".PhTML",".PhTMl",".PhTmL",".PhTml",".Php",".PhtML",".PhtMl",".PhtmL",".Phtml",".pHP",".pHTML",".pHTMl",".pHTmL",".pHTml",".pHp",".pHtML",".pHtMl",".pHtmL",".pHtml",".phP",".phTML",".phTMl",".phTmL",".phTml",".php",".phtML",".phtMl",".phtmL",".phtml",".SCALA",".SCALa",".SCAlA",".SCAla",".SCaLA",".SCaLa",".SCalA",".SCala",".ScALA",".ScALa",".ScAlA",".ScAla",".ScaLA",".ScaLa",".ScalA",".Scala",".sCALA",".sCALa",".sCAlA",".sCAla",".sCaLA",".sCaLa",".sCalA",".sCala",".scALA",".scALa",".scAlA",".scAla",".scaLA",".scaLa",".scalA",".scala",".GO",".Go",".gO",".go"],"autofixExtensions":[".CJS",".CJs",".CjS",".Cjs",".EJS",".EJs",".ES",".ES6",".EjS",".Ejs",".Es",".Es6",".HTM",".HTML",".HTMl",".HTm",".HTmL",".HTml",".HtM",".HtML",".HtMl",".Htm",".HtmL",".Html",".JS",".JSX",".JSx",".Js",".JsX",".Jsx",".MJS",".MJs",".MjS",".Mjs",".TS",".TSX",".TSx",".Ts",".TsX",".Tsx",".VUE",".VUe",".VuE",".Vue",".cJS",".cJs",".cjS",".cjs",".eJS",".eJs",".eS",".eS6",".ejS",".ejs",".es",".es6",".hTM",".hTML",".hTMl",".hTm",".hTmL",".hTml",".htM",".htML",".htMl",".htm",".htmL",".html",".jS",".jSX",".jSx",".js",".jsX",".jsx",".mJS",".mJs",".mjS",".mjs",".tS",".tSX",".tSx",".ts",".tsX",".tsx",".vUE",".vUe",".vuE",".vue"]}
2023-06-01T17:20:14.2985700Z 2023-06-01T17:20:14.275Z snyk-code ---> API request log  => HTTP POST https://deeproxy.snyk.io/bundle �������
2023-06-01T17:20:14.2987129Z UU�r�8�%#�V�a�p	TZa��ÔA�l�2	���#�d&�d������[5t�����dڊ:�-�rbu\Hp,�0RaV�ȴK�vR��kV鳕�v_+9�E�W�䥭U#(�EX���F>:��0E��^匚"��N�j��]M�	�~���dя��>~O����ڕ�QH{Lj����JKo�yB�}��?̋ч��-�xL�����^��2Qk9���(i���Z��	�����V,H�BE�M�mF�;m��<�p�O{�:'$����b~��:ml070sR�-�~�j�����N�f&�����X_MZ.d�}�s��I^Y���7��Ï�'i_��{��	ZI��>�-Fu�7F+SFg
2023-06-01T17:20:14.2987821Z 2023-06-01T17:20:14Z legacycli:1 - [007] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:14.2988106Z 2023-06-01T17:20:14Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:14.2988420Z 2023-06-01T17:20:14Z legacycli:1 - [007] INFO: on 0th handler: &{2 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:14.2988681Z 2023-06-01T17:20:14Z legacycli:1 - [007] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:14.2989058Z 2023-06-01T17:20:14Z legacycli:1 - [007] INFO: signing for deeproxy.snyk.io
2023-06-01T17:20:14.5624122Z 2023-06-01T17:20:14Z legacycli:1 - [008] INFO: req deeproxy.snyk.io:443
2023-06-01T17:20:14.5625084Z 2023-06-01T17:20:14Z legacycli:1 - [008] INFO: Sending request POST https://deeproxy.snyk.io:443/bundle
2023-06-01T17:20:16.7547185Z 2023-06-01T17:20:16Z legacycli:1 - [008] INFO: resp 200 OK
2023-06-01T17:20:16.7584343Z 2023-06-01T17:20:16Z legacycli:1 - [007] INFO: Exiting on EOF
2023-06-01T17:20:16.7610546Z 2023-06-01T17:20:16.751Z snyk-code ---> API request log  <= Response: 200 {"bundleHash":"841b2195a6c42a3ad89ac86ad2ebe06e2c8b1c1676e57f3684e1cf566ca4f778","missingFiles":[]}
2023-06-01T17:20:16.7638512Z 2023-06-01T17:20:16.753Z snyk-code ---> API request log  => HTTP POST https://deeproxy.snyk.io/analysis [object Object]
2023-06-01T17:20:16.7656299Z 2023-06-01T17:20:16Z legacycli:1 - [009] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:16.7657051Z 2023-06-01T17:20:16Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:16.7658908Z 2023-06-01T17:20:16Z legacycli:1 - [009] INFO: on 0th handler: &{2 <nil> 0x11d2520} deeproxy.snyk.io:443
2023-06-01T17:20:16.7659445Z 2023-06-01T17:20:16Z legacycli:1 - [009] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:16.7659939Z 2023-06-01T17:20:16Z legacycli:1 - [009] INFO: signing for deeproxy.snyk.io
2023-06-01T17:20:17.0394727Z 2023-06-01T17:20:17Z legacycli:1 - [010] INFO: req deeproxy.snyk.io:443
2023-06-01T17:20:17.0395455Z 2023-06-01T17:20:17Z legacycli:1 - [010] INFO: Sending request POST https://deeproxy.snyk.io:443/analysis
2023-06-01T17:20:17.1471633Z 2023-06-01T17:20:17Z legacycli:1 - [010] INFO: resp 200 OK
2023-06-01T17:20:17.1520401Z 2023-06-01T17:20:17Z legacycli:1 - [009] INFO: Exiting on EOF
2023-06-01T17:20:17.1672549Z 2023-06-01T17:20:17.145Z snyk-code ---> API request log  <= Response: 200 {"type":"sarif","progress":1,"coverage":[{"isSupported":true,"lang":"EJS","files":1,"type":"SUPPORTED"},{"isSupported":true,"lang":"XML","files":5,"type":"SUPPORTED"},{"isSupported":true,"lang":"JavaScript","files":8,"type":"SUPPORTED"},{"isSupported":false,"lang":"EJS","files":3,"type":"FAILED_PARSING"},{"isSupported":false,"lang":"HTML","files":1,"type":"FAILED_PARSING"}],"status":"COMPLETE","timing":{"queue":5,"fetchingCode":3,"analysis":912,"convertingToSarif":3,"analysisTiming":{"startFetchBundlestoreTimestamp":1685633170790735,"fetchBundleStoreDuration":614.214,"parsingDuration":20.443,"analysisDuration":225.719,"resultsDuration":0.581,"totalAnalysisRequestDuration":862.414,"waitInQueueDuration":0.14}},"sarif":{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"SnykCode","semanticVersion":"1.0.0","version":"1.0.0","rules":[{"id":"javascript/ContentLengthInCode","name":"ContentLengthInCode","shortDescription":{"text":"ContentLengthInCode"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"","text":""},"properties":{"tags":["javascript","ContentLengthInCode","Defect"],"categories":["Defect"],"exampleCommitFixes":[{"commitURL":"https://github.com/beakerbrowser/beaker/commit/d1eb72926467c7b2cb530f42a30ee66f3111959e?diff=split#diff-d436a8870cab44b5fc1d8bf33767b297L322","lines":[{"line":"} else {","lineNumber":319,"lineChange":"none"},{"line":"  if (entry.size) {","lineNumber":320,"lineChange":"none"},{"line":"    res.setHeader('Content-Length', entry.size)","lineNumber":321,"lineChange":"removed"},{"line":"    headers['Content-Length'] = entry.size","lineNumber":271,"lineChange":"added"},{"line":"  }","lineNumber":322,"lineChange":"none"},{"line":"}","lineNumber":323,"lineChange":"none"}]},{"commitURL":"https://github.com/nodeca/nodeca.core/commit/25f8c8d9257eb0089280d9fab0ad3249c5b520ea?diff=split#diff-30d8b0c580b8019054792d34c1e0243aL92","lines":[{"line":"if (Buffer.isBuffer(body)) {","lineNumber":143,"lineChange":"none"},{"line":"  res.setHeader('Content-Length', body.length);","lineNumber":91,"lineChange":"removed"},{"line":"  headers['Content-Length'] = body.length;","lineNumber":144,"lineChange":"added"},{"line":"} else if (body) {","lineNumber":145,"lineChange":"none"},{"line":"  // NOTE: Buffer.byteLength() throws TypeError when argument is not a String.","lineNumber":146,"lineChange":"none"}]},{"commitURL":"https://github.com/driverdan/node-XMLHttpRequest/commit/7898f8863f074062b846228bf2da8c90a4073975?diff=split#diff-5f1f2828afc85dc32e37fabdd36a976cL273","lines":[{"line":"  data = null;","lineNumber":276,"lineChange":"none"},{"line":"} else if (data) {","lineNumber":277,"lineChange":"none"},{"line":"  this.setRequestHeader(\"Content-Length\", Buffer.byteLength(data));","lineNumber":272,"lineChange":"removed"},{"line":"  headers[\"Content-Length\"] = Buffer.byteLength(data);","lineNumber":278,"lineChange":"added"},{"line":"  if (!headers[\"Content-Type\"]) {","lineNumber":280,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":24}},{"id":"javascript/NoHardcodedPasswords","name":"NoHardcodedPasswords","shortDescription":{"text":"Use of Hardcoded Credentials"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text":""},"properties":{"tags":["javascript","NoHardcodedPasswords","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11","lines":[{"line":"ip: 'loading',","lineNumber":8,"lineChange":"removed"},{"line":"ip: '',","lineNumber":8,"lineChange":"added"},{"line":"port: 0,","lineNumber":9,"lineChange":"none"},{"line":"password: 'THisIsCool324HashMan',","lineNumber":10,"lineChange":"removed"},{"line":"password: '',","lineNumber":10,"lineChange":"added"},{"line":"active: true,","lineNumber":11,"lineChange":"none"},{"line":"selfHosted: false,","lineNumber":12,"lineChange":"none"}]},{"commitURL":"https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21","lines":[{"line":" ","lineNumber":17,"lineChange":"none"},{"line":"let errors = loginFormSchema.validate({","lineNumber":18,"lineChange":"none"},{"line":"  email: 'test@test.com',","lineNumber":19,"lineChange":"removed"},{"line":"  password: 'somepassword'","lineNumber":20,"lineChange":"removed"},{"line":"  password: undefined","lineNumber":19,"lineChange":"added"},{"line":"})","lineNumber":21,"lineChange":"none"}]},{"commitURL":"https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26","lines":[{"line":"  email: 'testEmail@email.com',","lineNumber":23,"lineChange":"removed"},{"line":"  email: 'test@email.com',","lineNumber":23,"lineChange":"added"},{"line":"  application: 'test application',","lineNumber":24,"lineChange":"none"},{"line":"  password: 'testPassword'","lineNumber":25,"lineChange":"removed"},{"line":"  password: 'test'","lineNumber":25,"lineChange":"added"},{"line":"});","lineNumber":26,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":522,"cwe":["CWE-798","CWE-259"]}},{"id":"javascript/ReplacementRegex","name":"ReplacementRegex","shortDescription":{"text":"ReplacementRegex"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"","text":""},"properties":{"tags":["javascript","ReplacementRegex","Defect"],"categories":["Defect"],"exampleCommitFixes":[{"commitURL":"https://github.com/mendersoftware/gui/commit/3a28e56638c365e62d6be08224ac9fca5d61239a?diff=split#diff-39fc4832feaa070d647472aea98a21dcL118","lines":[{"line":"// Transform dot notation to bracket notation","lineNumber":116,"lineChange":"none"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;","lineNumber":117,"lineChange":"removed"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;","lineNumber":117,"lineChange":"added"},{"line":"// The regex chunks","lineNumber":119,"lineChange":"none"}]},{"commitURL":"https://github.com/artbels/mongo-table-admin/commit/d02fe1017c3caa7f3389d21df94fb7c72dff318c?diff=split#diff-bba0562eab7e4091eaf0cb9c19c00c1fL118","lines":[{"line":"// Transform dot notation to bracket notation","lineNumber":122,"lineChange":"none"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;","lineNumber":117,"lineChange":"removed"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;","lineNumber":123,"lineChange":"added"},{"line":"// The regex chunks","lineNumber":125,"lineChange":"none"}]},{"commitURL":"https://github.com/appcelerator/titanium_mobile/commit/104ee2a60847a5bffcaac5353205556bdb18cbd4?diff=split#diff-39fc4832feaa070d647472aea98a21dcL96","lines":[{"line":"// Transform dot notation to bracket notation","lineNumber":116,"lineChange":"none"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;","lineNumber":95,"lineChange":"removed"},{"line":"var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;","lineNumber":117,"lineChange":"added"},{"line":"// The regex chunks","lineNumber":119,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":55}},{"id":"javascript/JavascriptSelfAssignment","name":"JavascriptSelfAssignment","shortDescription":{"text":"JavascriptSelfAssignment"},"defaultConfiguration":{"level":"note"},"help":{"markdown":"","text":""},"properties":{"tags":["javascript","JavascriptSelfAssignment","Check"],"categories":["Check"],"exampleCommitFixes":[],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":0}},{"id":"javascript/CopyPasteError","name":"CopyPasteError","shortDescription":{"text":"CopyPasteError"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"","text":""},"properties":{"tags":["javascript","CopyPasteError","Defect"],"categories":["Defect"],"exampleCommitFixes":[{"commitURL":"https://github.com/kevva/bin-wrapper/commit/5d0f50442a5e38cf39a02325088f302e74707222?diff=split#diff-168726dbe96b3ce427e7fedce31bb0bcL58","lines":[{"line":"});","lineNumber":48,"lineChange":"added"},{"line":"}","lineNumber":55,"lineChange":"removed"},{"line":"cmd = cmd;","lineNumber":57,"lineChange":"removed"},{"line":"cmd = cmd || ['--help'];","lineNumber":50,"lineChange":"added"},{"line":"cmd = Array.isArray(cmd) ? cmd : [cmd];","lineNumber":58,"lineChange":"none"}]},{"commitURL":"https://github.com/OpenF2/F2/commit/e8eb0a11cfc45f99d5463e5ca5fe3bb0606bd872?diff=split#diff-26bb009a78102dd27e25fb2b8269b6d4L230","lines":[{"line":"F2.log = function(isPost) {","lineNumber":227,"lineChange":"removed"},{"line":"F2.log = function(message) {","lineNumber":227,"lineChange":"added"},{"line":"  hasReturned = true;","lineNumber":228,"lineChange":"none"},{"line":"  isPost = isPost;","lineNumber":229,"lineChange":"removed"},{"line":"  isPost = message;","lineNumber":229,"lineChange":"added"},{"line":"};","lineNumber":230,"lineChange":"none"}]},{"commitURL":"https://github.com/stdlib-js/stdlib/commit/cf9a59af1d2ae09a327725bcf8626fd7b22a9ef1?diff=split#diff-8f82f3b5f8b5298f62973215db78e453L35","lines":[{"line":"len = 1e6;","lineNumber":34,"lineChange":"none"},{"line":"for ( i = 0; i < len; i++ ) {","lineNumber":35,"lineChange":"none"},{"line":"  i = i;","lineNumber":34,"lineChange":"removed"},{"line":"  i += i * randu();","lineNumber":36,"lineChange":"added"},{"line":"}","lineNumber":37,"lineChange":"added"},{"line":"if ( i !== i ) {","lineNumber":38,"lineChange":"added"},{"line":"}","lineNumber":40,"lineChange":"none"},{"line":" ","lineNumber":41,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":1826}},{"id":"javascript/UseCsurfForExpress","name":"UseCsurfForExpress","shortDescription":{"text":"Cross-Site Request Forgery (CSRF)"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n### Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)","text":""},"properties":{"tags":["javascript","UseCsurfForExpress","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/LukeLin/react-ocean/commit/9a13d57dedf6742ed06321a80ca2a5842fb8a72a?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cR7","lines":[{"line":"import session from 'express-session';","lineNumber":6,"lineChange":"added"},{"line":"import csurf from 'csurf';","lineNumber":7,"lineChange":"added"},{"line":"import config from './config/config.json';","lineNumber":8,"lineChange":"none"},{"line":"import routes from './routes';","lineNumber":9,"lineChange":"none"},{"line":"import allowCrossDomain from './config/allowCrossDomain'","lineNumber":10,"lineChange":"none"},{"line":"import { renderFile } from 'ejs';","lineNumber":11,"lineChange":"none"},{"line":"let app = express();","lineNumber":13,"lineChange":"none"},{"line":"if(process.env.NODE_ENV !== 'production'){","lineNumber":13,"lineChange":"removed"},{"line":"    let webpack = require('webpack');","lineNumber":14,"lineChange":"removed"},{"line":"    let config = require('../create-webpack.config')(true);","lineNumber":15,"lineChange":"removed"},{"line":"    let webpackDevMiddleware = require('webpack-dev-middleware');","lineNumber":16,"lineChange":"removed"},{"line":"    let webpackHotMiddleware = require('webpack-hot-middleware');","lineNumber":17,"lineChange":"removed"},{"line":"    let compiler = webpack(config);","lineNumber":18,"lineChange":"removed"},{"line":"    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));","lineNumber":19,"lineChange":"removed"},{"line":"    app.use(webpackHotMiddleware(compiler));","lineNumber":20,"lineChange":"removed"},{"line":"}","lineNumber":21,"lineChange":"removed"},{"line":"app.set('host', process.env.IP || '127.0.0.1');","lineNumber":15,"lineChange":"added"},{"line":"app.set('port', process.env.PORT || 36000);","lineNumber":16,"lineChange":"added"},{"line":"app.disable('x-powered-by');","lineNumber":17,"lineChange":"added"},{"line":"app.set('view engine', 'ejs');","lineNumber":23,"lineChange":"none"},{"line":"app.set('views', __dirname + '/views');","lineNumber":24,"lineChange":"none"},{"line":"app.engine('html', renderFile);","lineNumber":25,"lineChange":"none"},{"line":"app.use(compress());","lineNumber":27,"lineChange":"none"},{"line":"app.use(logger('dev'));","lineNumber":28,"lineChange":"none"},{"line":"app.use(bodyParser.json());","lineNumber":29,"lineChange":"none"},{"line":"app.use(bodyParser.urlencoded({ extended: true }));","lineNumber":30,"lineChange":"none"},{"line":"app.use(cookieParser());","lineNumber":31,"lineChange":"none"},{"line":"app.use(session({","lineNumber":27,"lineChange":"added"},{"line":"    resave: true,","lineNumber":28,"lineChange":"added"},{"line":"    saveUninitialized: true,","lineNumber":29,"lineChange":"added"},{"line":"    secret: \"notagoodsecret\",","lineNumber":30,"lineChange":"added"},{"line":"    cookie: {httpOnly: true}","lineNumber":31,"lineChange":"added"},{"line":"}));","lineNumber":32,"lineChange":"added"},{"line":"// app.use(favicon(__dirname + '/../public/favicon.ico'));","lineNumber":34,"lineChange":"none"},{"line":"app.use('/static', express.static(__dirname + '/../public', {","lineNumber":35,"lineChange":"none"},{"line":"    maxAge: 86400000","lineNumber":36,"lineChange":"none"},{"line":"}));","lineNumber":37,"lineChange":"none"},{"line":"process.on('uncaughtException', err => {","lineNumber":38,"lineChange":"removed"},{"line":"    console.error(err.message + '\\n' + err.stack);","lineNumber":39,"lineChange":"removed"},{"line":"});","lineNumber":40,"lineChange":"removed"},{"line":"process.on('unhandledRejection', (reason, p) => {","lineNumber":41,"lineChange":"removed"},{"line":"    console.error(\"Unhandled Rejection at: Promise \", p, \" reason: \", reason);","lineNumber":42,"lineChange":"removed"},{"line":"});","lineNumber":43,"lineChange":"removed"},{"line":"process.on('rejectionHandled', (reason, p) => {","lineNumber":44,"lineChange":"removed"},{"line":"    console.warn(\"rejectionHandled at: Promise \", p, \" reason: \", reason);","lineNumber":45,"lineChange":"removed"},{"line":"});","lineNumber":46,"lineChange":"removed"},{"line":"if(process.env.NODE_ENV !== 'production'){","lineNumber":39,"lineChange":"added"},{"line":"    let webpack = require('webpack');","lineNumber":40,"lineChange":"added"},{"line":"    let config = require('../create-webpack.config')(true);","lineNumber":41,"lineChange":"added"},{"line":"    let webpackDevMiddleware = require('webpack-dev-middleware');","lineNumber":42,"lineChange":"added"},{"line":"    let webpackHotMiddleware = require('webpack-hot-middleware');","lineNumber":43,"lineChange":"added"},{"line":"    let compiler = webpack(config);","lineNumber":44,"lineChange":"added"},{"line":"    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));","lineNumber":45,"lineChange":"added"},{"line":"    app.use(webpackHotMiddleware(compiler));","lineNumber":46,"lineChange":"added"},{"line":"}","lineNumber":47,"lineChange":"added"},{"line":"app.use('/', allowCrossDomain);","lineNumber":49,"lineChange":"none"},{"line":"app.use(csurf());","lineNumber":51,"lineChange":"added"},{"line":"app.use(function (req, res, next) {","lineNumber":52,"lineChange":"added"},{"line":"    res.locals.csrftoken = req.session._csrf;","lineNumber":53,"lineChange":"added"},{"line":"    next();","lineNumber":54,"lineChange":"added"},{"line":"});","lineNumber":55,"lineChange":"added"}]},{"commitURL":"https://github.com/OpenSprites/OpenSprites-next/commit/0ff4f1bc633496f7d5abc5f9bdf2a5cce43b080e?diff=split#diff-d3f9f1ac91aa1bf0f85894eb43eb424f26c61fd0e44eeb8c0787f48a0ba511ecR36","lines":[{"line":"const csrf = require('csurf')","lineNumber":35,"lineChange":"added"},{"line":"const session = require('express-session')","lineNumber":36,"lineChange":"none"},{"line":"const sessionStore = require('session-file-store')(session)","lineNumber":37,"lineChange":"none"},{"line":"const exprhbs = require('express-handlebars')","lineNumber":38,"lineChange":"none"},{"line":"const cheerio = require('cheerio')","lineNumber":40,"lineChange":"none"},{"line":"const request = require('request-promise')","lineNumber":41,"lineChange":"none"},{"line":"const marked = require('marked')","lineNumber":43,"lineChange":"none"},{"line":"const base32 = require('base32')","lineNumber":44,"lineChange":"none"},{"line":"const uniqid = require('uniqid').process","lineNumber":45,"lineChange":"none"},{"line":"const shortid = require('shortid').generate","lineNumber":46,"lineChange":"none"},{"line":"const rot = require('rot')","lineNumber":47,"lineChange":"none"},{"line":"const bcrypt = require('bcrypt-as-promised')","lineNumber":48,"lineChange":"added"},{"line":"const tada = '🎉'","lineNumber":50,"lineChange":"added"},{"line":"const db = require('../db')","lineNumber":51,"lineChange":"none"},{"line":"/////////////////////////////////////////////////////","lineNumber":53,"lineChange":"none"},{"line":"const badWords = '\\\\o(shtyl|(\\\\j*?)shpx(\\\\j*?)|s(h|i|\\\\*)?p?x(vat?)?|(\\\\j*?)fu(v|1|y)g(\\\\j*?)|pe(n|@|\\\\*)c(cre|crq|l)?|(onq|qhzo|wnpx)?(n|@)ff(u(b|0)yr|jvcr)?|(onq|qhzo|wnpx)?(n|@)efr(u(b|0)yr|jvcr)?|onfgneq|o(v|1|y|\\\\*)?g?pu(r?f)?|phag|phz|(tbq?)?qnz(a|z)(vg)?|qbhpur(\\\\j*?)|(arj)?snt(tbg|tng)?|sevt(tra|tva|tvat)?|bzst|cvff(\\\\j*?)|cbea|encr|ergneq|frk|f r k|fung|fyhg|gvg|ju(b|0)er(\\\\j*?)|jg(s|su|u))(f|rq)?\\\\o' // rot13","lineNumber":55,"lineChange":"none"},{"line":"const signupProjectId = 115307769 // null to disable check","lineNumber":56,"lineChange":"none"},{"line":"const requireEmailConfirmedToShare = false","lineNumber":57,"lineChange":"none"},{"line":"/////////////////////////////////////////////////////////","lineNumber":59,"lineChange":"none"},{"line":"const badWordsRegex = new RegExp(rot(badWords, -13), 'gi')","lineNumber":61,"lineChange":"none"},{"line":"const hasBadWords = text => text.match(badWordsRegex)","lineNumber":62,"lineChange":"none"},{"line":"const replaceBadWords = (text, w='⋆⋆⋆⋆') => text.replace(badWordsRegex, w)","lineNumber":63,"lineChange":"none"},{"line":"/////////////////////////////////////////////////////////","lineNumber":65,"lineChange":"none"},{"line":"let app = express()","lineNumber":67,"lineChange":"none"},{"line":"app.engine('hbs', exprhbs.create({","lineNumber":69,"lineChange":"none"},{"line":"  defaultLayout: 'main',","lineNumber":70,"lineChange":"none"},{"line":"  extname: '.hbs',","lineNumber":71,"lineChange":"none"},{"line":"  layoutsDir: 'public/views/layouts/',","lineNumber":72,"lineChange":"none"},{"line":"  partialsDir: 'public/views/partials/',","lineNumber":73,"lineChange":"none"},{"line":"  helpers: {","lineNumber":75,"lineChange":"none"},{"line":"    md: raw => marked(raw, { sanitize: true }),","lineNumber":76,"lineChange":"none"},{"line":"    json: raw => JSON.stringify(raw),","lineNumber":77,"lineChange":"none"},{"line":"    timeago: raw => `<span class='timeago'>${raw}</span>`","lineNumber":78,"lineChange":"none"},{"line":"  }","lineNumber":79,"lineChange":"none"},{"line":"}).engine)","lineNumber":80,"lineChange":"none"},{"line":"app.set('views', 'public/views')","lineNumber":82,"lineChange":"none"},{"line":"app.set('view engine', 'hbs')","lineNumber":83,"lineChange":"none"},{"line":"app.set('trust proxy', 1)","lineNumber":85,"lineChange":"none"},{"line":"app.set('json spaces', 2)","lineNumber":86,"lineChange":"none"},{"line":"app.use(session({","lineNumber":88,"lineChange":"none"},{"line":"  secret: 'thisandagainplsexplain',","lineNumber":86,"lineChange":"removed"},{"line":"  secret: process.env.session_secret,","lineNumber":89,"lineChange":"added"},{"line":"  cookie: { secure: false }, // enable if running on HTTPS","lineNumber":90,"lineChange":"none"},{"line":"  resave: true,","lineNumber":91,"lineChange":"none"},{"line":"  saveUninitialized: true,","lineNumber":92,"lineChange":"none"},{"line":"  store: new sessionStore({","lineNumber":93,"lineChange":"none"},{"line":"    path: 'db/session',","lineNumber":94,"lineChange":"none"},{"line":"    logFn: ()=>{}","lineNumber":95,"lineChange":"none"},{"line":"  })","lineNumber":96,"lineChange":"none"},{"line":"}))","lineNumber":97,"lineChange":"none"},{"line":"const upload = multer({","lineNumber":99,"lineChange":"none"},{"line":"  storage: multer.diskStorage({","lineNumber":100,"lineChange":"none"},{"line":"    destination: (req, file, cb) => cb(null, path.join(__dirname, '../../', 'db/resource')),","lineNumber":101,"lineChange":"none"},{"line":"    filename: (req, file, cb) => {","lineNumber":102,"lineChange":"none"},{"line":"      if(!req.session.user) cb(null, false)","lineNumber":103,"lineChange":"none"},{"line":"      let filename = base32.encode(","lineNumber":105,"lineChange":"none"},{"line":"        shortid()","lineNumber":106,"lineChange":"none"},{"line":"      )","lineNumber":107,"lineChange":"none"},{"line":"      cb(null, filename)","lineNumber":109,"lineChange":"none"},{"line":"    }","lineNumber":110,"lineChange":"none"},{"line":"  })","lineNumber":111,"lineChange":"none"},{"line":"})","lineNumber":112,"lineChange":"none"},{"line":"app.use(bodyParser.json())","lineNumber":114,"lineChange":"none"},{"line":"app.use(bodyParser.urlencoded({ extended: true }))","lineNumber":112,"lineChange":"removed"},{"line":"app.use(function(req, res, next) {","lineNumber":114,"lineChange":"removed"},{"line":"  req.session.udata = db.user.get(req.session.user || '')","lineNumber":115,"lineChange":"removed"},{"line":"  if(req.session.user && !db.user.exists(req.session.user)) {","lineNumber":117,"lineChange":"removed"},{"line":"    delete req.session.user","lineNumber":118,"lineChange":"removed"},{"line":"  }","lineNumber":119,"lineChange":"removed"},{"line":"  next()","lineNumber":121,"lineChange":"removed"},{"line":"})","lineNumber":122,"lineChange":"removed"},{"line":"app.use(bodyParser.urlencoded({ extended: false }))","lineNumber":115,"lineChange":"added"},{"line":"function mustSignIn(req, res, next) {","lineNumber":124,"lineChange":"none"},{"line":"  if(req.session.user) {","lineNumber":125,"lineChange":"none"},{"line":"    next()","lineNumber":126,"lineChange":"none"},{"line":"  } else {","lineNumber":127,"lineChange":"none"},{"line":"    req.session.r = req.originalUrl","lineNumber":128,"lineChange":"none"},{"line":"    res.redirect('/signin')","lineNumber":129,"lineChange":"none"},{"line":"  }","lineNumber":130,"lineChange":"none"},{"line":"}","lineNumber":131,"lineChange":"none"},{"line":"app.use(csrf({","lineNumber":126,"lineChange":"added"},{"line":"  value: req => req.body.csrf","lineNumber":127,"lineChange":"added"},{"line":"}))","lineNumber":128,"lineChange":"added"},{"line":"app.use(function(err, req, res, next) {","lineNumber":130,"lineChange":"added"},{"line":"  if(err.code !== 'EBADCSRFTOKEN') return next(err)","lineNumber":131,"lineChange":"added"},{"line":"  res.status(403).render('403', {","lineNumber":133,"lineChange":"added"},{"line":"    user: req.session.user","lineNumber":134,"lineChange":"added"},{"line":"  })","lineNumber":135,"lineChange":"added"},{"line":"})","lineNumber":136,"lineChange":"added"}]},{"commitURL":"https://github.com/pietrzakadrian/bank/commit/c37779b4b85c031001c5d84aa259adface1d6602?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L18","lines":[{"line":"const app = express();","lineNumber":17,"lineChange":"none"},{"line":"const server = require('http').Server(app, {","lineNumber":18,"lineChange":"none"},{"line":"  transports: ['websocket', 'polling'],","lineNumber":19,"lineChange":"none"},{"line":"});","lineNumber":20,"lineChange":"none"},{"line":"const io = require('socket.io')(server, { pingTimeout: 60000 });","lineNumber":21,"lineChange":"none"},{"line":"const cron = require('node-cron');","lineNumber":22,"lineChange":"none"},{"line":"const swaggerUi = require('swagger-ui-express');","lineNumber":23,"lineChange":"none"},{"line":"const swaggerDocument = require('./utils/swagger.json');","lineNumber":24,"lineChange":"none"},{"line":"const db = require('./config/db.config');","lineNumber":25,"lineChange":"none"},{"line":"const env = require('./config/env.config');","lineNumber":26,"lineChange":"none"},{"line":"const Op = db.Sequelize.Op;","lineNumber":27,"lineChange":"none"},{"line":"const cookieParser = require('cookie-parser');","lineNumber":28,"lineChange":"added"},{"line":"const csrf = require('csurf');","lineNumber":29,"lineChange":"added"},{"line":"app.use(bodyParser.urlencoded({ extended: true }));","lineNumber":31,"lineChange":"none"},{"line":"app.use(bodyParser.json());","lineNumber":32,"lineChange":"none"},{"line":"app.use(","lineNumber":33,"lineChange":"none"},{"line":"  bodyParser.json({","lineNumber":34,"lineChange":"none"},{"line":"    limit: '2000kb',","lineNumber":35,"lineChange":"none"},{"line":"  }),","lineNumber":36,"lineChange":"none"},{"line":");","lineNumber":37,"lineChange":"none"},{"line":"app.disable('x-powered-by');","lineNumber":38,"lineChange":"none"},{"line":"app.use(cors());","lineNumber":39,"lineChange":"none"},{"line":"app.use(cookieParser());","lineNumber":40,"lineChange":"added"},{"line":"app.use((req, res, next) => {","lineNumber":42,"lineChange":"none"},{"line":"  res.header('Access-Control-Allow-Origin', '*');","lineNumber":43,"lineChange":"none"},{"line":"  res.header(","lineNumber":44,"lineChange":"none"},{"line":"    'Access-Control-Allow-Headers',","lineNumber":45,"lineChange":"none"},{"line":"    'Origin, X-Requested-With, Content-Type, Accept, Authorization',","lineNumber":46,"lineChange":"none"},{"line":"  );","lineNumber":47,"lineChange":"none"},{"line":"  if (req.method === 'OPTIONS') {","lineNumber":49,"lineChange":"none"},{"line":"    res.header('Access-Control-Allow-Methods', 'PUT, POST, PATCH, DELETE, GET');","lineNumber":50,"lineChange":"none"},{"line":"    return res.status(200).json({});","lineNumber":51,"lineChange":"none"},{"line":"  }","lineNumber":52,"lineChange":"none"},{"line":"  next();","lineNumber":53,"lineChange":"none"},{"line":"});","lineNumber":54,"lineChange":"none"},{"line":"app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));","lineNumber":56,"lineChange":"none"},{"line":"app.use(morgan('dev'));","lineNumber":57,"lineChange":"added"},{"line":"require('./routes/currency.route.js')(app);","lineNumber":59,"lineChange":"added"},{"line":"app.use(csrf({ cookie: true }));","lineNumber":60,"lineChange":"added"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":701,"cwe":["CWE-352"]}},{"id":"javascript/NoRateLimitingForExpensiveWebOperation","name":"NoRateLimitingForExpensiveWebOperation","shortDescription":{"text":"Allocation of Resources Without Limits or Throttling"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.","text":""},"properties":{"tags":["javascript","NoRateLimitingForExpensiveWebOperation","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/comatory/fb2iCal/commit/6a1ef614ade7ba821009dbce4a615d448751a449?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R5","lines":[{"line":"const rateLimit = require('express-rate-limit')","lineNumber":4,"lineChange":"added"},{"line":"const crawl = require('./crawler')","lineNumber":6,"lineChange":"none"},{"line":"const parseHTML = require('./parser')","lineNumber":7,"lineChange":"none"},{"line":"const generateICS = require('./ics')","lineNumber":8,"lineChange":"none"},{"line":"const { genericErrorHandler, checkFBURL } = require('./middlewares')","lineNumber":9,"lineChange":"none"},{"line":"const port = process.env.PORT","lineNumber":11,"lineChange":"none"},{"line":"const app = express()","lineNumber":12,"lineChange":"none"},{"line":"app.set('view engine', 'ejs')","lineNumber":14,"lineChange":"none"},{"line":"app.set('views', path.join(__dirname, 'views'))","lineNumber":15,"lineChange":"none"},{"line":"app.use(express.static(path.join(__dirname, 'public')))","lineNumber":17,"lineChange":"none"},{"line":"app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))","lineNumber":18,"lineChange":"none"},{"line":"app.use(bodyParser())","lineNumber":19,"lineChange":"none"},{"line":"app.get('/', (req, res) => {","lineNumber":21,"lineChange":"none"},{"line":"  res.render('index')","lineNumber":22,"lineChange":"none"},{"line":"})","lineNumber":23,"lineChange":"none"},{"line":"app.get('/error', (req, res) => {","lineNumber":25,"lineChange":"none"},{"line":"  const error = req.error || req.query.error || ''","lineNumber":26,"lineChange":"none"},{"line":"  res","lineNumber":28,"lineChange":"none"},{"line":"    .status(500)","lineNumber":29,"lineChange":"none"},{"line":"    .render('error', { error })","lineNumber":30,"lineChange":"none"},{"line":"})","lineNumber":31,"lineChange":"none"},{"line":"// NOTE: Capture all unkown URLs","lineNumber":38,"lineChange":"none"},{"line":"app.get('*', (req, res) => {","lineNumber":39,"lineChange":"none"},{"line":"  res.status(400).render('404')","lineNumber":40,"lineChange":"none"},{"line":"})","lineNumber":41,"lineChange":"none"},{"line":"app.use('/download', checkFBURL)","lineNumber":43,"lineChange":"none"},{"line":"app.use('/download', rateLimit())","lineNumber":39,"lineChange":"added"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":1164,"cwe":["CWE-770"]}},{"id":"javascript/NoHardcodedCredentials","name":"NoHardcodedCredentials","shortDescription":{"text":"Use of Hardcoded Credentials"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text":""},"properties":{"tags":["javascript","NoHardcodedCredentials","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/IBM/smart-email-support/commit/a21929524dc0906fc32369d65acfa417335822cc?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL63","lines":[{"line":"   }","lineNumber":60,"lineChange":"none"},{"line":"   var config = require('./config.json');","lineNumber":61,"lineChange":"added"},{"line":"   process.env.support_email_id = 'patternemailautomation@gmail.com';","lineNumber":62,"lineChange":"none"},{"line":"   process.env.sendgrid_api_key = '';","lineNumber":62,"lineChange":"removed"},{"line":"   me = '';","lineNumber":63,"lineChange":"removed"},{"line":"   password = ''","lineNumber":64,"lineChange":"removed"},{"line":"   process.env.sendgrid_api_key = config.sendgrid_api_key;","lineNumber":63,"lineChange":"added"},{"line":"   me = config.me;","lineNumber":64,"lineChange":"added"},{"line":"   password = config.password","lineNumber":65,"lineChange":"added"},{"line":"    //process.exit(1);","lineNumber":66,"lineChange":"none"},{"line":"}","lineNumber":67,"lineChange":"none"},{"line":"const sgMail = require('@sendgrid/mail');","lineNumber":402,"lineChange":"none"},{"line":"sgMail.setApiKey(sendgrid_api_key);","lineNumber":403,"lineChange":"none"},{"line":"const msg = {","lineNumber":404,"lineChange":"none"},{"line":"  to: emailDetails.emailSection.from,","lineNumber":405,"lineChange":"none"}]},{"commitURL":"https://github.com/readium/readium-desktop/commit/2bedb5b474ba0a485a9f981aea8ffa43abad164a?diff=split#diff-78b4461ec5c61ac524f5719113995d00L183","lines":[{"line":"private downloadCatalog (user?: User) {","lineNumber":186,"lineChange":"none"},{"line":"    let username = \"\";","lineNumber":182,"lineChange":"removed"},{"line":"    let password = \"\";","lineNumber":183,"lineChange":"removed"},{"line":"}","lineNumber":188,"lineChange":"removed"},{"line":"request.get(this.props.opds.url, (error: any, response: any, body: any) => {","lineNumber":190,"lineChange":"removed"},{"line":"let req = request.get(this.props.opds.url, (error: any, response: any, body: any) => {","lineNumber":187,"lineChange":"added"},{"line":"    if (response && response.statusCode === 401) {","lineNumber":191,"lineChange":"none"},{"line":"        this.props.openDialog(","lineNumber":192,"lineChange":"none"},{"line":"});","lineNumber":229,"lineChange":"added"},{"line":"if (user) {","lineNumber":230,"lineChange":"added"},{"line":"    req.auth(user.username, user.password);","lineNumber":231,"lineChange":"added"},{"line":"}","lineNumber":232,"lineChange":"added"},{"line":"}","lineNumber":233,"lineChange":"none"}]},{"commitURL":"https://github.com/dfoderick/fullcyclereact/commit/a6abd97bd776ce56da8ac321ad0e1b500f67721d?diff=split#diff-ca64812ac15b141271f726a5a95a3402L22","lines":[{"line":"const redis_port = 6379","lineNumber":19,"lineChange":"removed"},{"line":"const redis_host = serverhost","lineNumber":20,"lineChange":"removed"},{"line":"const redis_password = ''","lineNumber":21,"lineChange":"removed"},{"line":"//Message envelope for putting messages on the bus","lineNumber":23,"lineChange":"removed"},{"line":"function redisclient(){","lineNumber":98,"lineChange":"none"},{"line":"  var client = redis.createClient(redis_port, redis_host, {no_ready_check: true});","lineNumber":99,"lineChange":"removed"},{"line":"  client.auth(redis_password, function (err) {","lineNumber":100,"lineChange":"removed"},{"line":"  var client = redis.createClient(services.redis.port, services.redis.host, {no_ready_check: true});","lineNumber":54,"lineChange":"added"},{"line":"  client.auth(services.redis.password, function (err) {","lineNumber":55,"lineChange":"added"},{"line":"     if (err) throw err;","lineNumber":101,"lineChange":"none"},{"line":"  });","lineNumber":102,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":210,"cwe":["CWE-798"]}},{"id":"javascript/DisablePoweredBy","name":"DisablePoweredBy","shortDescription":{"text":"Information Exposure"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n### Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.","text":""},"properties":{"tags":["javascript","DisablePoweredBy","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/opencollective/opencollective-frontend/commit/17c5c31da6975fd0c3e032d19f6d733af4c66036?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79R8","lines":[{"line":"const helmet = require('helmet');","lineNumber":7,"lineChange":"added"},{"line":"const cookieParser = require('cookie-parser');","lineNumber":8,"lineChange":"none"},{"line":"const cloudflareIps = require('cloudflare-ip/ips.json');","lineNumber":9,"lineChange":"none"},{"line":"const intl = require('./intl');","lineNumber":11,"lineChange":"none"},{"line":"const logger = require('./logger');","lineNumber":12,"lineChange":"none"},{"line":"const loggerMiddleware = require('./logger-middleware');","lineNumber":13,"lineChange":"none"},{"line":"const routes = require('./routes');","lineNumber":14,"lineChange":"none"},{"line":"const server = express();","lineNumber":16,"lineChange":"none"},{"line":"server.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'].concat(cloudflareIps));","lineNumber":18,"lineChange":"none"},{"line":"const env = process.env.NODE_ENV;","lineNumber":20,"lineChange":"none"},{"line":"const dev = env === 'development';","lineNumber":21,"lineChange":"none"},{"line":"const app = next({ dev, dir: path.dirname(__dirname) });","lineNumber":23,"lineChange":"none"},{"line":"const port = process.env.PORT;","lineNumber":25,"lineChange":"none"},{"line":"app.prepare().then(() => {","lineNumber":27,"lineChange":"none"},{"line":"  server.use(loggerMiddleware.logger);","lineNumber":28,"lineChange":"none"},{"line":"  server.use(helmet());","lineNumber":30,"lineChange":"added"}]},{"commitURL":"https://github.com/jkettmann/universal-react-relay-starter-kit/commit/dfab2940d6a0678ede545c341af3cb9c51d6b687?diff=split#diff-da96dcbe471b47bbc5ec4aee2520997e363c827e6249d1834d4fff6f8d0df6c8R3","lines":[{"line":"import helmet from 'helmet'","lineNumber":2,"lineChange":"added"},{"line":"import cookieParser from 'cookie-parser'","lineNumber":3,"lineChange":"none"},{"line":"import Aws from 'aws-sdk'","lineNumber":4,"lineChange":"none"},{"line":"import S3Router from 'react-s3-uploader/s3router'","lineNumber":5,"lineChange":"none"},{"line":"import debug from 'debug'","lineNumber":6,"lineChange":"none"},{"line":"import dotenv from 'dotenv'","lineNumber":7,"lineChange":"none"},{"line":"dotenv.config()","lineNumber":9,"lineChange":"none"},{"line":"const log = debug('server')","lineNumber":10,"lineChange":"none"},{"line":"const PORT = process.env.PORT_APP","lineNumber":12,"lineChange":"none"},{"line":"const DEV = process.env.NODE_ENV === 'development'","lineNumber":13,"lineChange":"none"},{"line":"let isBuilt = false","lineNumber":15,"lineChange":"none"},{"line":"Aws.config.update({","lineNumber":17,"lineChange":"none"},{"line":"  accessKeyId: process.env.AWS_ACCESS_KEY_ID,","lineNumber":18,"lineChange":"none"},{"line":"  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,","lineNumber":19,"lineChange":"none"},{"line":"})","lineNumber":20,"lineChange":"none"},{"line":"const app = express()","lineNumber":22,"lineChange":"none"},{"line":"app.use(helmet())","lineNumber":24,"lineChange":"added"}]},{"commitURL":"https://github.com/mozilla/send/commit/4e4dc5e168074f150399dbceff7ea2c617800ca9?diff=split#diff-2142bb87b5c843eadf1da04062c8832170784a072d7e940262166bc0e66d1f07R6","lines":[{"line":"const helmet = require('helmet');","lineNumber":5,"lineChange":"added"},{"line":"const bytes = require('bytes');","lineNumber":6,"lineChange":"none"},{"line":"const conf = require('./config.js');","lineNumber":7,"lineChange":"none"},{"line":"const storage = require('./storage.js');","lineNumber":8,"lineChange":"none"},{"line":"const notLocalHost = conf.notLocalHost;","lineNumber":10,"lineChange":"none"},{"line":"const mozlog = require('./log.js');","lineNumber":12,"lineChange":"none"},{"line":"const log = mozlog('portal.server');","lineNumber":14,"lineChange":"none"},{"line":"const app = express();","lineNumber":16,"lineChange":"none"},{"line":"app.engine('handlebars', exphbs({ defaultLayout: 'main' }));","lineNumber":18,"lineChange":"none"},{"line":"app.set('view engine', 'handlebars');","lineNumber":19,"lineChange":"none"},{"line":"app.use(helmet());","lineNumber":21,"lineChange":"added"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":991,"cwe":["CWE-200"]}},{"id":"javascript/HttpToHttps","name":"HttpToHttps","shortDescription":{"text":"Cleartext Transmission of Sensitive Information"},"defaultConfiguration":{"level":"warning"},"help":{"markdown":"\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.","text":""},"properties":{"tags":["javascript","HttpToHttps","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/Rocket1184/qq-bot-rebown/commit/5255a8398cf1d80f60e182c53e8532c7562e76c2?diff=split#diff-62a4be7247c4abe75f2cc11746422b86L12","lines":[{"line":"'use strict';","lineNumber":9,"lineChange":"none"},{"line":"const http = require('http');","lineNumber":11,"lineChange":"removed"},{"line":"const https = require('https');","lineNumber":11,"lineChange":"added"},{"line":"function http2https(link) {","lineNumber":13,"lineChange":"added"},{"line":" ","lineNumber":20,"lineChange":"none"},{"line":"function shortenUrl(url) {","lineNumber":21,"lineChange":"none"}]},{"commitURL":"https://github.com/qmachine/qmachine/commit/1f9f08b5b1f9be78dd6625d93ec934befb255df7?diff=split#diff-54387be96a26d96583a0c7585e8607c5L56","lines":[{"line":"};","lineNumber":57,"lineChange":"none"},{"line":"http = require('http');","lineNumber":55,"lineChange":"removed"},{"line":"https = require('https');","lineNumber":59,"lineChange":"added"},{"line":"http_GET = function (x) {","lineNumber":57,"lineChange":"removed"},{"line":"https_GET = function (x) {","lineNumber":61,"lineChange":"added"}]},{"commitURL":"https://github.com/vmware-samples/vmware-blockchain-samples/commit/0e45b89996cc8ae87d4f6bd2240720fa70daccd1?diff=split#diff-21a000feb5ae912714215842b628c63cL3","lines":[{"line":"const fs = require(\"fs\");","lineNumber":7,"lineChange":"none"},{"line":"const http = require(\"http\");","lineNumber":2,"lineChange":"removed"},{"line":"const https = require(\"https\");","lineNumber":8,"lineChange":"added"},{"line":"verifyMigrations();","lineNumber":10,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":631,"cwe":["CWE-319"]}},{"id":"javascript/HardcodedNonCryptoSecret","name":"HardcodedNonCryptoSecret","shortDescription":{"text":"Hardcoded Secret"},"defaultConfiguration":{"level":"error"},"help":{"markdown":"## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text":""},"properties":{"tags":["javascript","HardcodedNonCryptoSecret","Security"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/krakenjs/lusca/commit/a871c0a7f2b6641fb882d2b902b0910f6ac60b7b?diff=split#diff-398ed3b014436a5204583323ea29320bL7","lines":[{"line":" ","lineNumber":3,"lineChange":"none"},{"line":"var crypto = require('crypto');","lineNumber":4,"lineChange":"none"},{"line":"var SECRET = '_csrfSecret';","lineNumber":6,"lineChange":"removed"},{"line":"var SECRET;","lineNumber":5,"lineChange":"added"},{"line":"var LENGTH = 10;","lineNumber":7,"lineChange":"none"}]},{"commitURL":"https://github.com/koajs/generic-session/commit/9248ff8055dd226ccf45c67e329cae587741c077?diff=split#diff-26b5d3c164692791a09225732456b5ecL28","lines":[{"line":"app.use(session({","lineNumber":26,"lineChange":"none"},{"line":"  secret: 'koa-session-secret',","lineNumber":27,"lineChange":"removed"},{"line":"  key: 'koss:test_sid',","lineNumber":27,"lineChange":"added"},{"line":"  cookie: {","lineNumber":28,"lineChange":"none"},{"line":"    httpOnly: true,","lineNumber":29,"lineChange":"removed"},{"line":"     maxAge: 86400,","lineNumber":30,"lineChange":"none"}]},{"commitURL":"https://github.com/haiwen/seahub/commit/2f0fb01f021374d0afe8bea71f85eda464c1a672?diff=split#diff-cd2b9459006cf24c29c3b74771e950d5L21","lines":[{"line":"  fileName: fileName,","lineNumber":18,"lineChange":"none"},{"line":"  dtableUuid: dtableUuid,","lineNumber":19,"lineChange":"none"},{"line":"  accessToken: '12345678'","lineNumber":20,"lineChange":"removed"},{"line":"  accessToken: ''","lineNumber":20,"lineChange":"added"},{"line":"};","lineNumber":21,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":657,"cwe":["CWE-547"]}},{"id":"javascript/NoSqli","name":"NoSqli","shortDescription":{"text":"NoSQL Injection"},"defaultConfiguration":{"level":"error"},"help":{"markdown":"## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.","text":""},"properties":{"tags":["javascript","NoSqli","Security","SourceHttpBody","Taint"],"categories":["Security"],"exampleCommitFixes":[{"commitURL":"https://github.com/JasonEtco/flintcms/commit/4ae34238ce39fde00dfa15082397541758c07af1?diff=split#diff-9de779015fec61fc28e3fc1b3a62d1fdL8","lines":[{"line":"const sendEmail = require('../../utils/emails/sendEmail')","lineNumber":5,"lineChange":"none"},{"line":"const User = mongoose.model('User')","lineNumber":7,"lineChange":"none"},{"line":"const UserGroup = mongoose.model('UserGroup')","lineNumber":8,"lineChange":"none"},{"line":"const router = express.Router()","lineNumber":9,"lineChange":"none"},{"line":"})","lineNumber":101,"lineChange":"none"},{"line":"router.get('/verify', async (req, res) => {","lineNumber":103,"lineChange":"none"},{"line":"  const token = req.query.t","lineNumber":104,"lineChange":"removed"},{"line":"  const token = req.query.t.toString()","lineNumber":104,"lineChange":"added"},{"line":"  const user = await User.findOne({ token })","lineNumber":105,"lineChange":"none"},{"line":"  if (!user) {","lineNumber":107,"lineChange":"none"}]},{"commitURL":"https://github.com/bkimminich/juice-shop/commit/5b9e4fe01a989e38be3bc7f52718c0c9d2dc2d6f?diff=split#diff-3ee9e2e81d2a5119de6e749e4d7d088aL7","lines":[{"line":"module.exports = function trackOrder () {","lineNumber":5,"lineChange":"none"},{"line":"  return (req, res) => {","lineNumber":6,"lineChange":"none"},{"line":"    if (utils.notSolved(challenges.reflectedXssChallenge) && utils.contains(req.params.id, '<script>alert(\"XSS\")</script>')) {","lineNumber":7,"lineChange":"none"},{"line":"      utils.solve(challenges.reflectedXssChallenge)","lineNumber":8,"lineChange":"none"},{"line":"    }","lineNumber":9,"lineChange":"none"},{"line":"    db.orders.find({ orderId: req.params.id }).then(order => {","lineNumber":10,"lineChange":"removed"},{"line":"    req.params.id = decodeURIComponent(req.params.id)","lineNumber":10,"lineChange":"added"},{"line":"    db.orders.find({ $where: \"this.orderId === '\" + req.params.id + \"'\" }).then(order => {","lineNumber":11,"lineChange":"added"},{"line":"      const result = utils.queryResultToJson(order)","lineNumber":12,"lineChange":"none"},{"line":"      if (utils.notSolved(challenges.noSqlInjectionChallenge2) && result.data.length > 1) {","lineNumber":13,"lineChange":"added"},{"line":"if (result.data[0] === undefined) {","lineNumber":16,"lineChange":"none"}]},{"commitURL":"https://github.com/reviewninja/review.ninja/commit/17361111027001a330f930557cd3ff6ab04741d4?diff=split#diff-1e55193185e421a5669bbadca9231cc4L8","lines":[{"line":"var webhook = require('../services/webhook');","lineNumber":5,"lineChange":"none"},{"line":"// models","lineNumber":6,"lineChange":"none"},{"line":"var User = require('mongoose').model('User');","lineNumber":7,"lineChange":"none"},{"line":"var contains = function(events) {","lineNumber":9,"lineChange":"none"},{"line":"},","lineNumber":74,"lineChange":"none"},{"line":"create: function(req, done) {","lineNumber":76,"lineChange":"none"},{"line":"    User.findOne({uuid: req.args.user_uuid}, function(err, user) {","lineNumber":77,"lineChange":"removed"},{"line":"    User.findOne({uuid: req.user.uuid}, function(err, user) {","lineNumber":77,"lineChange":"added"},{"line":"        if(err || !user) {","lineNumber":79,"lineChange":"none"},{"line":"fun: 'createHook',","lineNumber":85,"lineChange":"none"},{"line":"arg: {","lineNumber":86,"lineChange":"none"},{"line":"    user: req.args.user,","lineNumber":87,"lineChange":"none"},{"line":"    repo: req.args.repo,","lineNumber":88,"lineChange":"none"},{"line":"    name: 'web',","lineNumber":89,"lineChange":"none"}]}],"exampleCommitDescriptions":[],"precision":"very-high","repoDatasetSize":69,"cwe":["CWE-89"]}}]}},"results":[{"ruleId":"javascript/ContentLengthInCode","ruleIndex":0,"level":"warning","message":{"text":"The Content-Length header should be set by the browser, not in code (in setHeader).","markdown":"The {0} header should be set by the browser, not in code (in {1}).","arguments":["[Content-Length](0)","[setHeader](1)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"utils.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":25,"endLine":25,"startColumn":9,"endColumn":18}}}],"fingerprints":{"0":"9b61d02f9e011dc4484378aae9c62a2300d8aa8deabd12e74db345ea8ca76337","1":"928d7c29.4773f344.607187b5.1f018575.662364c8.009ccd75.e271a0bf.3cf10806.928d7c29.4773f344.607187b5.1f018575.662364c8.009ccd75.e271a0bf.3cf10806"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"utils.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":25,"endLine":25,"startColumn":20,"endColumn":36}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"utils.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":25,"endLine":25,"startColumn":9,"endColumn":18}}}}]}]}],"properties":{"priorityScore":506,"priorityScoreFactors":[{"label":true,"type":"hotFileCodeFlow"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoHardcodedPasswords","ruleIndex":1,"level":"warning","message":{"text":"Do not hardcode passwords in code. Found hardcoded password used in password.","markdown":"Do not hardcode passwords in code. Found hardcoded password used in {0}.","arguments":["[password](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"mongoose-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":52,"endLine":52,"startColumn":35,"endColumn":43}}}],"fingerprints":{"0":"bb47b7d48852e26400b10ea5fd18a79dda541ca243f28818319392ef255ca0c1","1":"12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d.12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"mongoose-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":52,"endLine":52,"startColumn":35,"endColumn":43}}}}]}]}],"properties":{"priorityScore":512,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileCodeFlow"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoHardcodedPasswords","ruleIndex":1,"level":"warning","message":{"text":"Do not hardcode passwords in code. Found hardcoded password used in typeorm.createConnection.","markdown":"Do not hardcode passwords in code. Found hardcoded password used in {0}.","arguments":["[typeorm.createConnection](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"typeorm-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":12,"endLine":12,"startColumn":3,"endColumn":11}}}],"fingerprints":{"0":"714f86014c4086a83e6ec5960f6b9e15a6bcbc65618ec26be52f928c28e1e54e","1":"12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2036d596.0d9a312e.4773f344.bd65d204.515f1676.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"typeorm-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":6,"endLine":6,"startColumn":1,"endColumn":25}}}}]}]}],"properties":{"priorityScore":562,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/ReplacementRegex","ruleIndex":2,"level":"warning","message":{"text":"The pattern regex in replace may be improved to /\\r?\\n$/to handle different new lines.","markdown":"The pattern {0} in {1} may be improved to {2}{3}.","arguments":["[regex](0)","[replace](1)","[/\\r?\\n$/](2)","[to handle different new lines](3)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":62,"endLine":62,"startColumn":17,"endColumn":24}}}],"fingerprints":{"0":"2d74eaafe3c2cf11308021be7ed3cba5846451d47d5ea2098e3acb2d47f82adc","1":"00e52187.4773f344.447de31b.a517c54b.ef9f7d82.8020cfdf.338d1889.26150c29.00e52187.4773f344.447de31b.d7919eeb.ef9f7d82.33cb344c.338d1889.26150c29"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":62,"endLine":62,"startColumn":25,"endColumn":30}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":62,"endLine":62,"startColumn":17,"endColumn":24}}}},{"location":{"id":2,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":62,"endLine":62,"startColumn":25,"endColumn":30}}}},{"location":{"id":3,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":62,"endLine":62,"startColumn":25,"endColumn":30}}}}]}]}],"properties":{"priorityScore":556,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/JavascriptSelfAssignment","ruleIndex":3,"level":"note","message":{"text":"This self assignment has no impact, consider removing it.","markdown":"This self assignment has no impact, consider removing it.","arguments":[]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":186,"endLine":186,"startColumn":9,"endColumn":20}}}],"fingerprints":{"0":"690641814cc8754ffd75ad2dd3cbad0446974a151dae429b3522a5bea9fd0b7f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":186,"endLine":186,"startColumn":9,"endColumn":20}}}}]}]}],"properties":{"priorityScore":206,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"}]}},{"ruleId":"javascript/CopyPasteError","ruleIndex":4,"level":"warning","message":{"text":"Duplicate expressions on both sides of an assignment is probably a mistake.","markdown":"Duplicate expressions on both sides of {0} is probably a mistake.","arguments":["[an assignment](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":186,"endLine":186,"startColumn":9,"endColumn":20}}}],"fingerprints":{"0":"1d7e675b823dcbb75ab9cb0f93fa1382afdf1f5ce4cac9f19669ec8d54903f42","1":"3df95e84.67a80300.98501263.a517c54b.396b7a15.9509b717.83265159.dd1bc17e.3df95e84.67a80300.98501263.a517c54b.396b7a15.37110c89.83265159.d5de5421"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":186,"endLine":186,"startColumn":9,"endColumn":20}}}}]}]}],"properties":{"priorityScore":656,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"},{"label":true,"type":"commonlyFixed"}]}},{"ruleId":"javascript/UseCsurfForExpress","ruleIndex":5,"level":"warning","message":{"text":"CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.","markdown":"CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.","arguments":["[Express app](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":27,"endLine":27,"startColumn":11,"endColumn":18}}}],"fingerprints":{"0":"fc3649280e5ca55cf1656172d14adf0ed7eafafe850281ae628b186dc3a7caf9","1":"ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":27,"endLine":27,"startColumn":11,"endColumn":18}}}}]}]}],"properties":{"priorityScore":556,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoRateLimitingForExpensiveWebOperation","ruleIndex":6,"level":"warning","message":{"text":"This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","markdown":"This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","arguments":["[endpoint handler](0)","[a system command execution](1)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":77,"endLine":113,"startColumn":18,"endColumn":2}}}],"fingerprints":{"0":"f927008c43b00df60dbeccb9e5565bb0529ea1454f7e3e665d29c61801357953","1":"a3c051e6.9c6e2949.98501263.c559ebce.b5c66366.5fce695c.83265159.89d75565.a3c051e6.4773f344.c2905f73.c559ebce.b6be8b13.5fce695c.83265159.89d75565"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":77,"endLine":113,"startColumn":18,"endColumn":2}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":86,"endLine":86,"startColumn":10,"endColumn":27}}}}]}]}],"properties":{"priorityScore":668,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"},{"label":true,"type":"commonlyFixed"}]}},{"ruleId":"javascript/NoRateLimitingForExpensiveWebOperation","ruleIndex":6,"level":"warning","message":{"text":"This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","markdown":"This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","arguments":["[endpoint handler](0)","[a file system operation](1)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":166,"endLine":221,"startColumn":18,"endColumn":2}}}],"fingerprints":{"0":"c2357a8e5cf9d2246841d185e94a82260932a6b66fb086b92a0fc28744a2ea65","1":"ae77ea27.9c6e2949.98501263.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.c3f8dfad.4773f344.1ec824b2.c559ebce.546471fb.5fce695c.83265159.2f05c567"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":166,"endLine":221,"startColumn":18,"endColumn":2}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":184,"endLine":184,"startColumn":5,"endColumn":16}}}}]}]}],"properties":{"priorityScore":668,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"},{"label":true,"type":"commonlyFixed"}]}},{"ruleId":"javascript/NoRateLimitingForExpensiveWebOperation","ruleIndex":6,"level":"warning","message":{"text":"This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","markdown":"This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","arguments":["[endpoint handler](0)","[a file system operation](1)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":223,"endLine":231,"startColumn":21,"endColumn":2}}}],"fingerprints":{"0":"105f8e1c4dcec8019b54822c6e014d3a4adb434b6f04ea2ea105529ee7ef33c2","1":"ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565.ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":223,"endLine":231,"startColumn":21,"endColumn":2}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":225,"endLine":225,"startColumn":14,"endColumn":20}}}}]}]}],"properties":{"priorityScore":668,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"},{"label":true,"type":"commonlyFixed"}]}},{"ruleId":"javascript/NoHardcodedCredentials","ruleIndex":7,"level":"warning","message":{"text":"Do not hardcode credentials in code. Found hardcoded credential used in typeorm.createConnection.","markdown":"Do not hardcode credentials in code. Found hardcoded credential used in {0}.","arguments":["[typeorm.createConnection](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"typeorm-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":11,"endLine":11,"startColumn":3,"endColumn":11}}}],"fingerprints":{"0":"4b7c3803820ba34684e825a2b41eff46f61fb0395fd6edba254171183b51c31c","1":"12567ef6.4773f344.5db24211.e052b9a9.79a7d027.fcf3002d.ce4a9d89.5eeba349.0d9a312e.4773f344.bd65d204.515f1676.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"typeorm-db.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":6,"endLine":6,"startColumn":1,"endColumn":25}}}}]}]}],"properties":{"priorityScore":556,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/DisablePoweredBy","ruleIndex":8,"level":"warning","message":{"text":"Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","markdown":"Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","arguments":["[Express app](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":27,"endLine":27,"startColumn":11,"endColumn":18}}}],"fingerprints":{"0":"2f7b39f14456c8a7778312cb453e23aee53912793417b935a46181d29113db3f","1":"ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":27,"endLine":27,"startColumn":11,"endColumn":18}}}}]}]}],"properties":{"priorityScore":556,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/HttpToHttps","ruleIndex":9,"level":"warning","message":{"text":"http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments":["[http.createServer](0)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":76,"endLine":76,"startColumn":1,"endColumn":18}}}],"fingerprints":{"0":"533ec15879f9dfe65e2020c30adace5afffdecd6f6e6ed811cfca297fb171e7a","1":"aac70831.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb.aac70831.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":76,"endLine":76,"startColumn":1,"endColumn":18}}}}]}]}],"properties":{"priorityScore":556,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/HardcodedNonCryptoSecret","ruleIndex":10,"level":"error","message":{"text":"Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.","markdown":"Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.","arguments":["[a hardcoded string](0)","[here](1)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":73,"endLine":73,"startColumn":5,"endColumn":10}}}],"fingerprints":{"0":"d492a3d37d1188e171f660a822ae2fa1f206291871c61025336cfc874be5990c","1":"46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565.46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":73,"endLine":73,"startColumn":13,"endColumn":67}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"app.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":73,"endLine":73,"startColumn":5,"endColumn":10}}}}]}]}],"properties":{"priorityScore":806,"priorityScoreFactors":[{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoSqli","ruleIndex":11,"level":"error","message":{"text":"Unsanitized input from the HTTP request body flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","arguments":["[the HTTP request body](0)","[flows](1),(2),(3),(4)","[find](5)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":8,"endColumn":12}}}],"fingerprints":{"0":"5dacd021007d5479cb1b35404420a56a7fc14480d99c3f62ac16a87ad2bfe1ed","1":"12567ef6.4773f344.7fde84c3.750eb3ec.cea4e9be.8020cfdf.cd61fc56.3cd69235.f759b1f9.4773f344.7fde84c3.08906714.79a7d027.5fce695c.c0a0d45c.1ce8e212"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":29,"endColumn":33}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":29,"endColumn":33}}}},{"location":{"id":2,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":25,"endColumn":33}}}},{"location":{"id":3,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":15,"endColumn":23}}}},{"location":{"id":4,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":13,"endColumn":73}}}},{"location":{"id":5,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":39,"endLine":39,"startColumn":8,"endColumn":12}}}}]}]}],"properties":{"priorityScore":818,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoSqli","ruleIndex":11,"level":"error","message":{"text":"Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","arguments":["[an HTTP parameter](0)","[flows](1),(2),(3)","[findById](4)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":8,"endColumn":16}}}],"fingerprints":{"0":"554c9e4d45c7e592d275a3ed9e055135b84585bdbb8acb649705786728e3b248","1":"d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":21,"endColumn":27}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":21,"endColumn":27}}}},{"location":{"id":2,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":17,"endColumn":27}}}},{"location":{"id":3,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":17,"endColumn":30}}}},{"location":{"id":4,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":116,"endLine":116,"startColumn":8,"endColumn":16}}}}]}]}],"properties":{"priorityScore":818,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}},{"ruleId":"javascript/NoSqli","ruleIndex":11,"level":"error","message":{"text":"Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.","arguments":["[an HTTP parameter](0)","[flows](1),(2),(3)","[findById](4)"]},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":8,"endColumn":16}}}],"fingerprints":{"0":"7411360805c50d8c4bc0bc5fd48895ca9355d0598b8aaa1f9a01476df07a3f83","1":"d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"id":0,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":21,"endColumn":27}}}},{"location":{"id":1,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":21,"endColumn":27}}}},{"location":{"id":2,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":17,"endColumn":27}}}},{"location":{"id":3,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":17,"endColumn":30}}}},{"location":{"id":4,"physicalLocation":{"artifactLocation":{"uri":"routes/index.js","uriBaseId":"%SRCROOT%"},"region":{"startLine":144,"endLine":144,"startColumn":8,"endColumn":16}}}}]}]}],"properties":{"priorityScore":818,"priorityScoreFactors":[{"label":true,"type":"multipleOccurrence"},{"label":true,"type":"hotFileSource"},{"label":true,"type":"fixExamples"}]}}],"properties":{"coverage":[{"isSupported":true,"lang":"EJS","files":1,"type":"SUPPORTED"},{"isSupported":true,"lang":"XML","files":5,"type":"SUPPORTED"},{"isSupported":true,"lang":"JavaScript","files":8,"type":"SUPPORTED"},{"isSupported":false,"lang":"EJS","files":3,"type":"FAILED_PARSING"},{"isSupported":false,"lang":"HTML","files":1,"type":"FAILED_PARSING"}]}}]}}
2023-06-01T17:20:17.1824612Z 2023-06-01T17:20:17.155Z snyk-code requestId: 22abf590-cfa4-4477-a693-f0c325777e6d statusCode:VULNS, message: {
2023-06-01T17:20:17.1825232Z   "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
2023-06-01T17:20:17.1825577Z   "version": "2.1.0",
2023-06-01T17:20:17.1825820Z   "runs": [
2023-06-01T17:20:17.1826028Z     {
2023-06-01T17:20:17.1826218Z       "tool": {
2023-06-01T17:20:17.1826423Z         "driver": {
2023-06-01T17:20:17.1826650Z           "name": "SnykCode",
2023-06-01T17:20:17.1826898Z           "semanticVersion": "1.0.0",
2023-06-01T17:20:17.1827162Z           "version": "1.0.0",
2023-06-01T17:20:17.1827384Z           "rules": [
2023-06-01T17:20:17.1827599Z             {
2023-06-01T17:20:17.1828149Z               "id": "javascript/NoHardcodedPasswords",
2023-06-01T17:20:17.1828451Z               "name": "NoHardcodedPasswords",
2023-06-01T17:20:17.1828725Z               "shortDescription": {
2023-06-01T17:20:17.1828992Z                 "text": "Use of Hardcoded Credentials"
2023-06-01T17:20:17.1829249Z               },
2023-06-01T17:20:17.1829478Z               "defaultConfiguration": {
2023-06-01T17:20:17.1829722Z                 "level": "warning"
2023-06-01T17:20:17.1829950Z               },
2023-06-01T17:20:17.1830153Z               "help": {
2023-06-01T17:20:17.1832242Z                 "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
2023-06-01T17:20:17.1834710Z                 "text": ""
2023-06-01T17:20:17.1834945Z               },
2023-06-01T17:20:17.1835169Z               "properties": {
2023-06-01T17:20:17.1835536Z                 "tags": [
2023-06-01T17:20:17.1835770Z                   "javascript",
2023-06-01T17:20:17.1836013Z                   "NoHardcodedPasswords",
2023-06-01T17:20:17.1836266Z                   "Security"
2023-06-01T17:20:17.1836473Z                 ],
2023-06-01T17:20:17.1836686Z                 "categories": [
2023-06-01T17:20:17.1836919Z                   "Security"
2023-06-01T17:20:17.1837129Z                 ],
2023-06-01T17:20:17.1837369Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.1837591Z                   {
2023-06-01T17:20:17.1838004Z                     "commitURL": "https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11",
2023-06-01T17:20:17.1838428Z                     "lines": [
2023-06-01T17:20:17.1839018Z                       {
2023-06-01T17:20:17.1839327Z                         "line": "ip: 'loading',",
2023-06-01T17:20:17.1839583Z                         "lineNumber": 8,
2023-06-01T17:20:17.1839829Z                         "lineChange": "removed"
2023-06-01T17:20:17.1840067Z                       },
2023-06-01T17:20:17.1840262Z                       {
2023-06-01T17:20:17.1840497Z                         "line": "ip: '',",
2023-06-01T17:20:17.1840732Z                         "lineNumber": 8,
2023-06-01T17:20:17.1840971Z                         "lineChange": "added"
2023-06-01T17:20:17.1841205Z                       },
2023-06-01T17:20:17.1841401Z                       {
2023-06-01T17:20:17.1841630Z                         "line": "port: 0,",
2023-06-01T17:20:17.1841865Z                         "lineNumber": 9,
2023-06-01T17:20:17.1842104Z                         "lineChange": "none"
2023-06-01T17:20:17.1842336Z                       },
2023-06-01T17:20:17.1842531Z                       {
2023-06-01T17:20:17.1842801Z                         "line": "password: 'THisIsCool324HashMan',",
2023-06-01T17:20:17.1843203Z                         "lineNumber": 10,
2023-06-01T17:20:17.1843447Z                         "lineChange": "removed"
2023-06-01T17:20:17.1843685Z                       },
2023-06-01T17:20:17.1843881Z                       {
2023-06-01T17:20:17.1844118Z                         "line": "password: '',",
2023-06-01T17:20:17.1844360Z                         "lineNumber": 10,
2023-06-01T17:20:17.1844601Z                         "lineChange": "added"
2023-06-01T17:20:17.1844834Z                       },
2023-06-01T17:20:17.1845029Z                       {
2023-06-01T17:20:17.1845266Z                         "line": "active: true,",
2023-06-01T17:20:17.1845510Z                         "lineNumber": 11,
2023-06-01T17:20:17.1845749Z                         "lineChange": "none"
2023-06-01T17:20:17.1845980Z                       },
2023-06-01T17:20:17.1846175Z                       {
2023-06-01T17:20:17.1846420Z                         "line": "selfHosted: false,",
2023-06-01T17:20:17.1846679Z                         "lineNumber": 12,
2023-06-01T17:20:17.1846919Z                         "lineChange": "none"
2023-06-01T17:20:17.1847148Z                       }
2023-06-01T17:20:17.1847340Z                     ]
2023-06-01T17:20:17.1847549Z                   },
2023-06-01T17:20:17.1847744Z                   {
2023-06-01T17:20:17.1848169Z                     "commitURL": "https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21",
2023-06-01T17:20:17.1848597Z                     "lines": [
2023-06-01T17:20:17.1848800Z                       {
2023-06-01T17:20:17.1849018Z                         "line": " ",
2023-06-01T17:20:17.1849247Z                         "lineNumber": 17,
2023-06-01T17:20:17.1849497Z                         "lineChange": "none"
2023-06-01T17:20:17.1849716Z                       },
2023-06-01T17:20:17.1849909Z                       {
2023-06-01T17:20:17.1850182Z                         "line": "let errors = loginFormSchema.validate({",
2023-06-01T17:20:17.1850532Z                         "lineNumber": 18,
2023-06-01T17:20:17.1850782Z                         "lineChange": "none"
2023-06-01T17:20:17.1851000Z                       },
2023-06-01T17:20:17.1851195Z                       {
2023-06-01T17:20:17.1851450Z                         "line": "  email: 'test@test.com',",
2023-06-01T17:20:17.1851710Z                         "lineNumber": 19,
2023-06-01T17:20:17.1851967Z                         "lineChange": "removed"
2023-06-01T17:20:17.1852189Z                       },
2023-06-01T17:20:17.1852386Z                       {
2023-06-01T17:20:17.1852641Z                         "line": "  password: 'somepassword'",
2023-06-01T17:20:17.1852902Z                         "lineNumber": 20,
2023-06-01T17:20:17.1853160Z                         "lineChange": "removed"
2023-06-01T17:20:17.1853382Z                       },
2023-06-01T17:20:17.1853583Z                       {
2023-06-01T17:20:17.1853833Z                         "line": "  password: undefined",
2023-06-01T17:20:17.1854087Z                         "lineNumber": 19,
2023-06-01T17:20:17.1854344Z                         "lineChange": "added"
2023-06-01T17:20:17.1854564Z                       },
2023-06-01T17:20:17.1854759Z                       {
2023-06-01T17:20:17.1854984Z                         "line": "})",
2023-06-01T17:20:17.1855211Z                         "lineNumber": 21,
2023-06-01T17:20:17.1855464Z                         "lineChange": "none"
2023-06-01T17:20:17.1855681Z                       }
2023-06-01T17:20:17.1855874Z                     ]
2023-06-01T17:20:17.1856081Z                   },
2023-06-01T17:20:17.1856274Z                   {
2023-06-01T17:20:17.1856702Z                     "commitURL": "https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26",
2023-06-01T17:20:17.1857156Z                     "lines": [
2023-06-01T17:20:17.1857364Z                       {
2023-06-01T17:20:17.1857626Z                         "line": "  email: 'testEmail@email.com',",
2023-06-01T17:20:17.1857894Z                         "lineNumber": 23,
2023-06-01T17:20:17.1858150Z                         "lineChange": "removed"
2023-06-01T17:20:17.1858374Z                       },
2023-06-01T17:20:17.1858569Z                       {
2023-06-01T17:20:17.1858823Z                         "line": "  email: 'test@email.com',",
2023-06-01T17:20:17.1859080Z                         "lineNumber": 23,
2023-06-01T17:20:17.1859334Z                         "lineChange": "added"
2023-06-01T17:20:17.1859551Z                       },
2023-06-01T17:20:17.1859747Z                       {
2023-06-01T17:20:17.1860013Z                         "line": "  application: 'test application',",
2023-06-01T17:20:17.1860453Z                         "lineNumber": 24,
2023-06-01T17:20:17.1860692Z                         "lineChange": "none"
2023-06-01T17:20:17.1860931Z                       },
2023-06-01T17:20:17.1861126Z                       {
2023-06-01T17:20:17.1861368Z                         "line": "  password: 'testPassword'",
2023-06-01T17:20:17.1861642Z                         "lineNumber": 25,
2023-06-01T17:20:17.1861886Z                         "lineChange": "removed"
2023-06-01T17:20:17.1862122Z                       },
2023-06-01T17:20:17.1862317Z                       {
2023-06-01T17:20:17.1862546Z                         "line": "  password: 'test'",
2023-06-01T17:20:17.1862812Z                         "lineNumber": 25,
2023-06-01T17:20:17.1863053Z                         "lineChange": "added"
2023-06-01T17:20:17.1863288Z                       },
2023-06-01T17:20:17.1863483Z                       {
2023-06-01T17:20:17.1863692Z                         "line": "});",
2023-06-01T17:20:17.1863936Z                         "lineNumber": 26,
2023-06-01T17:20:17.1864174Z                         "lineChange": "none"
2023-06-01T17:20:17.1864408Z                       }
2023-06-01T17:20:17.1864696Z                     ]
2023-06-01T17:20:17.1864889Z                   }
2023-06-01T17:20:17.1865097Z                 ],
2023-06-01T17:20:17.1865334Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.1866369Z                 "precision": "very-high",
2023-06-01T17:20:17.1866640Z                 "repoDatasetSize": 522,
2023-06-01T17:20:17.1866870Z                 "cwe": [
2023-06-01T17:20:17.1867098Z                   "CWE-798",
2023-06-01T17:20:17.1867315Z                   "CWE-259"
2023-06-01T17:20:17.1867532Z                 ]
2023-06-01T17:20:17.1867724Z               }
2023-06-01T17:20:17.1867918Z             },
2023-06-01T17:20:17.1868123Z             {
2023-06-01T17:20:17.1868366Z               "id": "javascript/UseCsurfForExpress",
2023-06-01T17:20:17.1868658Z               "name": "UseCsurfForExpress",
2023-06-01T17:20:17.1868912Z               "shortDescription": {
2023-06-01T17:20:17.1869195Z                 "text": "Cross-Site Request Forgery (CSRF)"
2023-06-01T17:20:17.1869457Z               },
2023-06-01T17:20:17.1869684Z               "defaultConfiguration": {
2023-06-01T17:20:17.1869939Z                 "level": "warning"
2023-06-01T17:20:17.1871267Z               },
2023-06-01T17:20:17.1871485Z               "help": {
2023-06-01T17:20:17.1874767Z                 "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n### Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
2023-06-01T17:20:17.1877486Z                 "text": ""
2023-06-01T17:20:17.1877715Z               },
2023-06-01T17:20:17.1877929Z               "properties": {
2023-06-01T17:20:17.1878164Z                 "tags": [
2023-06-01T17:20:17.1878383Z                   "javascript",
2023-06-01T17:20:17.1878622Z                   "UseCsurfForExpress",
2023-06-01T17:20:17.1878869Z                   "Security"
2023-06-01T17:20:17.1879076Z                 ],
2023-06-01T17:20:17.1879302Z                 "categories": [
2023-06-01T17:20:17.1879522Z                   "Security"
2023-06-01T17:20:17.1879727Z                 ],
2023-06-01T17:20:17.1879965Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.1880185Z                   {
2023-06-01T17:20:17.1880666Z                     "commitURL": "https://github.com/LukeLin/react-ocean/commit/9a13d57dedf6742ed06321a80ca2a5842fb8a72a?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cR7",
2023-06-01T17:20:17.1881201Z                     "lines": [
2023-06-01T17:20:17.1881417Z                       {
2023-06-01T17:20:17.1881677Z                         "line": "import session from 'express-session';",
2023-06-01T17:20:17.1881955Z                         "lineNumber": 6,
2023-06-01T17:20:17.1882208Z                         "lineChange": "added"
2023-06-01T17:20:17.1882428Z                       },
2023-06-01T17:20:17.1882637Z                       {
2023-06-01T17:20:17.1882880Z                         "line": "import csurf from 'csurf';",
2023-06-01T17:20:17.1883140Z                         "lineNumber": 7,
2023-06-01T17:20:17.1883392Z                         "lineChange": "added"
2023-06-01T17:20:17.1883612Z                       },
2023-06-01T17:20:17.1883821Z                       {
2023-06-01T17:20:17.1884085Z                         "line": "import config from './config/config.json';",
2023-06-01T17:20:17.1884368Z                         "lineNumber": 8,
2023-06-01T17:20:17.1884624Z                         "lineChange": "none"
2023-06-01T17:20:17.1884838Z                       },
2023-06-01T17:20:17.1885044Z                       {
2023-06-01T17:20:17.1885288Z                         "line": "import routes from './routes';",
2023-06-01T17:20:17.1885548Z                         "lineNumber": 9,
2023-06-01T17:20:17.1885798Z                         "lineChange": "none"
2023-06-01T17:20:17.1886014Z                       },
2023-06-01T17:20:17.1886223Z                       {
2023-06-01T17:20:17.1886504Z                         "line": "import allowCrossDomain from './config/allowCrossDomain'",
2023-06-01T17:20:17.1886796Z                         "lineNumber": 10,
2023-06-01T17:20:17.1887042Z                         "lineChange": "none"
2023-06-01T17:20:17.1887254Z                       },
2023-06-01T17:20:17.1887460Z                       {
2023-06-01T17:20:17.1887703Z                         "line": "import { renderFile } from 'ejs';",
2023-06-01T17:20:17.1888645Z                         "lineNumber": 11,
2023-06-01T17:20:17.1888897Z                         "lineChange": "none"
2023-06-01T17:20:17.1889111Z                       },
2023-06-01T17:20:17.1889316Z                       {
2023-06-01T17:20:17.1889543Z                         "line": "let app = express();",
2023-06-01T17:20:17.1889788Z                         "lineNumber": 13,
2023-06-01T17:20:17.1890034Z                         "lineChange": "none"
2023-06-01T17:20:17.1890247Z                       },
2023-06-01T17:20:17.1890452Z                       {
2023-06-01T17:20:17.1890711Z                         "line": "if(process.env.NODE_ENV !== 'production'){",
2023-06-01T17:20:17.1890985Z                         "lineNumber": 13,
2023-06-01T17:20:17.1891239Z                         "lineChange": "removed"
2023-06-01T17:20:17.1891455Z                       },
2023-06-01T17:20:17.1891658Z                       {
2023-06-01T17:20:17.1891910Z                         "line": "    let webpack = require('webpack');",
2023-06-01T17:20:17.1892191Z                         "lineNumber": 14,
2023-06-01T17:20:17.1892429Z                         "lineChange": "removed"
2023-06-01T17:20:17.1892648Z                       },
2023-06-01T17:20:17.1892853Z                       {
2023-06-01T17:20:17.1893134Z                         "line": "    let config = require('../create-webpack.config')(true);",
2023-06-01T17:20:17.1893437Z                         "lineNumber": 15,
2023-06-01T17:20:17.1893674Z                         "lineChange": "removed"
2023-06-01T17:20:17.1893890Z                       },
2023-06-01T17:20:17.1894096Z                       {
2023-06-01T17:20:17.1894352Z                         "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
2023-06-01T17:20:17.1894653Z                         "lineNumber": 16,
2023-06-01T17:20:17.1894878Z                         "lineChange": "removed"
2023-06-01T17:20:17.1895106Z                       },
2023-06-01T17:20:17.1895611Z                       {
2023-06-01T17:20:17.1895932Z                         "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
2023-06-01T17:20:17.1896303Z                         "lineNumber": 17,
2023-06-01T17:20:17.1896591Z                         "lineChange": "removed"
2023-06-01T17:20:17.1896846Z                       },
2023-06-01T17:20:17.1897091Z                       {
2023-06-01T17:20:17.1897380Z                         "line": "    let compiler = webpack(config);",
2023-06-01T17:20:17.1897699Z                         "lineNumber": 18,
2023-06-01T17:20:17.1897982Z                         "lineChange": "removed"
2023-06-01T17:20:17.1898247Z                       },
2023-06-01T17:20:17.1898478Z                       {
2023-06-01T17:20:17.1898875Z                         "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
2023-06-01T17:20:17.1899287Z                         "lineNumber": 19,
2023-06-01T17:20:17.1899582Z                         "lineChange": "removed"
2023-06-01T17:20:17.1899852Z                       },
2023-06-01T17:20:17.1900081Z                       {
2023-06-01T17:20:17.1900391Z                         "line": "    app.use(webpackHotMiddleware(compiler));",
2023-06-01T17:20:17.1900733Z                         "lineNumber": 20,
2023-06-01T17:20:17.1901017Z                         "lineChange": "removed"
2023-06-01T17:20:17.1901279Z                       },
2023-06-01T17:20:17.1901508Z                       {
2023-06-01T17:20:17.1901749Z                         "line": "}",
2023-06-01T17:20:17.1902029Z                         "lineNumber": 21,
2023-06-01T17:20:17.1902312Z                         "lineChange": "removed"
2023-06-01T17:20:17.1902572Z                       },
2023-06-01T17:20:17.1902787Z                       {
2023-06-01T17:20:17.1903076Z                         "line": "app.set('host', process.env.IP || '127.0.0.1');",
2023-06-01T17:20:17.1903523Z                         "lineNumber": 15,
2023-06-01T17:20:17.1903775Z                         "lineChange": "added"
2023-06-01T17:20:17.1904026Z                       },
2023-06-01T17:20:17.1904236Z                       {
2023-06-01T17:20:17.1904529Z                         "line": "app.set('port', process.env.PORT || 36000);",
2023-06-01T17:20:17.1904844Z                         "lineNumber": 16,
2023-06-01T17:20:17.1905108Z                         "lineChange": "added"
2023-06-01T17:20:17.1905356Z                       },
2023-06-01T17:20:17.1905568Z                       {
2023-06-01T17:20:17.1905839Z                         "line": "app.disable('x-powered-by');",
2023-06-01T17:20:17.1906142Z                         "lineNumber": 17,
2023-06-01T17:20:17.1906395Z                         "lineChange": "added"
2023-06-01T17:20:17.1906637Z                       },
2023-06-01T17:20:17.1906847Z                       {
2023-06-01T17:20:17.1907120Z                         "line": "app.set('view engine', 'ejs');",
2023-06-01T17:20:17.1907428Z                         "lineNumber": 23,
2023-06-01T17:20:17.1907688Z                         "lineChange": "none"
2023-06-01T17:20:17.1907944Z                       },
2023-06-01T17:20:17.1908152Z                       {
2023-06-01T17:20:17.1908480Z                         "line": "app.set('views', __dirname + '/views');",
2023-06-01T17:20:17.1908795Z                         "lineNumber": 24,
2023-06-01T17:20:17.1909054Z                         "lineChange": "none"
2023-06-01T17:20:17.1909301Z                       },
2023-06-01T17:20:17.1909511Z                       {
2023-06-01T17:20:17.1910763Z                         "line": "app.engine('html', renderFile);",
2023-06-01T17:20:17.1911093Z                         "lineNumber": 25,
2023-06-01T17:20:17.1911349Z                         "lineChange": "none"
2023-06-01T17:20:17.1911605Z                       },
2023-06-01T17:20:17.1911823Z                       {
2023-06-01T17:20:17.1912254Z                         "line": "app.use(compress());",
2023-06-01T17:20:17.1912533Z                         "lineNumber": 27,
2023-06-01T17:20:17.1912792Z                         "lineChange": "none"
2023-06-01T17:20:17.1913039Z                       },
2023-06-01T17:20:17.1913251Z                       {
2023-06-01T17:20:17.1913525Z                         "line": "app.use(logger('dev'));",
2023-06-01T17:20:17.1914771Z                         "lineNumber": 28,
2023-06-01T17:20:17.1915064Z                         "lineChange": "none"
2023-06-01T17:20:17.1915302Z                       },
2023-06-01T17:20:17.1915510Z                       {
2023-06-01T17:20:17.1915786Z                         "line": "app.use(bodyParser.json());",
2023-06-01T17:20:17.1916071Z                         "lineNumber": 29,
2023-06-01T17:20:17.1916924Z                         "lineChange": "none"
2023-06-01T17:20:17.1917187Z                       },
2023-06-01T17:20:17.1917409Z                       {
2023-06-01T17:20:17.1917731Z                         "line": "app.use(bodyParser.urlencoded({ extended: true }));",
2023-06-01T17:20:17.1918052Z                         "lineNumber": 30,
2023-06-01T17:20:17.1918311Z                         "lineChange": "none"
2023-06-01T17:20:17.1918562Z                       },
2023-06-01T17:20:17.1918770Z                       {
2023-06-01T17:20:17.1919037Z                         "line": "app.use(cookieParser());",
2023-06-01T17:20:17.1919321Z                         "lineNumber": 31,
2023-06-01T17:20:17.1919574Z                         "lineChange": "none"
2023-06-01T17:20:17.1919824Z                       },
2023-06-01T17:20:17.1920032Z                       {
2023-06-01T17:20:17.1920295Z                         "line": "app.use(session({",
2023-06-01T17:20:17.1920561Z                         "lineNumber": 27,
2023-06-01T17:20:17.1920825Z                         "lineChange": "added"
2023-06-01T17:20:17.1921232Z                       },
2023-06-01T17:20:17.1921447Z                       {
2023-06-01T17:20:17.1921700Z                         "line": "    resave: true,",
2023-06-01T17:20:17.1921972Z                         "lineNumber": 28,
2023-06-01T17:20:17.1922229Z                         "lineChange": "added"
2023-06-01T17:20:17.1922482Z                       },
2023-06-01T17:20:17.1922692Z                       {
2023-06-01T17:20:17.1922967Z                         "line": "    saveUninitialized: true,",
2023-06-01T17:20:17.1923247Z                         "lineNumber": 29,
2023-06-01T17:20:17.1923505Z                         "lineChange": "added"
2023-06-01T17:20:17.1923756Z                       },
2023-06-01T17:20:17.1923964Z                       {
2023-06-01T17:20:17.1924237Z                         "line": "    secret: \"notagoodsecret\",",
2023-06-01T17:20:17.1924517Z                         "lineNumber": 30,
2023-06-01T17:20:17.1924780Z                         "lineChange": "added"
2023-06-01T17:20:17.1925033Z                       },
2023-06-01T17:20:17.1925247Z                       {
2023-06-01T17:20:17.1925528Z                         "line": "    cookie: {httpOnly: true}",
2023-06-01T17:20:17.1925800Z                         "lineNumber": 31,
2023-06-01T17:20:17.1926078Z                         "lineChange": "added"
2023-06-01T17:20:17.1926308Z                       },
2023-06-01T17:20:17.1926516Z                       {
2023-06-01T17:20:17.1926753Z                         "line": "}));",
2023-06-01T17:20:17.1926994Z                         "lineNumber": 32,
2023-06-01T17:20:17.1927262Z                         "lineChange": "added"
2023-06-01T17:20:17.1927498Z                       },
2023-06-01T17:20:17.1927706Z                       {
2023-06-01T17:20:17.1928022Z                         "line": "// app.use(favicon(__dirname + '/../public/favicon.ico'));",
2023-06-01T17:20:17.1928316Z                         "lineNumber": 34,
2023-06-01T17:20:17.1928563Z                         "lineChange": "none"
2023-06-01T17:20:17.1928884Z                       },
2023-06-01T17:20:17.1929079Z                       {
2023-06-01T17:20:17.1929379Z                         "line": "app.use('/static', express.static(__dirname + '/../public', {",
2023-06-01T17:20:17.1929680Z                         "lineNumber": 35,
2023-06-01T17:20:17.1929942Z                         "lineChange": "none"
2023-06-01T17:20:17.1930181Z                       },
2023-06-01T17:20:17.1930389Z                       {
2023-06-01T17:20:17.1930660Z                         "line": "    maxAge: 86400000",
2023-06-01T17:20:17.1930928Z                         "lineNumber": 36,
2023-06-01T17:20:17.1931198Z                         "lineChange": "none"
2023-06-01T17:20:17.1931429Z                       },
2023-06-01T17:20:17.1931642Z                       {
2023-06-01T17:20:17.1931883Z                         "line": "}));",
2023-06-01T17:20:17.1932135Z                         "lineNumber": 37,
2023-06-01T17:20:17.1932413Z                         "lineChange": "none"
2023-06-01T17:20:17.1932653Z                       },
2023-06-01T17:20:17.1932863Z                       {
2023-06-01T17:20:17.1933161Z                         "line": "process.on('uncaughtException', err => {",
2023-06-01T17:20:17.1933458Z                         "lineNumber": 38,
2023-06-01T17:20:17.1933736Z                         "lineChange": "removed"
2023-06-01T17:20:17.1933979Z                       },
2023-06-01T17:20:17.1934191Z                       {
2023-06-01T17:20:17.1934501Z                         "line": "    console.error(err.message + '\\n' + err.stack);",
2023-06-01T17:20:17.1934814Z                         "lineNumber": 39,
2023-06-01T17:20:17.1935088Z                         "lineChange": "removed"
2023-06-01T17:20:17.1935330Z                       },
2023-06-01T17:20:17.1935540Z                       {
2023-06-01T17:20:17.1935779Z                         "line": "});",
2023-06-01T17:20:17.1936030Z                         "lineNumber": 40,
2023-06-01T17:20:17.1936395Z                         "lineChange": "removed"
2023-06-01T17:20:17.1936636Z                       },
2023-06-01T17:20:17.1936892Z                       {
2023-06-01T17:20:17.1937209Z                         "line": "process.on('unhandledRejection', (reason, p) => {",
2023-06-01T17:20:17.1937526Z                         "lineNumber": 41,
2023-06-01T17:20:17.1937808Z                         "lineChange": "removed"
2023-06-01T17:20:17.1938046Z                       },
2023-06-01T17:20:17.1938268Z                       {
2023-06-01T17:20:17.1938600Z                         "line": "    console.error(\"Unhandled Rejection at: Promise \", p, \" reason: \", reason);",
2023-06-01T17:20:17.1938950Z                         "lineNumber": 42,
2023-06-01T17:20:17.1939227Z                         "lineChange": "removed"
2023-06-01T17:20:17.1939468Z                       },
2023-06-01T17:20:17.1939693Z                       {
2023-06-01T17:20:17.1939918Z                         "line": "});",
2023-06-01T17:20:17.1940175Z                         "lineNumber": 43,
2023-06-01T17:20:17.1940447Z                         "lineChange": "removed"
2023-06-01T17:20:17.1940686Z                       },
2023-06-01T17:20:17.1940911Z                       {
2023-06-01T17:20:17.1941206Z                         "line": "process.on('rejectionHandled', (reason, p) => {",
2023-06-01T17:20:17.1941516Z                         "lineNumber": 44,
2023-06-01T17:20:17.1941802Z                         "lineChange": "removed"
2023-06-01T17:20:17.1942040Z                       },
2023-06-01T17:20:17.1942263Z                       {
2023-06-01T17:20:17.1942591Z                         "line": "    console.warn(\"rejectionHandled at: Promise \", p, \" reason: \", reason);",
2023-06-01T17:20:17.1942932Z                         "lineNumber": 45,
2023-06-01T17:20:17.1943213Z                         "lineChange": "removed"
2023-06-01T17:20:17.1943445Z                       },
2023-06-01T17:20:17.1943668Z                       {
2023-06-01T17:20:17.1944563Z                         "line": "});",
2023-06-01T17:20:17.1944813Z                         "lineNumber": 46,
2023-06-01T17:20:17.1945093Z                         "lineChange": "removed"
2023-06-01T17:20:17.1945333Z                       },
2023-06-01T17:20:17.1945559Z                       {
2023-06-01T17:20:17.1945858Z                         "line": "if(process.env.NODE_ENV !== 'production'){",
2023-06-01T17:20:17.1946182Z                         "lineNumber": 39,
2023-06-01T17:20:17.1946443Z                         "lineChange": "added"
2023-06-01T17:20:17.1946673Z                       },
2023-06-01T17:20:17.1946887Z                       {
2023-06-01T17:20:17.1947805Z                         "line": "    let webpack = require('webpack');",
2023-06-01T17:20:17.1948118Z                         "lineNumber": 40,
2023-06-01T17:20:17.1948376Z                         "lineChange": "added"
2023-06-01T17:20:17.1948607Z                       },
2023-06-01T17:20:17.1948839Z                       {
2023-06-01T17:20:17.1949156Z                         "line": "    let config = require('../create-webpack.config')(true);",
2023-06-01T17:20:17.1949503Z                         "lineNumber": 41,
2023-06-01T17:20:17.1949779Z                         "lineChange": "added"
2023-06-01T17:20:17.1950012Z                       },
2023-06-01T17:20:17.1950239Z                       {
2023-06-01T17:20:17.1950564Z                         "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
2023-06-01T17:20:17.1950918Z                         "lineNumber": 42,
2023-06-01T17:20:17.1951187Z                         "lineChange": "added"
2023-06-01T17:20:17.1951423Z                       },
2023-06-01T17:20:17.1951644Z                       {
2023-06-01T17:20:17.1951970Z                         "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
2023-06-01T17:20:17.1952328Z                         "lineNumber": 43,
2023-06-01T17:20:17.1952737Z                         "lineChange": "added"
2023-06-01T17:20:17.1952976Z                       },
2023-06-01T17:20:17.1953202Z                       {
2023-06-01T17:20:17.1953473Z                         "line": "    let compiler = webpack(config);",
2023-06-01T17:20:17.1953768Z                         "lineNumber": 44,
2023-06-01T17:20:17.1954030Z                         "lineChange": "added"
2023-06-01T17:20:17.1954281Z                       },
2023-06-01T17:20:17.1954490Z                       {
2023-06-01T17:20:17.1954860Z                         "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
2023-06-01T17:20:17.1955258Z                         "lineNumber": 45,
2023-06-01T17:20:17.1955515Z                         "lineChange": "added"
2023-06-01T17:20:17.1955767Z                       },
2023-06-01T17:20:17.1955975Z                       {
2023-06-01T17:20:17.1956266Z                         "line": "    app.use(webpackHotMiddleware(compiler));",
2023-06-01T17:20:17.1956595Z                         "lineNumber": 46,
2023-06-01T17:20:17.1956856Z                         "lineChange": "added"
2023-06-01T17:20:17.1957111Z                       },
2023-06-01T17:20:17.1957315Z                       {
2023-06-01T17:20:17.1957537Z                         "line": "}",
2023-06-01T17:20:17.1957800Z                         "lineNumber": 47,
2023-06-01T17:20:17.1958050Z                         "lineChange": "added"
2023-06-01T17:20:17.1958300Z                       },
2023-06-01T17:20:17.1958514Z                       {
2023-06-01T17:20:17.1958782Z                         "line": "app.use('/', allowCrossDomain);",
2023-06-01T17:20:17.1959084Z                         "lineNumber": 49,
2023-06-01T17:20:17.1959346Z                         "lineChange": "none"
2023-06-01T17:20:17.1959595Z                       },
2023-06-01T17:20:17.1959805Z                       {
2023-06-01T17:20:17.1960058Z                         "line": "app.use(csurf());",
2023-06-01T17:20:17.1960422Z                         "lineNumber": 51,
2023-06-01T17:20:17.1960676Z                         "lineChange": "added"
2023-06-01T17:20:17.1960927Z                       },
2023-06-01T17:20:17.1961138Z                       {
2023-06-01T17:20:17.1961412Z                         "line": "app.use(function (req, res, next) {",
2023-06-01T17:20:17.1961720Z                         "lineNumber": 52,
2023-06-01T17:20:17.1961981Z                         "lineChange": "added"
2023-06-01T17:20:17.1962231Z                       },
2023-06-01T17:20:17.1962438Z                       {
2023-06-01T17:20:17.1962728Z                         "line": "    res.locals.csrftoken = req.session._csrf;",
2023-06-01T17:20:17.1963057Z                         "lineNumber": 53,
2023-06-01T17:20:17.1963317Z                         "lineChange": "added"
2023-06-01T17:20:17.1963567Z                       },
2023-06-01T17:20:17.1963781Z                       {
2023-06-01T17:20:17.1964018Z                         "line": "    next();",
2023-06-01T17:20:17.1964285Z                         "lineNumber": 54,
2023-06-01T17:20:17.1964543Z                         "lineChange": "added"
2023-06-01T17:20:17.1964795Z                       },
2023-06-01T17:20:17.1965005Z                       {
2023-06-01T17:20:17.1965233Z                         "line": "});",
2023-06-01T17:20:17.1965494Z                         "lineNumber": 55,
2023-06-01T17:20:17.1965752Z                         "lineChange": "added"
2023-06-01T17:20:17.1965999Z                       }
2023-06-01T17:20:17.1966205Z                     ]
2023-06-01T17:20:17.1966415Z                   },
2023-06-01T17:20:17.1966637Z                   {
2023-06-01T17:20:17.1967171Z                     "commitURL": "https://github.com/OpenSprites/OpenSprites-next/commit/0ff4f1bc633496f7d5abc5f9bdf2a5cce43b080e?diff=split#diff-d3f9f1ac91aa1bf0f85894eb43eb424f26c61fd0e44eeb8c0787f48a0ba511ecR36",
2023-06-01T17:20:17.1967774Z                     "lines": [
2023-06-01T17:20:17.1967998Z                       {
2023-06-01T17:20:17.1968284Z                         "line": "const csrf = require('csurf')",
2023-06-01T17:20:17.1968573Z                         "lineNumber": 35,
2023-06-01T17:20:17.1968834Z                         "lineChange": "added"
2023-06-01T17:20:17.1969082Z                       },
2023-06-01T17:20:17.1969292Z                       {
2023-06-01T17:20:17.1969592Z                         "line": "const session = require('express-session')",
2023-06-01T17:20:17.1969904Z                         "lineNumber": 36,
2023-06-01T17:20:17.1970161Z                         "lineChange": "none"
2023-06-01T17:20:17.1970413Z                       },
2023-06-01T17:20:17.1970624Z                       {
2023-06-01T17:20:17.1970948Z                         "line": "const sessionStore = require('session-file-store')(session)",
2023-06-01T17:20:17.1971274Z                         "lineNumber": 37,
2023-06-01T17:20:17.1971534Z                         "lineChange": "none"
2023-06-01T17:20:17.1971788Z                       },
2023-06-01T17:20:17.1971979Z                       {
2023-06-01T17:20:17.1972253Z                         "line": "const exprhbs = require('express-handlebars')",
2023-06-01T17:20:17.1972530Z                         "lineNumber": 38,
2023-06-01T17:20:17.1972775Z                         "lineChange": "none"
2023-06-01T17:20:17.1972986Z                       },
2023-06-01T17:20:17.1973178Z                       {
2023-06-01T17:20:17.1973437Z                         "line": "const cheerio = require('cheerio')",
2023-06-01T17:20:17.1973704Z                         "lineNumber": 40,
2023-06-01T17:20:17.1973949Z                         "lineChange": "none"
2023-06-01T17:20:17.1974160Z                       },
2023-06-01T17:20:17.1974348Z                       {
2023-06-01T17:20:17.1974612Z                         "line": "const request = require('request-promise')",
2023-06-01T17:20:17.1974884Z                         "lineNumber": 41,
2023-06-01T17:20:17.1975199Z                         "lineChange": "none"
2023-06-01T17:20:17.1975412Z                       },
2023-06-01T17:20:17.1975601Z                       {
2023-06-01T17:20:17.1975867Z                         "line": "const marked = require('marked')",
2023-06-01T17:20:17.1976131Z                         "lineNumber": 43,
2023-06-01T17:20:17.1976380Z                         "lineChange": "none"
2023-06-01T17:20:17.1976589Z                       },
2023-06-01T17:20:17.1976779Z                       {
2023-06-01T17:20:17.1977031Z                         "line": "const base32 = require('base32')",
2023-06-01T17:20:17.1977282Z                         "lineNumber": 44,
2023-06-01T17:20:17.1977519Z                         "lineChange": "none"
2023-06-01T17:20:17.1977729Z                       },
2023-06-01T17:20:17.1977918Z                       {
2023-06-01T17:20:17.1978186Z                         "line": "const uniqid = require('uniqid').process",
2023-06-01T17:20:17.1978458Z                         "lineNumber": 45,
2023-06-01T17:20:17.1978700Z                         "lineChange": "none"
2023-06-01T17:20:17.1978910Z                       },
2023-06-01T17:20:17.1979097Z                       {
2023-06-01T17:20:17.1979366Z                         "line": "const shortid = require('shortid').generate",
2023-06-01T17:20:17.1979637Z                         "lineNumber": 46,
2023-06-01T17:20:17.1979880Z                         "lineChange": "none"
2023-06-01T17:20:17.1980087Z                       },
2023-06-01T17:20:17.1980273Z                       {
2023-06-01T17:20:17.1980518Z                         "line": "const rot = require('rot')",
2023-06-01T17:20:17.1980766Z                         "lineNumber": 47,
2023-06-01T17:20:17.1981003Z                         "lineChange": "none"
2023-06-01T17:20:17.1981209Z                       },
2023-06-01T17:20:17.1981397Z                       {
2023-06-01T17:20:17.1981730Z                         "line": "const bcrypt = require('bcrypt-as-promised')",
2023-06-01T17:20:17.1982012Z                         "lineNumber": 48,
2023-06-01T17:20:17.1982274Z                         "lineChange": "added"
2023-06-01T17:20:17.1982483Z                       },
2023-06-01T17:20:17.1982669Z                       {
2023-06-01T17:20:17.1982982Z                         "line": "const tada = '🎉'",
2023-06-01T17:20:17.1983222Z                         "lineNumber": 50,
2023-06-01T17:20:17.1983488Z                         "lineChange": "added"
2023-06-01T17:20:17.1983728Z                       },
2023-06-01T17:20:17.1983878Z                       {
2023-06-01T17:20:17.1984076Z                         "line": "const db = require('../db')",
2023-06-01T17:20:17.1984268Z                         "lineNumber": 51,
2023-06-01T17:20:17.1984469Z                         "lineChange": "none"
2023-06-01T17:20:17.1984633Z                       },
2023-06-01T17:20:17.1984833Z                       {
2023-06-01T17:20:17.1985032Z                         "line": "/////////////////////////////////////////////////////",
2023-06-01T17:20:17.1985229Z                         "lineNumber": 53,
2023-06-01T17:20:17.1985455Z                         "lineChange": "none"
2023-06-01T17:20:17.1985657Z                       },
2023-06-01T17:20:17.1985840Z                       {
2023-06-01T17:20:17.1986854Z                         "line": "const badWords = '\\\\o(shtyl|(\\\\j*?)shpx(\\\\j*?)|s(h|i|\\\\*)?p?x(vat?)?|(\\\\j*?)fu(v|1|y)g(\\\\j*?)|pe(n|@|\\\\*)c(cre|crq|l)?|(onq|qhzo|wnpx)?(n|@)ff(u(b|0)yr|jvcr)?|(onq|qhzo|wnpx)?(n|@)efr(u(b|0)yr|jvcr)?|onfgneq|o(v|1|y|\\\\*)?g?pu(r?f)?|phag|phz|(tbq?)?qnz(a|z)(vg)?|qbhpur(\\\\j*?)|(arj)?snt(tbg|tng)?|sevt(tra|tva|tvat)?|bzst|cvff(\\\\j*?)|cbea|encr|ergneq|frk|f r k|fung|fyhg|gvg|ju(b|0)er(\\\\j*?)|jg(s|su|u))(f|rq)?\\\\o' // rot13",
2023-06-01T17:20:17.1987512Z                         "lineNumber": 55,
2023-06-01T17:20:17.1987718Z                         "lineChange": "none"
2023-06-01T17:20:17.1988121Z                       },
2023-06-01T17:20:17.1988309Z                       {
2023-06-01T17:20:17.1988599Z                         "line": "const signupProjectId = 115307769 // null to disable check",
2023-06-01T17:20:17.1988896Z                         "lineNumber": 56,
2023-06-01T17:20:17.1989132Z                         "lineChange": "none"
2023-06-01T17:20:17.1989363Z                       },
2023-06-01T17:20:17.1989558Z                       {
2023-06-01T17:20:17.1989840Z                         "line": "const requireEmailConfirmedToShare = false",
2023-06-01T17:20:17.1990120Z                         "lineNumber": 57,
2023-06-01T17:20:17.1990353Z                         "lineChange": "none"
2023-06-01T17:20:17.1990586Z                       },
2023-06-01T17:20:17.1990783Z                       {
2023-06-01T17:20:17.1991016Z                         "line": "/////////////////////////////////////////////////////////",
2023-06-01T17:20:17.1991205Z                         "lineNumber": 59,
2023-06-01T17:20:17.1991425Z                         "lineChange": "none"
2023-06-01T17:20:17.1991654Z                       },
2023-06-01T17:20:17.1991841Z                       {
2023-06-01T17:20:17.1992143Z                         "line": "const badWordsRegex = new RegExp(rot(badWords, -13), 'gi')",
2023-06-01T17:20:17.1992444Z                         "lineNumber": 61,
2023-06-01T17:20:17.1992686Z                         "lineChange": "none"
2023-06-01T17:20:17.1992923Z                       },
2023-06-01T17:20:17.1993115Z                       {
2023-06-01T17:20:17.1993403Z                         "line": "const hasBadWords = text => text.match(badWordsRegex)",
2023-06-01T17:20:17.1993699Z                         "lineNumber": 62,
2023-06-01T17:20:17.1993960Z                         "lineChange": "none"
2023-06-01T17:20:17.1994177Z                       },
2023-06-01T17:20:17.1994369Z                       {
2023-06-01T17:20:17.1995166Z                         "line": "const replaceBadWords = (text, w='⋆⋆⋆⋆') => text.replace(badWordsRegex, w)",
2023-06-01T17:20:17.1995500Z                         "lineNumber": 63,
2023-06-01T17:20:17.1995764Z                         "lineChange": "none"
2023-06-01T17:20:17.1995985Z                       },
2023-06-01T17:20:17.1996179Z                       {
2023-06-01T17:20:17.1996396Z                         "line": "/////////////////////////////////////////////////////////",
2023-06-01T17:20:17.1996608Z                         "lineNumber": 65,
2023-06-01T17:20:17.1996852Z                         "lineChange": "none"
2023-06-01T17:20:17.1997068Z                       },
2023-06-01T17:20:17.1997262Z                       {
2023-06-01T17:20:17.1997495Z                         "line": "let app = express()",
2023-06-01T17:20:17.1997905Z                         "lineNumber": 67,
2023-06-01T17:20:17.1998175Z                         "lineChange": "none"
2023-06-01T17:20:17.1998392Z                       },
2023-06-01T17:20:17.1998605Z                       {
2023-06-01T17:20:17.1998880Z                         "line": "app.engine('hbs', exprhbs.create({",
2023-06-01T17:20:17.1999156Z                         "lineNumber": 69,
2023-06-01T17:20:17.1999407Z                         "lineChange": "none"
2023-06-01T17:20:17.2000539Z                       },
2023-06-01T17:20:17.2000753Z                       {
2023-06-01T17:20:17.2001014Z                         "line": "  defaultLayout: 'main',",
2023-06-01T17:20:17.2001269Z                         "lineNumber": 70,
2023-06-01T17:20:17.2001520Z                         "lineChange": "none"
2023-06-01T17:20:17.2001739Z                       },
2023-06-01T17:20:17.2001932Z                       {
2023-06-01T17:20:17.2002173Z                         "line": "  extname: '.hbs',",
2023-06-01T17:20:17.2002419Z                         "lineNumber": 71,
2023-06-01T17:20:17.2002675Z                         "lineChange": "none"
2023-06-01T17:20:17.2002900Z                       },
2023-06-01T17:20:17.2003261Z                       {
2023-06-01T17:20:17.2003482Z                         "line": "  layoutsDir: 'public/views/layouts/',",
2023-06-01T17:20:17.2003706Z                         "lineNumber": 72,
2023-06-01T17:20:17.2003942Z                         "lineChange": "none"
2023-06-01T17:20:17.2004128Z                       },
2023-06-01T17:20:17.2004284Z                       {
2023-06-01T17:20:17.2004525Z                         "line": "  partialsDir: 'public/views/partials/',",
2023-06-01T17:20:17.2004798Z                         "lineNumber": 73,
2023-06-01T17:20:17.2005018Z                         "lineChange": "none"
2023-06-01T17:20:17.2005207Z                       },
2023-06-01T17:20:17.2005379Z                       {
2023-06-01T17:20:17.2005574Z                         "line": "  helpers: {",
2023-06-01T17:20:17.2005786Z                         "lineNumber": 75,
2023-06-01T17:20:17.2006019Z                         "lineChange": "none"
2023-06-01T17:20:17.2006207Z                       },
2023-06-01T17:20:17.2006400Z                       {
2023-06-01T17:20:17.2006666Z                         "line": "    md: raw => marked(raw, { sanitize: true }),",
2023-06-01T17:20:17.2006927Z                         "lineNumber": 76,
2023-06-01T17:20:17.2007155Z                         "lineChange": "none"
2023-06-01T17:20:17.2007338Z                       },
2023-06-01T17:20:17.2007526Z                       {
2023-06-01T17:20:17.2007724Z                         "line": "    json: raw => JSON.stringify(raw),",
2023-06-01T17:20:17.2008023Z                         "lineNumber": 77,
2023-06-01T17:20:17.2008256Z                         "lineChange": "none"
2023-06-01T17:20:17.2008461Z                       },
2023-06-01T17:20:17.2008671Z                       {
2023-06-01T17:20:17.2008947Z                         "line": "    timeago: raw => `<span class='timeago'>${raw}</span>`",
2023-06-01T17:20:17.2009218Z                         "lineNumber": 78,
2023-06-01T17:20:17.2009658Z                         "lineChange": "none"
2023-06-01T17:20:17.2009881Z                       },
2023-06-01T17:20:17.2010051Z                       {
2023-06-01T17:20:17.2010214Z                         "line": "  }",
2023-06-01T17:20:17.2010400Z                         "lineNumber": 79,
2023-06-01T17:20:17.2010645Z                         "lineChange": "none"
2023-06-01T17:20:17.2010847Z                       },
2023-06-01T17:20:17.2011043Z                       {
2023-06-01T17:20:17.2011225Z                         "line": "}).engine)",
2023-06-01T17:20:17.2011425Z                         "lineNumber": 80,
2023-06-01T17:20:17.2011627Z                         "lineChange": "none"
2023-06-01T17:20:17.2011803Z                       },
2023-06-01T17:20:17.2011985Z                       {
2023-06-01T17:20:17.2012187Z                         "line": "app.set('views', 'public/views')",
2023-06-01T17:20:17.2012414Z                         "lineNumber": 82,
2023-06-01T17:20:17.2012650Z                         "lineChange": "none"
2023-06-01T17:20:17.2012846Z                       },
2023-06-01T17:20:17.2013054Z                       {
2023-06-01T17:20:17.2013292Z                         "line": "app.set('view engine', 'hbs')",
2023-06-01T17:20:17.2013536Z                         "lineNumber": 83,
2023-06-01T17:20:17.2013775Z                         "lineChange": "none"
2023-06-01T17:20:17.2013983Z                       },
2023-06-01T17:20:17.2014189Z                       {
2023-06-01T17:20:17.2014416Z                         "line": "app.set('trust proxy', 1)",
2023-06-01T17:20:17.2014665Z                         "lineNumber": 85,
2023-06-01T17:20:17.2014911Z                         "lineChange": "none"
2023-06-01T17:20:17.2015117Z                       },
2023-06-01T17:20:17.2015302Z                       {
2023-06-01T17:20:17.2015523Z                         "line": "app.set('json spaces', 2)",
2023-06-01T17:20:17.2015784Z                         "lineNumber": 86,
2023-06-01T17:20:17.2016182Z                         "lineChange": "none"
2023-06-01T17:20:17.2016403Z                       },
2023-06-01T17:20:17.2016610Z                       {
2023-06-01T17:20:17.2016842Z                         "line": "app.use(session({",
2023-06-01T17:20:17.2017095Z                         "lineNumber": 88,
2023-06-01T17:20:17.2017361Z                         "lineChange": "none"
2023-06-01T17:20:17.2017585Z                       },
2023-06-01T17:20:17.2017794Z                       {
2023-06-01T17:20:17.2018051Z                         "line": "  secret: 'thisandagainplsexplain',",
2023-06-01T17:20:17.2018326Z                         "lineNumber": 86,
2023-06-01T17:20:17.2018589Z                         "lineChange": "removed"
2023-06-01T17:20:17.2018814Z                       },
2023-06-01T17:20:17.2019032Z                       {
2023-06-01T17:20:17.2019291Z                         "line": "  secret: process.env.session_secret,",
2023-06-01T17:20:17.2019588Z                         "lineNumber": 89,
2023-06-01T17:20:17.2019835Z                         "lineChange": "added"
2023-06-01T17:20:17.2020056Z                       },
2023-06-01T17:20:17.2020269Z                       {
2023-06-01T17:20:17.2020544Z                         "line": "  cookie: { secure: false }, // enable if running on HTTPS",
2023-06-01T17:20:17.2020855Z                         "lineNumber": 90,
2023-06-01T17:20:17.2021102Z                         "lineChange": "none"
2023-06-01T17:20:17.2021324Z                       },
2023-06-01T17:20:17.2021537Z                       {
2023-06-01T17:20:17.2021770Z                         "line": "  resave: true,",
2023-06-01T17:20:17.2022036Z                         "lineNumber": 91,
2023-06-01T17:20:17.2022283Z                         "lineChange": "none"
2023-06-01T17:20:17.2022504Z                       },
2023-06-01T17:20:17.2022712Z                       {
2023-06-01T17:20:17.2022958Z                         "line": "  saveUninitialized: true,",
2023-06-01T17:20:17.2023329Z                         "lineNumber": 92,
2023-06-01T17:20:17.2023575Z                         "lineChange": "none"
2023-06-01T17:20:17.2023796Z                       },
2023-06-01T17:20:17.2024006Z                       {
2023-06-01T17:20:17.2024248Z                         "line": "  store: new sessionStore({",
2023-06-01T17:20:17.2024530Z                         "lineNumber": 93,
2023-06-01T17:20:17.2024757Z                         "lineChange": "none"
2023-06-01T17:20:17.2024974Z                       },
2023-06-01T17:20:17.2025184Z                       {
2023-06-01T17:20:17.2025408Z                         "line": "    path: 'db/session',",
2023-06-01T17:20:17.2025667Z                         "lineNumber": 94,
2023-06-01T17:20:17.2025901Z                         "lineChange": "none"
2023-06-01T17:20:17.2026121Z                       },
2023-06-01T17:20:17.2026330Z                       {
2023-06-01T17:20:17.2026554Z                         "line": "    logFn: ()=>{}",
2023-06-01T17:20:17.2026823Z                         "lineNumber": 95,
2023-06-01T17:20:17.2027063Z                         "lineChange": "none"
2023-06-01T17:20:17.2027278Z                       },
2023-06-01T17:20:17.2027493Z                       {
2023-06-01T17:20:17.2027699Z                         "line": "  })",
2023-06-01T17:20:17.2027948Z                         "lineNumber": 96,
2023-06-01T17:20:17.2028192Z                         "lineChange": "none"
2023-06-01T17:20:17.2028414Z                       },
2023-06-01T17:20:17.2028633Z                       {
2023-06-01T17:20:17.2028847Z                         "line": "}))",
2023-06-01T17:20:17.2029096Z                         "lineNumber": 97,
2023-06-01T17:20:17.2029322Z                         "lineChange": "none"
2023-06-01T17:20:17.2029544Z                       },
2023-06-01T17:20:17.2029755Z                       {
2023-06-01T17:20:17.2029997Z                         "line": "const upload = multer({",
2023-06-01T17:20:17.2030275Z                         "lineNumber": 99,
2023-06-01T17:20:17.2030592Z                         "lineChange": "none"
2023-06-01T17:20:17.2030812Z                       },
2023-06-01T17:20:17.2031025Z                       {
2023-06-01T17:20:17.2031276Z                         "line": "  storage: multer.diskStorage({",
2023-06-01T17:20:17.2031552Z                         "lineNumber": 100,
2023-06-01T17:20:17.2031795Z                         "lineChange": "none"
2023-06-01T17:20:17.2032016Z                       },
2023-06-01T17:20:17.2032235Z                       {
2023-06-01T17:20:17.2032574Z                         "line": "    destination: (req, file, cb) => cb(null, path.join(__dirname, '../../', 'db/resource')),",
2023-06-01T17:20:17.2032941Z                         "lineNumber": 101,
2023-06-01T17:20:17.2033184Z                         "lineChange": "none"
2023-06-01T17:20:17.2033415Z                       },
2023-06-01T17:20:17.2033614Z                       {
2023-06-01T17:20:17.2033868Z                         "line": "    filename: (req, file, cb) => {",
2023-06-01T17:20:17.2034160Z                         "lineNumber": 102,
2023-06-01T17:20:17.2034662Z                         "lineChange": "none"
2023-06-01T17:20:17.2034907Z                       },
2023-06-01T17:20:17.2035101Z                       {
2023-06-01T17:20:17.2035366Z                         "line": "      if(!req.session.user) cb(null, false)",
2023-06-01T17:20:17.2035660Z                         "lineNumber": 103,
2023-06-01T17:20:17.2035895Z                         "lineChange": "none"
2023-06-01T17:20:17.2036123Z                       },
2023-06-01T17:20:17.2036317Z                       {
2023-06-01T17:20:17.2036564Z                         "line": "      let filename = base32.encode(",
2023-06-01T17:20:17.2036846Z                         "lineNumber": 105,
2023-06-01T17:20:17.2037088Z                         "lineChange": "none"
2023-06-01T17:20:17.2037317Z                       },
2023-06-01T17:20:17.2037628Z                       {
2023-06-01T17:20:17.2037846Z                         "line": "        shortid()",
2023-06-01T17:20:17.2038100Z                         "lineNumber": 106,
2023-06-01T17:20:17.2038339Z                         "lineChange": "none"
2023-06-01T17:20:17.2038573Z                       },
2023-06-01T17:20:17.2038778Z                       {
2023-06-01T17:20:17.2038988Z                         "line": "      )",
2023-06-01T17:20:17.2039238Z                         "lineNumber": 107,
2023-06-01T17:20:17.2039479Z                         "lineChange": "none"
2023-06-01T17:20:17.2039709Z                       },
2023-06-01T17:20:17.2039898Z                       {
2023-06-01T17:20:17.2040138Z                         "line": "      cb(null, filename)",
2023-06-01T17:20:17.2040411Z                         "lineNumber": 109,
2023-06-01T17:20:17.2040654Z                         "lineChange": "none"
2023-06-01T17:20:17.2040886Z                       },
2023-06-01T17:20:17.2041089Z                       {
2023-06-01T17:20:17.2041304Z                         "line": "    }",
2023-06-01T17:20:17.2041554Z                         "lineNumber": 110,
2023-06-01T17:20:17.2041798Z                         "lineChange": "none"
2023-06-01T17:20:17.2042030Z                       },
2023-06-01T17:20:17.2042226Z                       {
2023-06-01T17:20:17.2042435Z                         "line": "  })",
2023-06-01T17:20:17.2042692Z                         "lineNumber": 111,
2023-06-01T17:20:17.2042936Z                         "lineChange": "none"
2023-06-01T17:20:17.2043170Z                       },
2023-06-01T17:20:17.2043364Z                       {
2023-06-01T17:20:17.2043573Z                         "line": "})",
2023-06-01T17:20:17.2043822Z                         "lineNumber": 112,
2023-06-01T17:20:17.2044066Z                         "lineChange": "none"
2023-06-01T17:20:17.2044301Z                       },
2023-06-01T17:20:17.2044503Z                       {
2023-06-01T17:20:17.2044759Z                         "line": "app.use(bodyParser.json())",
2023-06-01T17:20:17.2045125Z                         "lineNumber": 114,
2023-06-01T17:20:17.2045368Z                         "lineChange": "none"
2023-06-01T17:20:17.2045602Z                       },
2023-06-01T17:20:17.2045798Z                       {
2023-06-01T17:20:17.2046075Z                         "line": "app.use(bodyParser.urlencoded({ extended: true }))",
2023-06-01T17:20:17.2046390Z                         "lineNumber": 112,
2023-06-01T17:20:17.2046642Z                         "lineChange": "removed"
2023-06-01T17:20:17.2046892Z                       },
2023-06-01T17:20:17.2047095Z                       {
2023-06-01T17:20:17.2047351Z                         "line": "app.use(function(req, res, next) {",
2023-06-01T17:20:17.2047646Z                         "lineNumber": 114,
2023-06-01T17:20:17.2047893Z                         "lineChange": "removed"
2023-06-01T17:20:17.2048128Z                       },
2023-06-01T17:20:17.2048321Z                       {
2023-06-01T17:20:17.2048609Z                         "line": "  req.session.udata = db.user.get(req.session.user || '')",
2023-06-01T17:20:17.2048927Z                         "lineNumber": 115,
2023-06-01T17:20:17.2049177Z                         "lineChange": "removed"
2023-06-01T17:20:17.2049409Z                       },
2023-06-01T17:20:17.2049598Z                       {
2023-06-01T17:20:17.2049911Z                         "line": "  if(req.session.user && !db.user.exists(req.session.user)) {",
2023-06-01T17:20:17.2050222Z                         "lineNumber": 117,
2023-06-01T17:20:17.2050467Z                         "lineChange": "removed"
2023-06-01T17:20:17.2050707Z                       },
2023-06-01T17:20:17.2050909Z                       {
2023-06-01T17:20:17.2051170Z                         "line": "    delete req.session.user",
2023-06-01T17:20:17.2051432Z                         "lineNumber": 118,
2023-06-01T17:20:17.2051743Z                         "lineChange": "removed"
2023-06-01T17:20:17.2051985Z                       },
2023-06-01T17:20:17.2052180Z                       {
2023-06-01T17:20:17.2052404Z                         "line": "  }",
2023-06-01T17:20:17.2052635Z                         "lineNumber": 119,
2023-06-01T17:20:17.2052880Z                         "lineChange": "removed"
2023-06-01T17:20:17.2053112Z                       },
2023-06-01T17:20:17.2053307Z                       {
2023-06-01T17:20:17.2053534Z                         "line": "  next()",
2023-06-01T17:20:17.2053766Z                         "lineNumber": 121,
2023-06-01T17:20:17.2054009Z                         "lineChange": "removed"
2023-06-01T17:20:17.2054246Z                       },
2023-06-01T17:20:17.2054436Z                       {
2023-06-01T17:20:17.2054659Z                         "line": "})",
2023-06-01T17:20:17.2054892Z                         "lineNumber": 122,
2023-06-01T17:20:17.2055140Z                         "lineChange": "removed"
2023-06-01T17:20:17.2055380Z                       },
2023-06-01T17:20:17.2055562Z                       {
2023-06-01T17:20:17.2055850Z                         "line": "app.use(bodyParser.urlencoded({ extended: false }))",
2023-06-01T17:20:17.2056150Z                         "lineNumber": 115,
2023-06-01T17:20:17.2056399Z                         "lineChange": "added"
2023-06-01T17:20:17.2056631Z                       },
2023-06-01T17:20:17.2056830Z                       {
2023-06-01T17:20:17.2057103Z                         "line": "function mustSignIn(req, res, next) {",
2023-06-01T17:20:17.2057381Z                         "lineNumber": 124,
2023-06-01T17:20:17.2057626Z                         "lineChange": "none"
2023-06-01T17:20:17.2057864Z                       },
2023-06-01T17:20:17.2058060Z                       {
2023-06-01T17:20:17.2058309Z                         "line": "  if(req.session.user) {",
2023-06-01T17:20:17.2058570Z                         "lineNumber": 125,
2023-06-01T17:20:17.2058811Z                         "lineChange": "none"
2023-06-01T17:20:17.2059106Z                       },
2023-06-01T17:20:17.2059300Z                       {
2023-06-01T17:20:17.2059532Z                         "line": "    next()",
2023-06-01T17:20:17.2059767Z                         "lineNumber": 126,
2023-06-01T17:20:17.2060009Z                         "lineChange": "none"
2023-06-01T17:20:17.2060243Z                       },
2023-06-01T17:20:17.2060440Z                       {
2023-06-01T17:20:17.2060667Z                         "line": "  } else {",
2023-06-01T17:20:17.2060898Z                         "lineNumber": 127,
2023-06-01T17:20:17.2061133Z                         "lineChange": "none"
2023-06-01T17:20:17.2061366Z                       },
2023-06-01T17:20:17.2061564Z                       {
2023-06-01T17:20:17.2061829Z                         "line": "    req.session.r = req.originalUrl",
2023-06-01T17:20:17.2062100Z                         "lineNumber": 128,
2023-06-01T17:20:17.2062365Z                         "lineChange": "none"
2023-06-01T17:20:17.2062584Z                       },
2023-06-01T17:20:17.2062782Z                       {
2023-06-01T17:20:17.2063040Z                         "line": "    res.redirect('/signin')",
2023-06-01T17:20:17.2063302Z                         "lineNumber": 129,
2023-06-01T17:20:17.2063558Z                         "lineChange": "none"
2023-06-01T17:20:17.2063777Z                       },
2023-06-01T17:20:17.2063972Z                       {
2023-06-01T17:20:17.2064182Z                         "line": "  }",
2023-06-01T17:20:17.2064407Z                         "lineNumber": 130,
2023-06-01T17:20:17.2064657Z                         "lineChange": "none"
2023-06-01T17:20:17.2064870Z                       },
2023-06-01T17:20:17.2065061Z                       {
2023-06-01T17:20:17.2065279Z                         "line": "}",
2023-06-01T17:20:17.2065508Z                         "lineNumber": 131,
2023-06-01T17:20:17.2065843Z                         "lineChange": "none"
2023-06-01T17:20:17.2066064Z                       },
2023-06-01T17:20:17.2066257Z                       {
2023-06-01T17:20:17.2066489Z                         "line": "app.use(csrf({",
2023-06-01T17:20:17.2066858Z                         "lineNumber": 126,
2023-06-01T17:20:17.2067113Z                         "lineChange": "added"
2023-06-01T17:20:17.2067336Z                       },
2023-06-01T17:20:17.2067534Z                       {
2023-06-01T17:20:17.2067789Z                         "line": "  value: req => req.body.csrf",
2023-06-01T17:20:17.2068051Z                         "lineNumber": 127,
2023-06-01T17:20:17.2068315Z                         "lineChange": "added"
2023-06-01T17:20:17.2068534Z                       },
2023-06-01T17:20:17.2068728Z                       {
2023-06-01T17:20:17.2068945Z                         "line": "}))",
2023-06-01T17:20:17.2069173Z                         "lineNumber": 128,
2023-06-01T17:20:17.2069436Z                         "lineChange": "added"
2023-06-01T17:20:17.2069659Z                       },
2023-06-01T17:20:17.2069854Z                       {
2023-06-01T17:20:17.2070123Z                         "line": "app.use(function(err, req, res, next) {",
2023-06-01T17:20:17.2070399Z                         "lineNumber": 130,
2023-06-01T17:20:17.2070652Z                         "lineChange": "added"
2023-06-01T17:20:17.2070870Z                       },
2023-06-01T17:20:17.2071063Z                       {
2023-06-01T17:20:17.2071353Z                         "line": "  if(err.code !== 'EBADCSRFTOKEN') return next(err)",
2023-06-01T17:20:17.2071649Z                         "lineNumber": 131,
2023-06-01T17:20:17.2071902Z                         "lineChange": "added"
2023-06-01T17:20:17.2072122Z                       },
2023-06-01T17:20:17.2072318Z                       {
2023-06-01T17:20:17.2072578Z                         "line": "  res.status(403).render('403', {",
2023-06-01T17:20:17.2072851Z                         "lineNumber": 133,
2023-06-01T17:20:17.2073196Z                         "lineChange": "added"
2023-06-01T17:20:17.2073412Z                       },
2023-06-01T17:20:17.2073612Z                       {
2023-06-01T17:20:17.2073868Z                         "line": "    user: req.session.user",
2023-06-01T17:20:17.2074122Z                         "lineNumber": 134,
2023-06-01T17:20:17.2074377Z                         "lineChange": "added"
2023-06-01T17:20:17.2074593Z                       },
2023-06-01T17:20:17.2074797Z                       {
2023-06-01T17:20:17.2075001Z                         "line": "  })",
2023-06-01T17:20:17.2075232Z                         "lineNumber": 135,
2023-06-01T17:20:17.2075483Z                         "lineChange": "added"
2023-06-01T17:20:17.2075708Z                       },
2023-06-01T17:20:17.2075914Z                       {
2023-06-01T17:20:17.2076125Z                         "line": "})",
2023-06-01T17:20:17.2076350Z                         "lineNumber": 136,
2023-06-01T17:20:17.2076613Z                         "lineChange": "added"
2023-06-01T17:20:17.2076823Z                       }
2023-06-01T17:20:17.2077023Z                     ]
2023-06-01T17:20:17.2077216Z                   },
2023-06-01T17:20:17.2077408Z                   {
2023-06-01T17:20:17.2077885Z                     "commitURL": "https://github.com/pietrzakadrian/bank/commit/c37779b4b85c031001c5d84aa259adface1d6602?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L18",
2023-06-01T17:20:17.2078336Z                     "lines": [
2023-06-01T17:20:17.2078552Z                       {
2023-06-01T17:20:17.2078790Z                         "line": "const app = express();",
2023-06-01T17:20:17.2079043Z                         "lineNumber": 17,
2023-06-01T17:20:17.2079283Z                         "lineChange": "none"
2023-06-01T17:20:17.2079856Z                       },
2023-06-01T17:20:17.2080067Z                       {
2023-06-01T17:20:17.2080443Z                         "line": "const server = require('http').Server(app, {",
2023-06-01T17:20:17.2081545Z                         "lineNumber": 18,
2023-06-01T17:20:17.2081831Z                         "lineChange": "none"
2023-06-01T17:20:17.2082033Z                       },
2023-06-01T17:20:17.2082232Z                       {
2023-06-01T17:20:17.2082485Z                         "line": "  transports: ['websocket', 'polling'],",
2023-06-01T17:20:17.2082744Z                         "lineNumber": 19,
2023-06-01T17:20:17.2082995Z                         "lineChange": "none"
2023-06-01T17:20:17.2083206Z                       },
2023-06-01T17:20:17.2083402Z                       {
2023-06-01T17:20:17.2083602Z                         "line": "});",
2023-06-01T17:20:17.2083823Z                         "lineNumber": 20,
2023-06-01T17:20:17.2084074Z                         "lineChange": "none"
2023-06-01T17:20:17.2084288Z                       },
2023-06-01T17:20:17.2084494Z                       {
2023-06-01T17:20:17.2084784Z                         "line": "const io = require('socket.io')(server, { pingTimeout: 60000 });",
2023-06-01T17:20:17.2085109Z                         "lineNumber": 21,
2023-06-01T17:20:17.2085346Z                         "lineChange": "none"
2023-06-01T17:20:17.2085555Z                       },
2023-06-01T17:20:17.2085762Z                       {
2023-06-01T17:20:17.2086017Z                         "line": "const cron = require('node-cron');",
2023-06-01T17:20:17.2086300Z                         "lineNumber": 22,
2023-06-01T17:20:17.2086538Z                         "lineChange": "none"
2023-06-01T17:20:17.2086754Z                       },
2023-06-01T17:20:17.2086997Z                       {
2023-06-01T17:20:17.2087272Z                         "line": "const swaggerUi = require('swagger-ui-express');",
2023-06-01T17:20:17.2087571Z                         "lineNumber": 23,
2023-06-01T17:20:17.2087811Z                         "lineChange": "none"
2023-06-01T17:20:17.2088031Z                       },
2023-06-01T17:20:17.2088376Z                       {
2023-06-01T17:20:17.2088648Z                         "line": "const swaggerDocument = require('./utils/swagger.json');",
2023-06-01T17:20:17.2088934Z                         "lineNumber": 24,
2023-06-01T17:20:17.2089124Z                         "lineChange": "none"
2023-06-01T17:20:17.2089318Z                       },
2023-06-01T17:20:17.2089517Z                       {
2023-06-01T17:20:17.2089742Z                         "line": "const db = require('./config/db.config');",
2023-06-01T17:20:17.2090041Z                         "lineNumber": 25,
2023-06-01T17:20:17.2090287Z                         "lineChange": "none"
2023-06-01T17:20:17.2090503Z                       },
2023-06-01T17:20:17.2090723Z                       {
2023-06-01T17:20:17.2090980Z                         "line": "const env = require('./config/env.config');",
2023-06-01T17:20:17.2091279Z                         "lineNumber": 26,
2023-06-01T17:20:17.2091534Z                         "lineChange": "none"
2023-06-01T17:20:17.2091752Z                       },
2023-06-01T17:20:17.2091957Z                       {
2023-06-01T17:20:17.2092210Z                         "line": "const Op = db.Sequelize.Op;",
2023-06-01T17:20:17.2092487Z                         "lineNumber": 27,
2023-06-01T17:20:17.2092729Z                         "lineChange": "none"
2023-06-01T17:20:17.2092947Z                       },
2023-06-01T17:20:17.2093171Z                       {
2023-06-01T17:20:17.2093443Z                         "line": "const cookieParser = require('cookie-parser');",
2023-06-01T17:20:17.2093738Z                         "lineNumber": 28,
2023-06-01T17:20:17.2093970Z                         "lineChange": "added"
2023-06-01T17:20:17.2094206Z                       },
2023-06-01T17:20:17.2094399Z                       {
2023-06-01T17:20:17.2094654Z                         "line": "const csrf = require('csurf');",
2023-06-01T17:20:17.2095093Z                         "lineNumber": 29,
2023-06-01T17:20:17.2095343Z                         "lineChange": "added"
2023-06-01T17:20:17.2095569Z                       },
2023-06-01T17:20:17.2095737Z                       {
2023-06-01T17:20:17.2096006Z                         "line": "app.use(bodyParser.urlencoded({ extended: true }));",
2023-06-01T17:20:17.2096314Z                         "lineNumber": 31,
2023-06-01T17:20:17.2096535Z                         "lineChange": "none"
2023-06-01T17:20:17.2096761Z                       },
2023-06-01T17:20:17.2096955Z                       {
2023-06-01T17:20:17.2097225Z                         "line": "app.use(bodyParser.json());",
2023-06-01T17:20:17.2097518Z                         "lineNumber": 32,
2023-06-01T17:20:17.2097757Z                         "lineChange": "none"
2023-06-01T17:20:17.2097991Z                       },
2023-06-01T17:20:17.2098192Z                       {
2023-06-01T17:20:17.2098406Z                         "line": "app.use(",
2023-06-01T17:20:17.2098660Z                         "lineNumber": 33,
2023-06-01T17:20:17.2098894Z                         "lineChange": "none"
2023-06-01T17:20:17.2099125Z                       },
2023-06-01T17:20:17.2100223Z                       {
2023-06-01T17:20:17.2100545Z                         "line": "  bodyParser.json({",
2023-06-01T17:20:17.2100828Z                         "lineNumber": 34,
2023-06-01T17:20:17.2101065Z                         "lineChange": "none"
2023-06-01T17:20:17.2101315Z                       },
2023-06-01T17:20:17.2101518Z                       {
2023-06-01T17:20:17.2101745Z                         "line": "    limit: '2000kb',",
2023-06-01T17:20:17.2102009Z                         "lineNumber": 35,
2023-06-01T17:20:17.2102242Z                         "lineChange": "none"
2023-06-01T17:20:17.2102482Z                       },
2023-06-01T17:20:17.2102680Z                       {
2023-06-01T17:20:17.2102893Z                         "line": "  }),",
2023-06-01T17:20:17.2103155Z                         "lineNumber": 36,
2023-06-01T17:20:17.2105076Z                         "lineChange": "none"
2023-06-01T17:20:17.2105329Z                       },
2023-06-01T17:20:17.2105537Z                       {
2023-06-01T17:20:17.2105747Z                         "line": ");",
2023-06-01T17:20:17.2105982Z                         "lineNumber": 37,
2023-06-01T17:20:17.2106216Z                         "lineChange": "none"
2023-06-01T17:20:17.2106461Z                       },
2023-06-01T17:20:17.2106669Z                       {
2023-06-01T17:20:17.2106912Z                         "line": "app.disable('x-powered-by');",
2023-06-01T17:20:17.2107197Z                         "lineNumber": 38,
2023-06-01T17:20:17.2107450Z                         "lineChange": "none"
2023-06-01T17:20:17.2107697Z                       },
2023-06-01T17:20:17.2107895Z                       {
2023-06-01T17:20:17.2108107Z                         "line": "app.use(cors());",
2023-06-01T17:20:17.2108345Z                         "lineNumber": 39,
2023-06-01T17:20:17.2108562Z                         "lineChange": "none"
2023-06-01T17:20:17.2108790Z                       },
2023-06-01T17:20:17.2108980Z                       {
2023-06-01T17:20:17.2109220Z                         "line": "app.use(cookieParser());",
2023-06-01T17:20:17.2109485Z                         "lineNumber": 40,
2023-06-01T17:20:17.2109708Z                         "lineChange": "added"
2023-06-01T17:20:17.2109933Z                       },
2023-06-01T17:20:17.2110107Z                       {
2023-06-01T17:20:17.2110845Z                         "line": "app.use((req, res, next) => {",
2023-06-01T17:20:17.2111115Z                         "lineNumber": 42,
2023-06-01T17:20:17.2111308Z                         "lineChange": "none"
2023-06-01T17:20:17.2111504Z                       },
2023-06-01T17:20:17.2111684Z                       {
2023-06-01T17:20:17.2111942Z                         "line": "  res.header('Access-Control-Allow-Origin', '*');",
2023-06-01T17:20:17.2112418Z                         "lineNumber": 43,
2023-06-01T17:20:17.2112660Z                         "lineChange": "none"
2023-06-01T17:20:17.2112901Z                       },
2023-06-01T17:20:17.2113091Z                       {
2023-06-01T17:20:17.2113314Z                         "line": "  res.header(",
2023-06-01T17:20:17.2113565Z                         "lineNumber": 44,
2023-06-01T17:20:17.2113796Z                         "lineChange": "none"
2023-06-01T17:20:17.2114032Z                       },
2023-06-01T17:20:17.2114240Z                       {
2023-06-01T17:20:17.2114488Z                         "line": "    'Access-Control-Allow-Headers',",
2023-06-01T17:20:17.2114768Z                         "lineNumber": 45,
2023-06-01T17:20:17.2115023Z                         "lineChange": "none"
2023-06-01T17:20:17.2115253Z                       },
2023-06-01T17:20:17.2115447Z                       {
2023-06-01T17:20:17.2115737Z                         "line": "    'Origin, X-Requested-With, Content-Type, Accept, Authorization',",
2023-06-01T17:20:17.2116074Z                         "lineNumber": 46,
2023-06-01T17:20:17.2116313Z                         "lineChange": "none"
2023-06-01T17:20:17.2116555Z                       },
2023-06-01T17:20:17.2116761Z                       {
2023-06-01T17:20:17.2117003Z                         "line": "  );",
2023-06-01T17:20:17.2117222Z                         "lineNumber": 47,
2023-06-01T17:20:17.2117457Z                         "lineChange": "none"
2023-06-01T17:20:17.2117711Z                       },
2023-06-01T17:20:17.2117910Z                       {
2023-06-01T17:20:17.2118170Z                         "line": "  if (req.method === 'OPTIONS') {",
2023-06-01T17:20:17.2118439Z                         "lineNumber": 49,
2023-06-01T17:20:17.2118673Z                         "lineChange": "none"
2023-06-01T17:20:17.2118914Z                       },
2023-06-01T17:20:17.2119109Z                       {
2023-06-01T17:20:17.2119449Z                         "line": "    res.header('Access-Control-Allow-Methods', 'PUT, POST, PATCH, DELETE, GET');",
2023-06-01T17:20:17.2119913Z                         "lineNumber": 50,
2023-06-01T17:20:17.2120155Z                         "lineChange": "none"
2023-06-01T17:20:17.2120394Z                       },
2023-06-01T17:20:17.2120590Z                       {
2023-06-01T17:20:17.2120842Z                         "line": "    return res.status(200).json({});",
2023-06-01T17:20:17.2121112Z                         "lineNumber": 51,
2023-06-01T17:20:17.2121357Z                         "lineChange": "none"
2023-06-01T17:20:17.2121600Z                       },
2023-06-01T17:20:17.2121791Z                       {
2023-06-01T17:20:17.2122016Z                         "line": "  }",
2023-06-01T17:20:17.2122248Z                         "lineNumber": 52,
2023-06-01T17:20:17.2122481Z                         "lineChange": "none"
2023-06-01T17:20:17.2122715Z                       },
2023-06-01T17:20:17.2122918Z                       {
2023-06-01T17:20:17.2123159Z                         "line": "  next();",
2023-06-01T17:20:17.2123394Z                         "lineNumber": 53,
2023-06-01T17:20:17.2123656Z                         "lineChange": "none"
2023-06-01T17:20:17.2123897Z                       },
2023-06-01T17:20:17.2124094Z                       {
2023-06-01T17:20:17.2124305Z                         "line": "});",
2023-06-01T17:20:17.2124506Z                         "lineNumber": 54,
2023-06-01T17:20:17.2124749Z                         "lineChange": "none"
2023-06-01T17:20:17.2124985Z                       },
2023-06-01T17:20:17.2125182Z                       {
2023-06-01T17:20:17.2125522Z                         "line": "app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));",
2023-06-01T17:20:17.2125848Z                         "lineNumber": 56,
2023-06-01T17:20:17.2126108Z                         "lineChange": "none"
2023-06-01T17:20:17.2127285Z                       },
2023-06-01T17:20:17.2127495Z                       {
2023-06-01T17:20:17.2127755Z                         "line": "app.use(morgan('dev'));",
2023-06-01T17:20:17.2128017Z                         "lineNumber": 57,
2023-06-01T17:20:17.2128271Z                         "lineChange": "added"
2023-06-01T17:20:17.2128492Z                       },
2023-06-01T17:20:17.2128688Z                       {
2023-06-01T17:20:17.2128970Z                         "line": "require('./routes/currency.route.js')(app);",
2023-06-01T17:20:17.2129257Z                         "lineNumber": 59,
2023-06-01T17:20:17.2129511Z                         "lineChange": "added"
2023-06-01T17:20:17.2129732Z                       },
2023-06-01T17:20:17.2129928Z                       {
2023-06-01T17:20:17.2130191Z                         "line": "app.use(csrf({ cookie: true }));",
2023-06-01T17:20:17.2130456Z                         "lineNumber": 60,
2023-06-01T17:20:17.2130710Z                         "lineChange": "added"
2023-06-01T17:20:17.2130933Z                       }
2023-06-01T17:20:17.2131130Z                     ]
2023-06-01T17:20:17.2131336Z                   }
2023-06-01T17:20:17.2131534Z                 ],
2023-06-01T17:20:17.2131785Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2132050Z                 "precision": "very-high",
2023-06-01T17:20:17.2132304Z                 "repoDatasetSize": 701,
2023-06-01T17:20:17.2132553Z                 "cwe": [
2023-06-01T17:20:17.2132770Z                   "CWE-352"
2023-06-01T17:20:17.2132988Z                 ]
2023-06-01T17:20:17.2133180Z               }
2023-06-01T17:20:17.2133374Z             },
2023-06-01T17:20:17.2133583Z             {
2023-06-01T17:20:17.2133868Z               "id": "javascript/NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2134221Z               "name": "NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2134503Z               "shortDescription": {
2023-06-01T17:20:17.2134807Z                 "text": "Allocation of Resources Without Limits or Throttling"
2023-06-01T17:20:17.2135171Z               },
2023-06-01T17:20:17.2135399Z               "defaultConfiguration": {
2023-06-01T17:20:17.2135660Z                 "level": "warning"
2023-06-01T17:20:17.2135873Z               },
2023-06-01T17:20:17.2136075Z               "help": {
2023-06-01T17:20:17.2138954Z                 "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
2023-06-01T17:20:17.2141623Z                 "text": ""
2023-06-01T17:20:17.2141848Z               },
2023-06-01T17:20:17.2142063Z               "properties": {
2023-06-01T17:20:17.2142301Z                 "tags": [
2023-06-01T17:20:17.2142522Z                   "javascript",
2023-06-01T17:20:17.2142792Z                   "NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2143068Z                   "Security"
2023-06-01T17:20:17.2143274Z                 ],
2023-06-01T17:20:17.2143501Z                 "categories": [
2023-06-01T17:20:17.2143722Z                   "Security"
2023-06-01T17:20:17.2143928Z                 ],
2023-06-01T17:20:17.2144167Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2144388Z                   {
2023-06-01T17:20:17.2144864Z                     "commitURL": "https://github.com/comatory/fb2iCal/commit/6a1ef614ade7ba821009dbce4a615d448751a449?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R5",
2023-06-01T17:20:17.2145319Z                     "lines": [
2023-06-01T17:20:17.2145535Z                       {
2023-06-01T17:20:17.2145811Z                         "line": "const rateLimit = require('express-rate-limit')",
2023-06-01T17:20:17.2146101Z                         "lineNumber": 4,
2023-06-01T17:20:17.2146358Z                         "lineChange": "added"
2023-06-01T17:20:17.2146577Z                       },
2023-06-01T17:20:17.2146787Z                       {
2023-06-01T17:20:17.2147040Z                         "line": "const crawl = require('./crawler')",
2023-06-01T17:20:17.2147310Z                         "lineNumber": 6,
2023-06-01T17:20:17.2147561Z                         "lineChange": "none"
2023-06-01T17:20:17.2147779Z                       },
2023-06-01T17:20:17.2147988Z                       {
2023-06-01T17:20:17.2148249Z                         "line": "const parseHTML = require('./parser')",
2023-06-01T17:20:17.2148572Z                         "lineNumber": 7,
2023-06-01T17:20:17.2148824Z                         "lineChange": "none"
2023-06-01T17:20:17.2149043Z                       },
2023-06-01T17:20:17.2149249Z                       {
2023-06-01T17:20:17.2149503Z                         "line": "const generateICS = require('./ics')",
2023-06-01T17:20:17.2149768Z                         "lineNumber": 8,
2023-06-01T17:20:17.2150015Z                         "lineChange": "none"
2023-06-01T17:20:17.2150230Z                       },
2023-06-01T17:20:17.2150437Z                       {
2023-06-01T17:20:17.2150737Z                         "line": "const { genericErrorHandler, checkFBURL } = require('./middlewares')",
2023-06-01T17:20:17.2151538Z                         "lineNumber": 9,
2023-06-01T17:20:17.2494795Z                         "lineChange": "none"
2023-06-01T17:20:17.2495179Z                       },
2023-06-01T17:20:17.2495401Z                       {
2023-06-01T17:20:17.2495675Z                         "line": "const port = process.env.PORT",
2023-06-01T17:20:17.2495923Z                         "lineNumber": 11,
2023-06-01T17:20:17.2496156Z                         "lineChange": "none"
2023-06-01T17:20:17.2496351Z                       },
2023-06-01T17:20:17.2496523Z                       {
2023-06-01T17:20:17.2496752Z                         "line": "const app = express()",
2023-06-01T17:20:17.2497009Z                         "lineNumber": 12,
2023-06-01T17:20:17.2497255Z                         "lineChange": "none"
2023-06-01T17:20:17.2497464Z                       },
2023-06-01T17:20:17.2497643Z                       {
2023-06-01T17:20:17.2497860Z                         "line": "app.set('view engine', 'ejs')",
2023-06-01T17:20:17.2498101Z                         "lineNumber": 14,
2023-06-01T17:20:17.2498334Z                         "lineChange": "none"
2023-06-01T17:20:17.2498546Z                       },
2023-06-01T17:20:17.2499165Z                       {
2023-06-01T17:20:17.2499395Z                         "line": "app.set('views', path.join(__dirname, 'views'))",
2023-06-01T17:20:17.2499658Z                         "lineNumber": 15,
2023-06-01T17:20:17.2499916Z                         "lineChange": "none"
2023-06-01T17:20:17.2500141Z                       },
2023-06-01T17:20:17.2500347Z                       {
2023-06-01T17:20:17.2500642Z                         "line": "app.use(express.static(path.join(__dirname, 'public')))",
2023-06-01T17:20:17.2500927Z                         "lineNumber": 17,
2023-06-01T17:20:17.2501146Z                         "lineChange": "none"
2023-06-01T17:20:17.2501329Z                       },
2023-06-01T17:20:17.2501504Z                       {
2023-06-01T17:20:17.2501746Z                         "line": "app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))",
2023-06-01T17:20:17.2502003Z                         "lineNumber": 18,
2023-06-01T17:20:17.2502219Z                         "lineChange": "none"
2023-06-01T17:20:17.2502429Z                       },
2023-06-01T17:20:17.2502617Z                       {
2023-06-01T17:20:17.2502837Z                         "line": "app.use(bodyParser())",
2023-06-01T17:20:17.2503064Z                         "lineNumber": 19,
2023-06-01T17:20:17.2503304Z                         "lineChange": "none"
2023-06-01T17:20:17.2503501Z                       },
2023-06-01T17:20:17.2503682Z                       {
2023-06-01T17:20:17.2503900Z                         "line": "app.get('/', (req, res) => {",
2023-06-01T17:20:17.2504123Z                         "lineNumber": 21,
2023-06-01T17:20:17.2504360Z                         "lineChange": "none"
2023-06-01T17:20:17.2504557Z                       },
2023-06-01T17:20:17.2504755Z                       {
2023-06-01T17:20:17.2504987Z                         "line": "  res.render('index')",
2023-06-01T17:20:17.2505239Z                         "lineNumber": 22,
2023-06-01T17:20:17.2505498Z                         "lineChange": "none"
2023-06-01T17:20:17.2505911Z                       },
2023-06-01T17:20:17.2506123Z                       {
2023-06-01T17:20:17.2506326Z                         "line": "})",
2023-06-01T17:20:17.2506547Z                         "lineNumber": 23,
2023-06-01T17:20:17.2506798Z                         "lineChange": "none"
2023-06-01T17:20:17.2507018Z                       },
2023-06-01T17:20:17.2507223Z                       {
2023-06-01T17:20:17.2507446Z                         "line": "app.get('/error', (req, res) => {",
2023-06-01T17:20:17.2507673Z                         "lineNumber": 25,
2023-06-01T17:20:17.2507971Z                         "lineChange": "none"
2023-06-01T17:20:17.2508189Z                       },
2023-06-01T17:20:17.2508404Z                       {
2023-06-01T17:20:17.2508678Z                         "line": "  const error = req.error || req.query.error || ''",
2023-06-01T17:20:17.2508979Z                         "lineNumber": 26,
2023-06-01T17:20:17.2509227Z                         "lineChange": "none"
2023-06-01T17:20:17.2509435Z                       },
2023-06-01T17:20:17.2509641Z                       {
2023-06-01T17:20:17.2509844Z                         "line": "  res",
2023-06-01T17:20:17.2510082Z                         "lineNumber": 28,
2023-06-01T17:20:17.2510318Z                         "lineChange": "none"
2023-06-01T17:20:17.2510536Z                       },
2023-06-01T17:20:17.2510742Z                       {
2023-06-01T17:20:17.2510971Z                         "line": "    .status(500)",
2023-06-01T17:20:17.2511210Z                         "lineNumber": 29,
2023-06-01T17:20:17.2511432Z                         "lineChange": "none"
2023-06-01T17:20:17.2511654Z                       },
2023-06-01T17:20:17.2511870Z                       {
2023-06-01T17:20:17.2512119Z                         "line": "    .render('error', { error })",
2023-06-01T17:20:17.2512408Z                         "lineNumber": 30,
2023-06-01T17:20:17.2512795Z                         "lineChange": "none"
2023-06-01T17:20:17.2513008Z                       },
2023-06-01T17:20:17.2513202Z                       {
2023-06-01T17:20:17.2513393Z                         "line": "})",
2023-06-01T17:20:17.2513619Z                         "lineNumber": 31,
2023-06-01T17:20:17.2513828Z                         "lineChange": "none"
2023-06-01T17:20:17.2514029Z                       },
2023-06-01T17:20:17.2514237Z                       {
2023-06-01T17:20:17.2514477Z                         "line": "// NOTE: Capture all unkown URLs",
2023-06-01T17:20:17.2514768Z                         "lineNumber": 38,
2023-06-01T17:20:17.2515015Z                         "lineChange": "none"
2023-06-01T17:20:17.2515239Z                       },
2023-06-01T17:20:17.2515450Z                       {
2023-06-01T17:20:17.2515704Z                         "line": "app.get('*', (req, res) => {",
2023-06-01T17:20:17.2515974Z                         "lineNumber": 39,
2023-06-01T17:20:17.2516178Z                         "lineChange": "none"
2023-06-01T17:20:17.2516363Z                       },
2023-06-01T17:20:17.2516550Z                       {
2023-06-01T17:20:17.2516750Z                         "line": "  res.status(400).render('404')",
2023-06-01T17:20:17.2516981Z                         "lineNumber": 40,
2023-06-01T17:20:17.2517177Z                         "lineChange": "none"
2023-06-01T17:20:17.2517353Z                       },
2023-06-01T17:20:17.2517537Z                       {
2023-06-01T17:20:17.2517707Z                         "line": "})",
2023-06-01T17:20:17.2517924Z                         "lineNumber": 41,
2023-06-01T17:20:17.2518126Z                         "lineChange": "none"
2023-06-01T17:20:17.2518321Z                       },
2023-06-01T17:20:17.2518505Z                       {
2023-06-01T17:20:17.2518733Z                         "line": "app.use('/download', checkFBURL)",
2023-06-01T17:20:17.2518998Z                         "lineNumber": 43,
2023-06-01T17:20:17.2520286Z                         "lineChange": "none"
2023-06-01T17:20:17.2520487Z                       },
2023-06-01T17:20:17.2520682Z                       {
2023-06-01T17:20:17.2520892Z                         "line": "app.use('/download', rateLimit())",
2023-06-01T17:20:17.2521133Z                         "lineNumber": 39,
2023-06-01T17:20:17.2521344Z                         "lineChange": "added"
2023-06-01T17:20:17.2521548Z                       }
2023-06-01T17:20:17.2521732Z                     ]
2023-06-01T17:20:17.2521907Z                   }
2023-06-01T17:20:17.2522083Z                 ],
2023-06-01T17:20:17.2522276Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2522492Z                 "precision": "very-high",
2023-06-01T17:20:17.2522715Z                 "repoDatasetSize": 1164,
2023-06-01T17:20:17.2522906Z                 "cwe": [
2023-06-01T17:20:17.2523098Z                   "CWE-770"
2023-06-01T17:20:17.2523281Z                 ]
2023-06-01T17:20:17.2523451Z               }
2023-06-01T17:20:17.2523639Z             },
2023-06-01T17:20:17.2523797Z             {
2023-06-01T17:20:17.2524036Z               "id": "javascript/NoHardcodedCredentials",
2023-06-01T17:20:17.2524296Z               "name": "NoHardcodedCredentials",
2023-06-01T17:20:17.2524526Z               "shortDescription": {
2023-06-01T17:20:17.2524762Z                 "text": "Use of Hardcoded Credentials"
2023-06-01T17:20:17.2524956Z               },
2023-06-01T17:20:17.2525152Z               "defaultConfiguration": {
2023-06-01T17:20:17.2525369Z                 "level": "warning"
2023-06-01T17:20:17.2525557Z               },
2023-06-01T17:20:17.2525740Z               "help": {
2023-06-01T17:20:17.2527180Z                 "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
2023-06-01T17:20:17.2529586Z                 "text": ""
2023-06-01T17:20:17.2529783Z               },
2023-06-01T17:20:17.2529983Z               "properties": {
2023-06-01T17:20:17.2530151Z                 "tags": [
2023-06-01T17:20:17.2531057Z                   "javascript",
2023-06-01T17:20:17.2531356Z                   "NoHardcodedCredentials",
2023-06-01T17:20:17.2531574Z                   "Security"
2023-06-01T17:20:17.2531709Z                 ],
2023-06-01T17:20:17.2531825Z                 "categories": [
2023-06-01T17:20:17.2531944Z                   "Security"
2023-06-01T17:20:17.2532075Z                 ],
2023-06-01T17:20:17.2532198Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2532330Z                   {
2023-06-01T17:20:17.2532552Z                     "commitURL": "https://github.com/IBM/smart-email-support/commit/a21929524dc0906fc32369d65acfa417335822cc?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL63",
2023-06-01T17:20:17.2532985Z                     "lines": [
2023-06-01T17:20:17.2533095Z                       {
2023-06-01T17:20:17.2533206Z                         "line": "   }",
2023-06-01T17:20:17.2533341Z                         "lineNumber": 60,
2023-06-01T17:20:17.2533472Z                         "lineChange": "none"
2023-06-01T17:20:17.2533601Z                       },
2023-06-01T17:20:17.2533709Z                       {
2023-06-01T17:20:17.2533877Z                         "line": "   var config = require('./config.json');",
2023-06-01T17:20:17.2534129Z                         "lineNumber": 61,
2023-06-01T17:20:17.2534344Z                         "lineChange": "added"
2023-06-01T17:20:17.2534560Z                       },
2023-06-01T17:20:17.2534746Z                       {
2023-06-01T17:20:17.2535008Z                         "line": "   process.env.support_email_id = 'patternemailautomation@gmail.com';",
2023-06-01T17:20:17.2535299Z                         "lineNumber": 62,
2023-06-01T17:20:17.2535518Z                         "lineChange": "none"
2023-06-01T17:20:17.2535717Z                       },
2023-06-01T17:20:17.2535889Z                       {
2023-06-01T17:20:17.2536118Z                         "line": "   process.env.sendgrid_api_key = '';",
2023-06-01T17:20:17.2536374Z                         "lineNumber": 62,
2023-06-01T17:20:17.2536587Z                         "lineChange": "removed"
2023-06-01T17:20:17.2536798Z                       },
2023-06-01T17:20:17.2536968Z                       {
2023-06-01T17:20:17.2537157Z                         "line": "   me = '';",
2023-06-01T17:20:17.2537382Z                         "lineNumber": 63,
2023-06-01T17:20:17.2537599Z                         "lineChange": "removed"
2023-06-01T17:20:17.2537809Z                       },
2023-06-01T17:20:17.2537989Z                       {
2023-06-01T17:20:17.2538197Z                         "line": "   password = ''",
2023-06-01T17:20:17.2538536Z                         "lineNumber": 64,
2023-06-01T17:20:17.2538762Z                         "lineChange": "removed"
2023-06-01T17:20:17.2538977Z                       },
2023-06-01T17:20:17.2539153Z                       {
2023-06-01T17:20:17.2539403Z                         "line": "   process.env.sendgrid_api_key = config.sendgrid_api_key;",
2023-06-01T17:20:17.2539684Z                         "lineNumber": 63,
2023-06-01T17:20:17.2539894Z                         "lineChange": "added"
2023-06-01T17:20:17.2540099Z                       },
2023-06-01T17:20:17.2540271Z                       {
2023-06-01T17:20:17.2540471Z                         "line": "   me = config.me;",
2023-06-01T17:20:17.2540699Z                         "lineNumber": 64,
2023-06-01T17:20:17.2540921Z                         "lineChange": "added"
2023-06-01T17:20:17.2541135Z                       },
2023-06-01T17:20:17.2541314Z                       {
2023-06-01T17:20:17.2541536Z                         "line": "   password = config.password",
2023-06-01T17:20:17.2541801Z                         "lineNumber": 65,
2023-06-01T17:20:17.2542005Z                         "lineChange": "added"
2023-06-01T17:20:17.2542225Z                       },
2023-06-01T17:20:17.2542402Z                       {
2023-06-01T17:20:17.2542613Z                         "line": "    //process.exit(1);",
2023-06-01T17:20:17.2542855Z                         "lineNumber": 66,
2023-06-01T17:20:17.2543076Z                         "lineChange": "none"
2023-06-01T17:20:17.2543299Z                       },
2023-06-01T17:20:17.2543477Z                       {
2023-06-01T17:20:17.2543663Z                         "line": "}",
2023-06-01T17:20:17.2543889Z                         "lineNumber": 67,
2023-06-01T17:20:17.2544102Z                         "lineChange": "none"
2023-06-01T17:20:17.2544320Z                       },
2023-06-01T17:20:17.2544505Z                       {
2023-06-01T17:20:17.2544736Z                         "line": "const sgMail = require('@sendgrid/mail');",
2023-06-01T17:20:17.2545117Z                         "lineNumber": 402,
2023-06-01T17:20:17.2545330Z                         "lineChange": "none"
2023-06-01T17:20:17.2545546Z                       },
2023-06-01T17:20:17.2545724Z                       {
2023-06-01T17:20:17.2545968Z                         "line": "sgMail.setApiKey(sendgrid_api_key);",
2023-06-01T17:20:17.2546211Z                         "lineNumber": 403,
2023-06-01T17:20:17.2546422Z                         "lineChange": "none"
2023-06-01T17:20:17.2546646Z                       },
2023-06-01T17:20:17.2546820Z                       {
2023-06-01T17:20:17.2547027Z                         "line": "const msg = {",
2023-06-01T17:20:17.2547249Z                         "lineNumber": 404,
2023-06-01T17:20:17.2547474Z                         "lineChange": "none"
2023-06-01T17:20:17.2547697Z                       },
2023-06-01T17:20:17.2547874Z                       {
2023-06-01T17:20:17.2548133Z                         "line": "  to: emailDetails.emailSection.from,",
2023-06-01T17:20:17.2548403Z                         "lineNumber": 405,
2023-06-01T17:20:17.2548608Z                         "lineChange": "none"
2023-06-01T17:20:17.2548825Z                       }
2023-06-01T17:20:17.2549004Z                     ]
2023-06-01T17:20:17.2549201Z                   },
2023-06-01T17:20:17.2549374Z                   {
2023-06-01T17:20:17.2549758Z                     "commitURL": "https://github.com/readium/readium-desktop/commit/2bedb5b474ba0a485a9f981aea8ffa43abad164a?diff=split#diff-78b4461ec5c61ac524f5719113995d00L183",
2023-06-01T17:20:17.2550163Z                     "lines": [
2023-06-01T17:20:17.2550373Z                       {
2023-06-01T17:20:17.2550642Z                         "line": "private downloadCatalog (user?: User) {",
2023-06-01T17:20:17.2550915Z                         "lineNumber": 186,
2023-06-01T17:20:17.2551143Z                         "lineChange": "none"
2023-06-01T17:20:17.2551458Z                       },
2023-06-01T17:20:17.2551649Z                       {
2023-06-01T17:20:17.2551876Z                         "line": "    let username = \"\";",
2023-06-01T17:20:17.2552084Z                         "lineNumber": 182,
2023-06-01T17:20:17.2552278Z                         "lineChange": "removed"
2023-06-01T17:20:17.2552486Z                       },
2023-06-01T17:20:17.2552593Z                       {
2023-06-01T17:20:17.2552730Z                         "line": "    let password = \"\";",
2023-06-01T17:20:17.2552864Z                         "lineNumber": 183,
2023-06-01T17:20:17.2553002Z                         "lineChange": "removed"
2023-06-01T17:20:17.2553121Z                       },
2023-06-01T17:20:17.2553224Z                       {
2023-06-01T17:20:17.2553347Z                         "line": "}",
2023-06-01T17:20:17.2553469Z                         "lineNumber": 188,
2023-06-01T17:20:17.2553611Z                         "lineChange": "removed"
2023-06-01T17:20:17.2553735Z                       },
2023-06-01T17:20:17.2553840Z                       {
2023-06-01T17:20:17.2554014Z                         "line": "request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
2023-06-01T17:20:17.2554185Z                         "lineNumber": 190,
2023-06-01T17:20:17.2554328Z                         "lineChange": "removed"
2023-06-01T17:20:17.2554447Z                       },
2023-06-01T17:20:17.2554550Z                       {
2023-06-01T17:20:17.2554730Z                         "line": "let req = request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
2023-06-01T17:20:17.2554908Z                         "lineNumber": 187,
2023-06-01T17:20:17.2555045Z                         "lineChange": "added"
2023-06-01T17:20:17.2555161Z                       },
2023-06-01T17:20:17.2555264Z                       {
2023-06-01T17:20:17.2555417Z                         "line": "    if (response && response.statusCode === 401) {",
2023-06-01T17:20:17.2555572Z                         "lineNumber": 191,
2023-06-01T17:20:17.2555779Z                         "lineChange": "none"
2023-06-01T17:20:17.2555895Z                       },
2023-06-01T17:20:17.2555999Z                       {
2023-06-01T17:20:17.2556140Z                         "line": "        this.props.openDialog(",
2023-06-01T17:20:17.2556279Z                         "lineNumber": 192,
2023-06-01T17:20:17.2556419Z                         "lineChange": "none"
2023-06-01T17:20:17.2556535Z                       },
2023-06-01T17:20:17.2556638Z                       {
2023-06-01T17:20:17.2556762Z                         "line": "});",
2023-06-01T17:20:17.2556885Z                         "lineNumber": 229,
2023-06-01T17:20:17.2557026Z                         "lineChange": "added"
2023-06-01T17:20:17.2557141Z                       },
2023-06-01T17:20:17.2557244Z                       {
2023-06-01T17:20:17.2557377Z                         "line": "if (user) {",
2023-06-01T17:20:17.2557505Z                         "lineNumber": 230,
2023-06-01T17:20:17.2557651Z                         "lineChange": "added"
2023-06-01T17:20:17.2557767Z                       },
2023-06-01T17:20:17.2557870Z                       {
2023-06-01T17:20:17.2558020Z                         "line": "    req.auth(user.username, user.password);",
2023-06-01T17:20:17.2558170Z                         "lineNumber": 231,
2023-06-01T17:20:17.2558310Z                         "lineChange": "added"
2023-06-01T17:20:17.2558425Z                       },
2023-06-01T17:20:17.2558540Z                       {
2023-06-01T17:20:17.2558649Z                         "line": "}",
2023-06-01T17:20:17.2558770Z                         "lineNumber": 232,
2023-06-01T17:20:17.2558914Z                         "lineChange": "added"
2023-06-01T17:20:17.2559029Z                       },
2023-06-01T17:20:17.2559146Z                       {
2023-06-01T17:20:17.2559255Z                         "line": "}",
2023-06-01T17:20:17.2559417Z                         "lineNumber": 233,
2023-06-01T17:20:17.2559559Z                         "lineChange": "none"
2023-06-01T17:20:17.2559674Z                       }
2023-06-01T17:20:17.2559787Z                     ]
2023-06-01T17:20:17.2559893Z                   },
2023-06-01T17:20:17.2559996Z                   {
2023-06-01T17:20:17.2560227Z                     "commitURL": "https://github.com/dfoderick/fullcyclereact/commit/a6abd97bd776ce56da8ac321ad0e1b500f67721d?diff=split#diff-ca64812ac15b141271f726a5a95a3402L22",
2023-06-01T17:20:17.2560443Z                     "lines": [
2023-06-01T17:20:17.2560564Z                       {
2023-06-01T17:20:17.2560690Z                         "line": "const redis_port = 6379",
2023-06-01T17:20:17.2560826Z                         "lineNumber": 19,
2023-06-01T17:20:17.2560972Z                         "lineChange": "removed"
2023-06-01T17:20:17.2561090Z                       },
2023-06-01T17:20:17.2561203Z                       {
2023-06-01T17:20:17.2561335Z                         "line": "const redis_host = serverhost",
2023-06-01T17:20:17.2561479Z                         "lineNumber": 20,
2023-06-01T17:20:17.2561619Z                         "lineChange": "removed"
2023-06-01T17:20:17.2561739Z                       },
2023-06-01T17:20:17.2561856Z                       {
2023-06-01T17:20:17.2561986Z                         "line": "const redis_password = ''",
2023-06-01T17:20:17.2562125Z                         "lineNumber": 21,
2023-06-01T17:20:17.2562267Z                         "lineChange": "removed"
2023-06-01T17:20:17.2562388Z                       },
2023-06-01T17:20:17.2562504Z                       {
2023-06-01T17:20:17.2562649Z                         "line": "//Message envelope for putting messages on the bus",
2023-06-01T17:20:17.2562805Z                         "lineNumber": 23,
2023-06-01T17:20:17.2562944Z                         "lineChange": "removed"
2023-06-01T17:20:17.2563062Z                       },
2023-06-01T17:20:17.2563179Z                       {
2023-06-01T17:20:17.2563343Z                         "line": "function redisclient(){",
2023-06-01T17:20:17.2563485Z                         "lineNumber": 98,
2023-06-01T17:20:17.2563627Z                         "lineChange": "none"
2023-06-01T17:20:17.2563742Z                       },
2023-06-01T17:20:17.2563855Z                       {
2023-06-01T17:20:17.2564023Z                         "line": "  var client = redis.createClient(redis_port, redis_host, {no_ready_check: true});",
2023-06-01T17:20:17.2564208Z                         "lineNumber": 99,
2023-06-01T17:20:17.2564339Z                         "lineChange": "removed"
2023-06-01T17:20:17.2564457Z                       },
2023-06-01T17:20:17.2564574Z                       {
2023-06-01T17:20:17.2564715Z                         "line": "  client.auth(redis_password, function (err) {",
2023-06-01T17:20:17.2564877Z                         "lineNumber": 100,
2023-06-01T17:20:17.2565009Z                         "lineChange": "removed"
2023-06-01T17:20:17.2565134Z                       },
2023-06-01T17:20:17.2565249Z                       {
2023-06-01T17:20:17.2565430Z                         "line": "  var client = redis.createClient(services.redis.port, services.redis.host, {no_ready_check: true});",
2023-06-01T17:20:17.2565632Z                         "lineNumber": 54,
2023-06-01T17:20:17.2565759Z                         "lineChange": "added"
2023-06-01T17:20:17.2565880Z                       },
2023-06-01T17:20:17.2565995Z                       {
2023-06-01T17:20:17.2566144Z                         "line": "  client.auth(services.redis.password, function (err) {",
2023-06-01T17:20:17.2566313Z                         "lineNumber": 55,
2023-06-01T17:20:17.2566443Z                         "lineChange": "added"
2023-06-01T17:20:17.2566574Z                       },
2023-06-01T17:20:17.2566679Z                       {
2023-06-01T17:20:17.2566804Z                         "line": "     if (err) throw err;",
2023-06-01T17:20:17.2567943Z                         "lineNumber": 101,
2023-06-01T17:20:17.2568118Z                         "lineChange": "none"
2023-06-01T17:20:17.2568257Z                       },
2023-06-01T17:20:17.2568363Z                       {
2023-06-01T17:20:17.2568474Z                         "line": "  });",
2023-06-01T17:20:17.2568614Z                         "lineNumber": 102,
2023-06-01T17:20:17.2568741Z                         "lineChange": "none"
2023-06-01T17:20:17.2568872Z                       }
2023-06-01T17:20:17.2568977Z                     ]
2023-06-01T17:20:17.2569081Z                   }
2023-06-01T17:20:17.2569198Z                 ],
2023-06-01T17:20:17.2569330Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2569469Z                 "precision": "very-high",
2023-06-01T17:20:17.2569618Z                 "repoDatasetSize": 210,
2023-06-01T17:20:17.2569741Z                 "cwe": [
2023-06-01T17:20:17.2569867Z                   "CWE-798"
2023-06-01T17:20:17.2569982Z                 ]
2023-06-01T17:20:17.2570087Z               }
2023-06-01T17:20:17.2570205Z             },
2023-06-01T17:20:17.2570307Z             {
2023-06-01T17:20:17.2570446Z               "id": "javascript/DisablePoweredBy",
2023-06-01T17:20:17.2570591Z               "name": "DisablePoweredBy",
2023-06-01T17:20:17.2570733Z               "shortDescription": {
2023-06-01T17:20:17.2570883Z                 "text": "Information Exposure"
2023-06-01T17:20:17.2571004Z               },
2023-06-01T17:20:17.2571136Z               "defaultConfiguration": {
2023-06-01T17:20:17.2571266Z                 "level": "warning"
2023-06-01T17:20:17.2571382Z               },
2023-06-01T17:20:17.2571504Z               "help": {
2023-06-01T17:20:17.2573213Z                 "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n### Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
2023-06-01T17:20:17.2574690Z                 "text": ""
2023-06-01T17:20:17.2574807Z               },
2023-06-01T17:20:17.2574940Z               "properties": {
2023-06-01T17:20:17.2575060Z                 "tags": [
2023-06-01T17:20:17.2575180Z                   "javascript",
2023-06-01T17:20:17.2575321Z                   "DisablePoweredBy",
2023-06-01T17:20:17.2575444Z                   "Security"
2023-06-01T17:20:17.2575567Z                 ],
2023-06-01T17:20:17.2575681Z                 "categories": [
2023-06-01T17:20:17.2575798Z                   "Security"
2023-06-01T17:20:17.2575972Z                 ],
2023-06-01T17:20:17.2576095Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2576223Z                   {
2023-06-01T17:20:17.2576479Z                     "commitURL": "https://github.com/opencollective/opencollective-frontend/commit/17c5c31da6975fd0c3e032d19f6d733af4c66036?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79R8",
2023-06-01T17:20:17.2576742Z                     "lines": [
2023-06-01T17:20:17.2577554Z                       {
2023-06-01T17:20:17.2577695Z                         "line": "const helmet = require('helmet');",
2023-06-01T17:20:17.2577858Z                         "lineNumber": 7,
2023-06-01T17:20:17.2577986Z                         "lineChange": "added"
2023-06-01T17:20:17.2578117Z                       },
2023-06-01T17:20:17.2578220Z                       {
2023-06-01T17:20:17.2578367Z                         "line": "const cookieParser = require('cookie-parser');",
2023-06-01T17:20:17.2578536Z                         "lineNumber": 8,
2023-06-01T17:20:17.2578668Z                         "lineChange": "none"
2023-06-01T17:20:17.2578801Z                       },
2023-06-01T17:20:17.2578906Z                       {
2023-06-01T17:20:17.2579056Z                         "line": "const cloudflareIps = require('cloudflare-ip/ips.json');",
2023-06-01T17:20:17.2579226Z                         "lineNumber": 9,
2023-06-01T17:20:17.2579353Z                         "lineChange": "none"
2023-06-01T17:20:17.2579481Z                       },
2023-06-01T17:20:17.2579595Z                       {
2023-06-01T17:20:17.2579793Z                         "line": "const intl = require('./intl');",
2023-06-01T17:20:17.2579954Z                         "lineNumber": 11,
2023-06-01T17:20:17.2580084Z                         "lineChange": "none"
2023-06-01T17:20:17.2580212Z                       },
2023-06-01T17:20:17.2580316Z                       {
2023-06-01T17:20:17.2580449Z                         "line": "const logger = require('./logger');",
2023-06-01T17:20:17.2580707Z                         "lineNumber": 12,
2023-06-01T17:20:17.2580834Z                         "lineChange": "none"
2023-06-01T17:20:17.2580962Z                       },
2023-06-01T17:20:17.2581068Z                       {
2023-06-01T17:20:17.2581224Z                         "line": "const loggerMiddleware = require('./logger-middleware');",
2023-06-01T17:20:17.2581393Z                         "lineNumber": 13,
2023-06-01T17:20:17.2581522Z                         "lineChange": "none"
2023-06-01T17:20:17.2581656Z                       },
2023-06-01T17:20:17.2581760Z                       {
2023-06-01T17:20:17.2581893Z                         "line": "const routes = require('./routes');",
2023-06-01T17:20:17.2582052Z                         "lineNumber": 14,
2023-06-01T17:20:17.2582179Z                         "lineChange": "none"
2023-06-01T17:20:17.2582305Z                       },
2023-06-01T17:20:17.2582408Z                       {
2023-06-01T17:20:17.2582539Z                         "line": "const server = express();",
2023-06-01T17:20:17.2582701Z                         "lineNumber": 16,
2023-06-01T17:20:17.2582827Z                         "lineChange": "none"
2023-06-01T17:20:17.2582959Z                       },
2023-06-01T17:20:17.2583065Z                       {
2023-06-01T17:20:17.2583254Z                         "line": "server.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'].concat(cloudflareIps));",
2023-06-01T17:20:17.2583436Z                         "lineNumber": 18,
2023-06-01T17:20:17.2583563Z                         "lineChange": "none"
2023-06-01T17:20:17.2583689Z                       },
2023-06-01T17:20:17.2583794Z                       {
2023-06-01T17:20:17.2583937Z                         "line": "const env = process.env.NODE_ENV;",
2023-06-01T17:20:17.2584079Z                         "lineNumber": 20,
2023-06-01T17:20:17.2584205Z                         "lineChange": "none"
2023-06-01T17:20:17.2584378Z                       },
2023-06-01T17:20:17.2584486Z                       {
2023-06-01T17:20:17.2584631Z                         "line": "const dev = env === 'development';",
2023-06-01T17:20:17.2584776Z                         "lineNumber": 21,
2023-06-01T17:20:17.2584902Z                         "lineChange": "none"
2023-06-01T17:20:17.2585030Z                       },
2023-06-01T17:20:17.2585133Z                       {
2023-06-01T17:20:17.2585293Z                         "line": "const app = next({ dev, dir: path.dirname(__dirname) });",
2023-06-01T17:20:17.2585452Z                         "lineNumber": 23,
2023-06-01T17:20:17.2585580Z                         "lineChange": "none"
2023-06-01T17:20:17.2585715Z                       },
2023-06-01T17:20:17.2585818Z                       {
2023-06-01T17:20:17.2585962Z                         "line": "const port = process.env.PORT;",
2023-06-01T17:20:17.2586105Z                         "lineNumber": 25,
2023-06-01T17:20:17.2586234Z                         "lineChange": "none"
2023-06-01T17:20:17.2586368Z                       },
2023-06-01T17:20:17.2586483Z                       {
2023-06-01T17:20:17.2586633Z                         "line": "app.prepare().then(() => {",
2023-06-01T17:20:17.2586772Z                         "lineNumber": 27,
2023-06-01T17:20:17.2586901Z                         "lineChange": "none"
2023-06-01T17:20:17.2587029Z                       },
2023-06-01T17:20:17.2587136Z                       {
2023-06-01T17:20:17.2587286Z                         "line": "  server.use(loggerMiddleware.logger);",
2023-06-01T17:20:17.2587436Z                         "lineNumber": 28,
2023-06-01T17:20:17.2587577Z                         "lineChange": "none"
2023-06-01T17:20:17.2587695Z                       },
2023-06-01T17:20:17.2587801Z                       {
2023-06-01T17:20:17.2587939Z                         "line": "  server.use(helmet());",
2023-06-01T17:20:17.2588075Z                         "lineNumber": 30,
2023-06-01T17:20:17.2588217Z                         "lineChange": "added"
2023-06-01T17:20:17.2588382Z                       }
2023-06-01T17:20:17.2588485Z                     ]
2023-06-01T17:20:17.2588607Z                   },
2023-06-01T17:20:17.2588710Z                   {
2023-06-01T17:20:17.2588968Z                     "commitURL": "https://github.com/jkettmann/universal-react-relay-starter-kit/commit/dfab2940d6a0678ede545c341af3cb9c51d6b687?diff=split#diff-da96dcbe471b47bbc5ec4aee2520997e363c827e6249d1834d4fff6f8d0df6c8R3",
2023-06-01T17:20:17.2589236Z                     "lines": [
2023-06-01T17:20:17.2589344Z                       {
2023-06-01T17:20:17.2589486Z                         "line": "import helmet from 'helmet'",
2023-06-01T17:20:17.2589633Z                         "lineNumber": 2,
2023-06-01T17:20:17.2589773Z                         "lineChange": "added"
2023-06-01T17:20:17.2589891Z                       },
2023-06-01T17:20:17.2589996Z                       {
2023-06-01T17:20:17.2590150Z                         "line": "import cookieParser from 'cookie-parser'",
2023-06-01T17:20:17.2590300Z                         "lineNumber": 3,
2023-06-01T17:20:17.2590442Z                         "lineChange": "none"
2023-06-01T17:20:17.2590557Z                       },
2023-06-01T17:20:17.2590661Z                       {
2023-06-01T17:20:17.2590797Z                         "line": "import Aws from 'aws-sdk'",
2023-06-01T17:20:17.2590933Z                         "lineNumber": 4,
2023-06-01T17:20:17.2591073Z                         "lineChange": "none"
2023-06-01T17:20:17.2591189Z                       },
2023-06-01T17:20:17.2591295Z                       {
2023-06-01T17:20:17.2591463Z                         "line": "import S3Router from 'react-s3-uploader/s3router'",
2023-06-01T17:20:17.2591622Z                         "lineNumber": 5,
2023-06-01T17:20:17.2591765Z                         "lineChange": "none"
2023-06-01T17:20:17.2591880Z                       },
2023-06-01T17:20:17.2592041Z                       {
2023-06-01T17:20:17.2592174Z                         "line": "import debug from 'debug'",
2023-06-01T17:20:17.2592311Z                         "lineNumber": 6,
2023-06-01T17:20:17.2592447Z                         "lineChange": "none"
2023-06-01T17:20:17.2592561Z                       },
2023-06-01T17:20:17.2592680Z                       {
2023-06-01T17:20:17.2592808Z                         "line": "import dotenv from 'dotenv'",
2023-06-01T17:20:17.2592944Z                         "lineNumber": 7,
2023-06-01T17:20:17.2593082Z                         "lineChange": "none"
2023-06-01T17:20:17.2593198Z                       },
2023-06-01T17:20:17.2593311Z                       {
2023-06-01T17:20:17.2593435Z                         "line": "dotenv.config()",
2023-06-01T17:20:17.2593565Z                         "lineNumber": 9,
2023-06-01T17:20:17.2593707Z                         "lineChange": "none"
2023-06-01T17:20:17.2593822Z                       },
2023-06-01T17:20:17.2593939Z                       {
2023-06-01T17:20:17.2594070Z                         "line": "const log = debug('server')",
2023-06-01T17:20:17.2594209Z                         "lineNumber": 10,
2023-06-01T17:20:17.2594351Z                         "lineChange": "none"
2023-06-01T17:20:17.2594466Z                       },
2023-06-01T17:20:17.2594579Z                       {
2023-06-01T17:20:17.2594713Z                         "line": "const PORT = process.env.PORT_APP",
2023-06-01T17:20:17.2594856Z                         "lineNumber": 12,
2023-06-01T17:20:17.2594997Z                         "lineChange": "none"
2023-06-01T17:20:17.2595113Z                       },
2023-06-01T17:20:17.2595233Z                       {
2023-06-01T17:20:17.2595378Z                         "line": "const DEV = process.env.NODE_ENV === 'development'",
2023-06-01T17:20:17.2595533Z                         "lineNumber": 13,
2023-06-01T17:20:17.2595679Z                         "lineChange": "none"
2023-06-01T17:20:17.2595796Z                       },
2023-06-01T17:20:17.2595954Z                       {
2023-06-01T17:20:17.2596078Z                         "line": "let isBuilt = false",
2023-06-01T17:20:17.2596214Z                         "lineNumber": 15,
2023-06-01T17:20:17.2596352Z                         "lineChange": "none"
2023-06-01T17:20:17.2596468Z                       },
2023-06-01T17:20:17.2596584Z                       {
2023-06-01T17:20:17.2596708Z                         "line": "Aws.config.update({",
2023-06-01T17:20:17.2596847Z                         "lineNumber": 17,
2023-06-01T17:20:17.2596983Z                         "lineChange": "none"
2023-06-01T17:20:17.2597098Z                       },
2023-06-01T17:20:17.2597221Z                       {
2023-06-01T17:20:17.2597365Z                         "line": "  accessKeyId: process.env.AWS_ACCESS_KEY_ID,",
2023-06-01T17:20:17.2597519Z                         "lineNumber": 18,
2023-06-01T17:20:17.2597655Z                         "lineChange": "none"
2023-06-01T17:20:17.2597773Z                       },
2023-06-01T17:20:17.2597891Z                       {
2023-06-01T17:20:17.2598038Z                         "line": "  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,",
2023-06-01T17:20:17.2598208Z                         "lineNumber": 19,
2023-06-01T17:20:17.2598335Z                         "lineChange": "none"
2023-06-01T17:20:17.2598449Z                       },
2023-06-01T17:20:17.2598564Z                       {
2023-06-01T17:20:17.2598674Z                         "line": "})",
2023-06-01T17:20:17.2598805Z                         "lineNumber": 20,
2023-06-01T17:20:17.2598931Z                         "lineChange": "none"
2023-06-01T17:20:17.2599046Z                       },
2023-06-01T17:20:17.2599158Z                       {
2023-06-01T17:20:17.2599282Z                         "line": "const app = express()",
2023-06-01T17:20:17.2599430Z                         "lineNumber": 22,
2023-06-01T17:20:17.2599557Z                         "lineChange": "none"
2023-06-01T17:20:17.2599718Z                       },
2023-06-01T17:20:17.2599835Z                       {
2023-06-01T17:20:17.2599956Z                         "line": "app.use(helmet())",
2023-06-01T17:20:17.2600101Z                         "lineNumber": 24,
2023-06-01T17:20:17.2600231Z                         "lineChange": "added"
2023-06-01T17:20:17.2600346Z                       }
2023-06-01T17:20:17.2600460Z                     ]
2023-06-01T17:20:17.2600565Z                   },
2023-06-01T17:20:17.2600677Z                   {
2023-06-01T17:20:17.2600912Z                     "commitURL": "https://github.com/mozilla/send/commit/4e4dc5e168074f150399dbceff7ea2c617800ca9?diff=split#diff-2142bb87b5c843eadf1da04062c8832170784a072d7e940262166bc0e66d1f07R6",
2023-06-01T17:20:17.2601140Z                     "lines": [
2023-06-01T17:20:17.2601259Z                       {
2023-06-01T17:20:17.2601392Z                         "line": "const helmet = require('helmet');",
2023-06-01T17:20:17.2601546Z                         "lineNumber": 5,
2023-06-01T17:20:17.2601676Z                         "lineChange": "added"
2023-06-01T17:20:17.2601791Z                       },
2023-06-01T17:20:17.2601903Z                       {
2023-06-01T17:20:17.2602034Z                         "line": "const bytes = require('bytes');",
2023-06-01T17:20:17.2602185Z                         "lineNumber": 6,
2023-06-01T17:20:17.2602311Z                         "lineChange": "none"
2023-06-01T17:20:17.2602425Z                       },
2023-06-01T17:20:17.2602541Z                       {
2023-06-01T17:20:17.2602675Z                         "line": "const conf = require('./config.js');",
2023-06-01T17:20:17.2602832Z                         "lineNumber": 7,
2023-06-01T17:20:17.2602957Z                         "lineChange": "none"
2023-06-01T17:20:17.2603071Z                       },
2023-06-01T17:20:17.2603185Z                       {
2023-06-01T17:20:17.2603323Z                         "line": "const storage = require('./storage.js');",
2023-06-01T17:20:17.2603532Z                         "lineNumber": 8,
2023-06-01T17:20:17.2603658Z                         "lineChange": "none"
2023-06-01T17:20:17.2603784Z                       },
2023-06-01T17:20:17.2603887Z                       {
2023-06-01T17:20:17.2604024Z                         "line": "const notLocalHost = conf.notLocalHost;",
2023-06-01T17:20:17.2604181Z                         "lineNumber": 10,
2023-06-01T17:20:17.2604306Z                         "lineChange": "none"
2023-06-01T17:20:17.2604431Z                       },
2023-06-01T17:20:17.2604536Z                       {
2023-06-01T17:20:17.2604670Z                         "line": "const mozlog = require('./log.js');",
2023-06-01T17:20:17.2604828Z                         "lineNumber": 12,
2023-06-01T17:20:17.2604954Z                         "lineChange": "none"
2023-06-01T17:20:17.2605079Z                       },
2023-06-01T17:20:17.2605182Z                       {
2023-06-01T17:20:17.2605319Z                         "line": "const log = mozlog('portal.server');",
2023-06-01T17:20:17.2605479Z                         "lineNumber": 14,
2023-06-01T17:20:17.2605605Z                         "lineChange": "none"
2023-06-01T17:20:17.2605733Z                       },
2023-06-01T17:20:17.2605838Z                       {
2023-06-01T17:20:17.2605962Z                         "line": "const app = express();",
2023-06-01T17:20:17.2606110Z                         "lineNumber": 16,
2023-06-01T17:20:17.2606240Z                         "lineChange": "none"
2023-06-01T17:20:17.2606369Z                       },
2023-06-01T17:20:17.2606472Z                       {
2023-06-01T17:20:17.2606623Z                         "line": "app.engine('handlebars', exphbs({ defaultLayout: 'main' }));",
2023-06-01T17:20:17.2606800Z                         "lineNumber": 18,
2023-06-01T17:20:17.2606927Z                         "lineChange": "none"
2023-06-01T17:20:17.2607053Z                       },
2023-06-01T17:20:17.2607200Z                       {
2023-06-01T17:20:17.2607340Z                         "line": "app.set('view engine', 'handlebars');",
2023-06-01T17:20:17.2607501Z                         "lineNumber": 19,
2023-06-01T17:20:17.2607631Z                         "lineChange": "none"
2023-06-01T17:20:17.2607760Z                       },
2023-06-01T17:20:17.2607865Z                       {
2023-06-01T17:20:17.2607989Z                         "line": "app.use(helmet());",
2023-06-01T17:20:17.2608136Z                         "lineNumber": 21,
2023-06-01T17:20:17.2608263Z                         "lineChange": "added"
2023-06-01T17:20:17.2608392Z                       }
2023-06-01T17:20:17.2608497Z                     ]
2023-06-01T17:20:17.2608599Z                   }
2023-06-01T17:20:17.2608717Z                 ],
2023-06-01T17:20:17.2608847Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2609001Z                 "precision": "very-high",
2023-06-01T17:20:17.2609137Z                 "repoDatasetSize": 991,
2023-06-01T17:20:17.2609262Z                 "cwe": [
2023-06-01T17:20:17.2609386Z                   "CWE-200"
2023-06-01T17:20:17.2609495Z                 ]
2023-06-01T17:20:17.2609612Z               }
2023-06-01T17:20:17.2609717Z             },
2023-06-01T17:20:17.2609820Z             {
2023-06-01T17:20:17.2609960Z               "id": "javascript/HttpToHttps",
2023-06-01T17:20:17.2610096Z               "name": "HttpToHttps",
2023-06-01T17:20:17.2610244Z               "shortDescription": {
2023-06-01T17:20:17.2611044Z                 "text": "Cleartext Transmission of Sensitive Information"
2023-06-01T17:20:17.2611199Z               },
2023-06-01T17:20:17.2611351Z               "defaultConfiguration": {
2023-06-01T17:20:17.2611484Z                 "level": "warning"
2023-06-01T17:20:17.2611626Z               },
2023-06-01T17:20:17.2611738Z               "help": {
2023-06-01T17:20:17.2612676Z                 "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
2023-06-01T17:20:17.2613685Z                 "text": ""
2023-06-01T17:20:17.2613797Z               },
2023-06-01T17:20:17.2613911Z               "properties": {
2023-06-01T17:20:17.2614043Z                 "tags": [
2023-06-01T17:20:17.2614159Z                   "javascript",
2023-06-01T17:20:17.2614296Z                   "HttpToHttps",
2023-06-01T17:20:17.2614419Z                   "Security"
2023-06-01T17:20:17.2614527Z                 ],
2023-06-01T17:20:17.2614661Z                 "categories": [
2023-06-01T17:20:17.2614777Z                   "Security"
2023-06-01T17:20:17.2614909Z                 ],
2023-06-01T17:20:17.2615032Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2615149Z                   {
2023-06-01T17:20:17.2615388Z                     "commitURL": "https://github.com/Rocket1184/qq-bot-rebown/commit/5255a8398cf1d80f60e182c53e8532c7562e76c2?diff=split#diff-62a4be7247c4abe75f2cc11746422b86L12",
2023-06-01T17:20:17.2615655Z                     "lines": [
2023-06-01T17:20:17.2615775Z                       {
2023-06-01T17:20:17.2615894Z                         "line": "'use strict';",
2023-06-01T17:20:17.2616024Z                         "lineNumber": 9,
2023-06-01T17:20:17.2616174Z                         "lineChange": "none"
2023-06-01T17:20:17.2616293Z                       },
2023-06-01T17:20:17.2616410Z                       {
2023-06-01T17:20:17.2616543Z                         "line": "const http = require('http');",
2023-06-01T17:20:17.2616683Z                         "lineNumber": 11,
2023-06-01T17:20:17.2616827Z                         "lineChange": "removed"
2023-06-01T17:20:17.2616944Z                       },
2023-06-01T17:20:17.2617061Z                       {
2023-06-01T17:20:17.2617194Z                         "line": "const https = require('https');",
2023-06-01T17:20:17.2617341Z                         "lineNumber": 11,
2023-06-01T17:20:17.2617489Z                         "lineChange": "added"
2023-06-01T17:20:17.2617609Z                       },
2023-06-01T17:20:17.2617729Z                       {
2023-06-01T17:20:17.2617856Z                         "line": "function http2https(link) {",
2023-06-01T17:20:17.2618008Z                         "lineNumber": 13,
2023-06-01T17:20:17.2618136Z                         "lineChange": "added"
2023-06-01T17:20:17.2618251Z                       },
2023-06-01T17:20:17.2618367Z                       {
2023-06-01T17:20:17.2618476Z                         "line": " ",
2023-06-01T17:20:17.2618607Z                         "lineNumber": 20,
2023-06-01T17:20:17.2618734Z                         "lineChange": "none"
2023-06-01T17:20:17.2618849Z                       },
2023-06-01T17:20:17.2618966Z                       {
2023-06-01T17:20:17.2619144Z                         "line": "function shortenUrl(url) {",
2023-06-01T17:20:17.2619398Z                         "lineNumber": 21,
2023-06-01T17:20:17.2619760Z                         "lineChange": "none"
2023-06-01T17:20:17.2620057Z                       }
2023-06-01T17:20:17.2620240Z                     ]
2023-06-01T17:20:17.2620411Z                   },
2023-06-01T17:20:17.2620587Z                   {
2023-06-01T17:20:17.2620957Z                     "commitURL": "https://github.com/qmachine/qmachine/commit/1f9f08b5b1f9be78dd6625d93ec934befb255df7?diff=split#diff-54387be96a26d96583a0c7585e8607c5L56",
2023-06-01T17:20:17.2621353Z                     "lines": [
2023-06-01T17:20:17.2621569Z                       {
2023-06-01T17:20:17.2621779Z                         "line": "};",
2023-06-01T17:20:17.2622031Z                         "lineNumber": 57,
2023-06-01T17:20:17.2622269Z                         "lineChange": "none"
2023-06-01T17:20:17.2622494Z                       },
2023-06-01T17:20:17.2622695Z                       {
2023-06-01T17:20:17.2622892Z                         "line": "http = require('http');",
2023-06-01T17:20:17.2623145Z                         "lineNumber": 55,
2023-06-01T17:20:17.2623365Z                         "lineChange": "removed"
2023-06-01T17:20:17.2623572Z                       },
2023-06-01T17:20:17.2623764Z                       {
2023-06-01T17:20:17.2623987Z                         "line": "https = require('https');",
2023-06-01T17:20:17.2625129Z                         "lineNumber": 59,
2023-06-01T17:20:17.2625407Z                         "lineChange": "added"
2023-06-01T17:20:17.2625634Z                       },
2023-06-01T17:20:17.2625855Z                       {
2023-06-01T17:20:17.2626101Z                         "line": "http_GET = function (x) {",
2023-06-01T17:20:17.2626381Z                         "lineNumber": 57,
2023-06-01T17:20:17.2626623Z                         "lineChange": "removed"
2023-06-01T17:20:17.2626830Z                       },
2023-06-01T17:20:17.2627002Z                       {
2023-06-01T17:20:17.2627221Z                         "line": "https_GET = function (x) {",
2023-06-01T17:20:17.2627652Z                         "lineNumber": 61,
2023-06-01T17:20:17.2627853Z                         "lineChange": "added"
2023-06-01T17:20:17.2628094Z                       }
2023-06-01T17:20:17.2628228Z                     ]
2023-06-01T17:20:17.2628336Z                   },
2023-06-01T17:20:17.2628460Z                   {
2023-06-01T17:20:17.2628800Z                     "commitURL": "https://github.com/vmware-samples/vmware-blockchain-samples/commit/0e45b89996cc8ae87d4f6bd2240720fa70daccd1?diff=split#diff-21a000feb5ae912714215842b628c63cL3",
2023-06-01T17:20:17.2629043Z                     "lines": [
2023-06-01T17:20:17.2629154Z                       {
2023-06-01T17:20:17.2629281Z                         "line": "const fs = require(\"fs\");",
2023-06-01T17:20:17.2629436Z                         "lineNumber": 7,
2023-06-01T17:20:17.2629562Z                         "lineChange": "none"
2023-06-01T17:20:17.2629693Z                       },
2023-06-01T17:20:17.2629796Z                       {
2023-06-01T17:20:17.2629932Z                         "line": "const http = require(\"http\");",
2023-06-01T17:20:17.2630098Z                         "lineNumber": 2,
2023-06-01T17:20:17.2630227Z                         "lineChange": "removed"
2023-06-01T17:20:17.2630365Z                       },
2023-06-01T17:20:17.2630468Z                       {
2023-06-01T17:20:17.2630599Z                         "line": "const https = require(\"https\");",
2023-06-01T17:20:17.2630753Z                         "lineNumber": 8,
2023-06-01T17:20:17.2630881Z                         "lineChange": "added"
2023-06-01T17:20:17.2631012Z                       },
2023-06-01T17:20:17.2631965Z                       {
2023-06-01T17:20:17.2632120Z                         "line": "verifyMigrations();",
2023-06-01T17:20:17.2632280Z                         "lineNumber": 10,
2023-06-01T17:20:17.2632930Z                         "lineChange": "none"
2023-06-01T17:20:17.2633073Z                       }
2023-06-01T17:20:17.2633184Z                     ]
2023-06-01T17:20:17.2633435Z                   }
2023-06-01T17:20:17.2633556Z                 ],
2023-06-01T17:20:17.2633682Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2633837Z                 "precision": "very-high",
2023-06-01T17:20:17.2633974Z                 "repoDatasetSize": 631,
2023-06-01T17:20:17.2634095Z                 "cwe": [
2023-06-01T17:20:17.2634228Z                   "CWE-319"
2023-06-01T17:20:17.2634336Z                 ]
2023-06-01T17:20:17.2634453Z               }
2023-06-01T17:20:17.2634563Z             },
2023-06-01T17:20:17.2634666Z             {
2023-06-01T17:20:17.2634816Z               "id": "javascript/HardcodedNonCryptoSecret",
2023-06-01T17:20:17.2634971Z               "name": "HardcodedNonCryptoSecret",
2023-06-01T17:20:17.2635126Z               "shortDescription": {
2023-06-01T17:20:17.2635261Z                 "text": "Hardcoded Secret"
2023-06-01T17:20:17.2635379Z               },
2023-06-01T17:20:17.2635521Z               "defaultConfiguration": {
2023-06-01T17:20:17.2635650Z                 "level": "error"
2023-06-01T17:20:17.2635778Z               },
2023-06-01T17:20:17.2635892Z               "help": {
2023-06-01T17:20:17.2636897Z                 "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
2023-06-01T17:20:17.2638678Z                 "text": ""
2023-06-01T17:20:17.2638790Z               },
2023-06-01T17:20:17.2638903Z               "properties": {
2023-06-01T17:20:17.2639035Z                 "tags": [
2023-06-01T17:20:17.2639152Z                   "javascript",
2023-06-01T17:20:17.2639301Z                   "HardcodedNonCryptoSecret",
2023-06-01T17:20:17.2639429Z                   "Security"
2023-06-01T17:20:17.2639539Z                 ],
2023-06-01T17:20:17.2639665Z                 "categories": [
2023-06-01T17:20:17.2639787Z                   "Security"
2023-06-01T17:20:17.2639916Z                 ],
2023-06-01T17:20:17.2640036Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2640154Z                   {
2023-06-01T17:20:17.2640381Z                     "commitURL": "https://github.com/krakenjs/lusca/commit/a871c0a7f2b6641fb882d2b902b0910f6ac60b7b?diff=split#diff-398ed3b014436a5204583323ea29320bL7",
2023-06-01T17:20:17.2640593Z                     "lines": [
2023-06-01T17:20:17.2640721Z                       {
2023-06-01T17:20:17.2640831Z                         "line": " ",
2023-06-01T17:20:17.2640953Z                         "lineNumber": 3,
2023-06-01T17:20:17.2641096Z                         "lineChange": "none"
2023-06-01T17:20:17.2641212Z                       },
2023-06-01T17:20:17.2641331Z                       {
2023-06-01T17:20:17.2641463Z                         "line": "var crypto = require('crypto');",
2023-06-01T17:20:17.2641618Z                         "lineNumber": 4,
2023-06-01T17:20:17.2641801Z                         "lineChange": "none"
2023-06-01T17:20:17.2641918Z                       },
2023-06-01T17:20:17.2642036Z                       {
2023-06-01T17:20:17.2642164Z                         "line": "var SECRET = '_csrfSecret';",
2023-06-01T17:20:17.2642316Z                         "lineNumber": 6,
2023-06-01T17:20:17.2642447Z                         "lineChange": "removed"
2023-06-01T17:20:17.2642563Z                       },
2023-06-01T17:20:17.2642681Z                       {
2023-06-01T17:20:17.2642798Z                         "line": "var SECRET;",
2023-06-01T17:20:17.2642943Z                         "lineNumber": 5,
2023-06-01T17:20:17.2643069Z                         "lineChange": "added"
2023-06-01T17:20:17.2643184Z                       },
2023-06-01T17:20:17.2643306Z                       {
2023-06-01T17:20:17.2643425Z                         "line": "var LENGTH = 10;",
2023-06-01T17:20:17.2643569Z                         "lineNumber": 7,
2023-06-01T17:20:17.2643701Z                         "lineChange": "none"
2023-06-01T17:20:17.2643817Z                       }
2023-06-01T17:20:17.2643936Z                     ]
2023-06-01T17:20:17.2644041Z                   },
2023-06-01T17:20:17.2644160Z                   {
2023-06-01T17:20:17.2644377Z                     "commitURL": "https://github.com/koajs/generic-session/commit/9248ff8055dd226ccf45c67e329cae587741c077?diff=split#diff-26b5d3c164692791a09225732456b5ecL28",
2023-06-01T17:20:17.2644589Z                     "lines": [
2023-06-01T17:20:17.2644712Z                       {
2023-06-01T17:20:17.2644833Z                         "line": "app.use(session({",
2023-06-01T17:20:17.2644980Z                         "lineNumber": 26,
2023-06-01T17:20:17.2645109Z                         "lineChange": "none"
2023-06-01T17:20:17.2645223Z                       },
2023-06-01T17:20:17.2645342Z                       {
2023-06-01T17:20:17.2645475Z                         "line": "  secret: 'koa-session-secret',",
2023-06-01T17:20:17.2645683Z                         "lineNumber": 27,
2023-06-01T17:20:17.2645813Z                         "lineChange": "removed"
2023-06-01T17:20:17.2645930Z                       },
2023-06-01T17:20:17.2646048Z                       {
2023-06-01T17:20:17.2646200Z                         "line": "  key: 'koss:test_sid',",
2023-06-01T17:20:17.2646356Z                         "lineNumber": 27,
2023-06-01T17:20:17.2646484Z                         "lineChange": "added"
2023-06-01T17:20:17.2646599Z                       },
2023-06-01T17:20:17.2646720Z                       {
2023-06-01T17:20:17.2646835Z                         "line": "  cookie: {",
2023-06-01T17:20:17.2646974Z                         "lineNumber": 28,
2023-06-01T17:20:17.2647100Z                         "lineChange": "none"
2023-06-01T17:20:17.2647216Z                       },
2023-06-01T17:20:17.2647338Z                       {
2023-06-01T17:20:17.2647458Z                         "line": "    httpOnly: true,",
2023-06-01T17:20:17.2647609Z                         "lineNumber": 29,
2023-06-01T17:20:17.2647737Z                         "lineChange": "removed"
2023-06-01T17:20:17.2647854Z                       },
2023-06-01T17:20:17.2647976Z                       {
2023-06-01T17:20:17.2648095Z                         "line": "     maxAge: 86400,",
2023-06-01T17:20:17.2648242Z                         "lineNumber": 30,
2023-06-01T17:20:17.2648368Z                         "lineChange": "none"
2023-06-01T17:20:17.2648481Z                       }
2023-06-01T17:20:17.2648598Z                     ]
2023-06-01T17:20:17.2648701Z                   },
2023-06-01T17:20:17.2648821Z                   {
2023-06-01T17:20:17.2649032Z                     "commitURL": "https://github.com/haiwen/seahub/commit/2f0fb01f021374d0afe8bea71f85eda464c1a672?diff=split#diff-cd2b9459006cf24c29c3b74771e950d5L21",
2023-06-01T17:20:17.2649252Z                     "lines": [
2023-06-01T17:20:17.2649364Z                       {
2023-06-01T17:20:17.2649533Z                         "line": "  fileName: fileName,",
2023-06-01T17:20:17.2649683Z                         "lineNumber": 18,
2023-06-01T17:20:17.2649808Z                         "lineChange": "none"
2023-06-01T17:20:17.2649938Z                       },
2023-06-01T17:20:17.2650044Z                       {
2023-06-01T17:20:17.2650170Z                         "line": "  dtableUuid: dtableUuid,",
2023-06-01T17:20:17.2650326Z                         "lineNumber": 19,
2023-06-01T17:20:17.2650452Z                         "lineChange": "none"
2023-06-01T17:20:17.2650583Z                       },
2023-06-01T17:20:17.2650689Z                       {
2023-06-01T17:20:17.2650814Z                         "line": "  accessToken: '12345678'",
2023-06-01T17:20:17.2650969Z                         "lineNumber": 20,
2023-06-01T17:20:17.2651097Z                         "lineChange": "removed"
2023-06-01T17:20:17.2651230Z                       },
2023-06-01T17:20:17.2651338Z                       {
2023-06-01T17:20:17.2651460Z                         "line": "  accessToken: ''",
2023-06-01T17:20:17.2651606Z                         "lineNumber": 20,
2023-06-01T17:20:17.2651732Z                         "lineChange": "added"
2023-06-01T17:20:17.2651862Z                       },
2023-06-01T17:20:17.2651967Z                       {
2023-06-01T17:20:17.2652076Z                         "line": "};",
2023-06-01T17:20:17.2652212Z                         "lineNumber": 21,
2023-06-01T17:20:17.2652338Z                         "lineChange": "none"
2023-06-01T17:20:17.2652466Z                       }
2023-06-01T17:20:17.2652568Z                     ]
2023-06-01T17:20:17.2652670Z                   }
2023-06-01T17:20:17.2652789Z                 ],
2023-06-01T17:20:17.2652914Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2653066Z                 "precision": "very-high",
2023-06-01T17:20:17.2653202Z                 "repoDatasetSize": 657,
2023-06-01T17:20:17.2653361Z                 "cwe": [
2023-06-01T17:20:17.2653491Z                   "CWE-547"
2023-06-01T17:20:17.2653599Z                 ]
2023-06-01T17:20:17.2653717Z               }
2023-06-01T17:20:17.2653821Z             },
2023-06-01T17:20:17.2653923Z             {
2023-06-01T17:20:17.2654623Z               "id": "javascript/NoSqli",
2023-06-01T17:20:17.2654764Z               "name": "NoSqli",
2023-06-01T17:20:17.2654912Z               "shortDescription": {
2023-06-01T17:20:17.2655049Z                 "text": "NoSQL Injection"
2023-06-01T17:20:17.2655167Z               },
2023-06-01T17:20:17.2655305Z               "defaultConfiguration": {
2023-06-01T17:20:17.2655433Z                 "level": "error"
2023-06-01T17:20:17.2655559Z               },
2023-06-01T17:20:17.2655667Z               "help": {
2023-06-01T17:20:17.2656124Z                 "markdown": "## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.",
2023-06-01T17:20:17.2656581Z                 "text": ""
2023-06-01T17:20:17.2656688Z               },
2023-06-01T17:20:17.2656815Z               "properties": {
2023-06-01T17:20:17.2656930Z                 "tags": [
2023-06-01T17:20:17.2657065Z                   "javascript",
2023-06-01T17:20:17.2657182Z                   "NoSqli",
2023-06-01T17:20:17.2657298Z                   "Security",
2023-06-01T17:20:17.2657436Z                   "SourceHttpBody",
2023-06-01T17:20:17.2657555Z                   "Taint"
2023-06-01T17:20:17.2657677Z                 ],
2023-06-01T17:20:17.2657790Z                 "categories": [
2023-06-01T17:20:17.2657917Z                   "Security"
2023-06-01T17:20:17.2658128Z                 ],
2023-06-01T17:20:17.2658247Z                 "exampleCommitFixes": [
2023-06-01T17:20:17.2658379Z                   {
2023-06-01T17:20:17.2658595Z                     "commitURL": "https://github.com/JasonEtco/flintcms/commit/4ae34238ce39fde00dfa15082397541758c07af1?diff=split#diff-9de779015fec61fc28e3fc1b3a62d1fdL8",
2023-06-01T17:20:17.2658807Z                     "lines": [
2023-06-01T17:20:17.2658931Z                       {
2023-06-01T17:20:17.2659080Z                         "line": "const sendEmail = require('../../utils/emails/sendEmail')",
2023-06-01T17:20:17.2659257Z                         "lineNumber": 5,
2023-06-01T17:20:17.2659383Z                         "lineChange": "none"
2023-06-01T17:20:17.2659513Z                       },
2023-06-01T17:20:17.2659619Z                       {
2023-06-01T17:20:17.2659753Z                         "line": "const User = mongoose.model('User')",
2023-06-01T17:20:17.2659920Z                         "lineNumber": 7,
2023-06-01T17:20:17.2660048Z                         "lineChange": "none"
2023-06-01T17:20:17.2660182Z                       },
2023-06-01T17:20:17.2660288Z                       {
2023-06-01T17:20:17.2660431Z                         "line": "const UserGroup = mongoose.model('UserGroup')",
2023-06-01T17:20:17.2660606Z                         "lineNumber": 8,
2023-06-01T17:20:17.2660731Z                         "lineChange": "none"
2023-06-01T17:20:17.2660862Z                       },
2023-06-01T17:20:17.2660968Z                       {
2023-06-01T17:20:17.2661098Z                         "line": "const router = express.Router()",
2023-06-01T17:20:17.2661256Z                         "lineNumber": 9,
2023-06-01T17:20:17.2661381Z                         "lineChange": "none"
2023-06-01T17:20:17.2661511Z                       },
2023-06-01T17:20:17.2661995Z                       {
2023-06-01T17:20:17.2662113Z                         "line": "})",
2023-06-01T17:20:17.2662318Z                         "lineNumber": 101,
2023-06-01T17:20:17.2662449Z                         "lineChange": "none"
2023-06-01T17:20:17.2662578Z                       },
2023-06-01T17:20:17.2662685Z                       {
2023-06-01T17:20:17.2662823Z                         "line": "router.get('/verify', async (req, res) => {",
2023-06-01T17:20:17.2662987Z                         "lineNumber": 103,
2023-06-01T17:20:17.2663115Z                         "lineChange": "none"
2023-06-01T17:20:17.2663242Z                       },
2023-06-01T17:20:17.2663348Z                       {
2023-06-01T17:20:17.2663474Z                         "line": "  const token = req.query.t",
2023-06-01T17:20:17.2663629Z                         "lineNumber": 104,
2023-06-01T17:20:17.2663759Z                         "lineChange": "removed"
2023-06-01T17:20:17.2663890Z                       },
2023-06-01T17:20:17.2663993Z                       {
2023-06-01T17:20:17.2664128Z                         "line": "  const token = req.query.t.toString()",
2023-06-01T17:20:17.2664294Z                         "lineNumber": 104,
2023-06-01T17:20:17.2664422Z                         "lineChange": "added"
2023-06-01T17:20:17.2664552Z                       },
2023-06-01T17:20:17.2664654Z                       {
2023-06-01T17:20:17.2664792Z                         "line": "  const user = await User.findOne({ token })",
2023-06-01T17:20:17.2664954Z                         "lineNumber": 105,
2023-06-01T17:20:17.2665081Z                         "lineChange": "none"
2023-06-01T17:20:17.2665211Z                       },
2023-06-01T17:20:17.2665315Z                       {
2023-06-01T17:20:17.2665431Z                         "line": "  if (!user) {",
2023-06-01T17:20:17.2665575Z                         "lineNumber": 107,
2023-06-01T17:20:17.2665701Z                         "lineChange": "none"
2023-06-01T17:20:17.2665834Z                       }
2023-06-01T17:20:17.2665937Z                     ]
2023-06-01T17:20:17.2666042Z                   },
2023-06-01T17:20:17.2666684Z                   {
2023-06-01T17:20:17.2666902Z                     "commitURL": "https://github.com/bkimminich/juice-shop/commit/5b9e4fe01a989e38be3bc7f52718c0c9d2dc2d6f?diff=split#diff-3ee9e2e81d2a5119de6e749e4d7d088aL7",
2023-06-01T17:20:17.2667137Z                     "lines": [
2023-06-01T17:20:17.2667246Z                       {
2023-06-01T17:20:17.2667404Z                         "line": "module.exports = function trackOrder () {",
2023-06-01T17:20:17.2667549Z                         "lineNumber": 5,
2023-06-01T17:20:17.2667675Z                         "lineChange": "none"
2023-06-01T17:20:17.2667811Z                       },
2023-06-01T17:20:17.2667914Z                       {
2023-06-01T17:20:17.2668051Z                         "line": "  return (req, res) => {",
2023-06-01T17:20:17.2668184Z                         "lineNumber": 6,
2023-06-01T17:20:17.2668309Z                         "lineChange": "none"
2023-06-01T17:20:17.2668445Z                       },
2023-06-01T17:20:17.2668550Z                       {
2023-06-01T17:20:17.2668770Z                         "line": "    if (utils.notSolved(challenges.reflectedXssChallenge) && utils.contains(req.params.id, '<script>alert(\"XSS\")</script>')) {",
2023-06-01T17:20:17.2668973Z                         "lineNumber": 7,
2023-06-01T17:20:17.2669099Z                         "lineChange": "none"
2023-06-01T17:20:17.2669233Z                       },
2023-06-01T17:20:17.2669336Z                       {
2023-06-01T17:20:17.2669499Z                         "line": "      utils.solve(challenges.reflectedXssChallenge)",
2023-06-01T17:20:17.2669652Z                         "lineNumber": 8,
2023-06-01T17:20:17.2669791Z                         "lineChange": "none"
2023-06-01T17:20:17.2669906Z                       },
2023-06-01T17:20:17.2670009Z                       {
2023-06-01T17:20:17.2670133Z                         "line": "    }",
2023-06-01T17:20:17.2670252Z                         "lineNumber": 9,
2023-06-01T17:20:17.2670428Z                         "lineChange": "none"
2023-06-01T17:20:17.2670557Z                       },
2023-06-01T17:20:17.2670661Z                       {
2023-06-01T17:20:17.2670826Z                         "line": "    db.orders.find({ orderId: req.params.id }).then(order => {",
2023-06-01T17:20:17.2670986Z                         "lineNumber": 10,
2023-06-01T17:20:17.2671129Z                         "lineChange": "removed"
2023-06-01T17:20:17.2671247Z                       },
2023-06-01T17:20:17.2671352Z                       {
2023-06-01T17:20:17.2671513Z                         "line": "    req.params.id = decodeURIComponent(req.params.id)",
2023-06-01T17:20:17.2671668Z                         "lineNumber": 10,
2023-06-01T17:20:17.2671808Z                         "lineChange": "added"
2023-06-01T17:20:17.2671924Z                       },
2023-06-01T17:20:17.2672027Z                       {
2023-06-01T17:20:17.2672212Z                         "line": "    db.orders.find({ $where: \"this.orderId === '\" + req.params.id + \"'\" }).then(order => {",
2023-06-01T17:20:17.2672391Z                         "lineNumber": 11,
2023-06-01T17:20:17.2672533Z                         "lineChange": "added"
2023-06-01T17:20:17.2672648Z                       },
2023-06-01T17:20:17.2672750Z                       {
2023-06-01T17:20:17.2672916Z                         "line": "      const result = utils.queryResultToJson(order)",
2023-06-01T17:20:17.2673067Z                         "lineNumber": 12,
2023-06-01T17:20:17.2673210Z                         "lineChange": "none"
2023-06-01T17:20:17.2673325Z                       },
2023-06-01T17:20:17.2673428Z                       {
2023-06-01T17:20:17.2673613Z                         "line": "      if (utils.notSolved(challenges.noSqlInjectionChallenge2) && result.data.length > 1) {",
2023-06-01T17:20:17.2673790Z                         "lineNumber": 13,
2023-06-01T17:20:17.2673938Z                         "lineChange": "added"
2023-06-01T17:20:17.2674098Z                       },
2023-06-01T17:20:17.2674215Z                       {
2023-06-01T17:20:17.2674353Z                         "line": "if (result.data[0] === undefined) {",
2023-06-01T17:20:17.2674495Z                         "lineNumber": 16,
2023-06-01T17:20:17.2674635Z                         "lineChange": "none"
2023-06-01T17:20:17.2674749Z                       }
2023-06-01T17:20:17.2674866Z                     ]
2023-06-01T17:20:17.2674972Z                   },
2023-06-01T17:20:17.2675075Z                   {
2023-06-01T17:20:17.2675313Z                     "commitURL": "https://github.com/reviewninja/review.ninja/commit/17361111027001a330f930557cd3ff6ab04741d4?diff=split#diff-1e55193185e421a5669bbadca9231cc4L8",
2023-06-01T17:20:17.2675528Z                     "lines": [
2023-06-01T17:20:17.2675653Z                       {
2023-06-01T17:20:17.2675793Z                         "line": "var webhook = require('../services/webhook');",
2023-06-01T17:20:17.2675946Z                         "lineNumber": 5,
2023-06-01T17:20:17.2676092Z                         "lineChange": "none"
2023-06-01T17:20:17.2676206Z                       },
2023-06-01T17:20:17.2676324Z                       {
2023-06-01T17:20:17.2676438Z                         "line": "// models",
2023-06-01T17:20:17.2676561Z                         "lineNumber": 6,
2023-06-01T17:20:17.2676704Z                         "lineChange": "none"
2023-06-01T17:20:17.2676819Z                       },
2023-06-01T17:20:17.2676942Z                       {
2023-06-01T17:20:17.2677083Z                         "line": "var User = require('mongoose').model('User');",
2023-06-01T17:20:17.2677234Z                         "lineNumber": 7,
2023-06-01T17:20:17.2677372Z                         "lineChange": "none"
2023-06-01T17:20:17.2677487Z                       },
2023-06-01T17:20:17.2677603Z                       {
2023-06-01T17:20:17.2677737Z                         "line": "var contains = function(events) {",
2023-06-01T17:20:17.2677933Z                         "lineNumber": 9,
2023-06-01T17:20:17.2678059Z                         "lineChange": "none"
2023-06-01T17:20:17.2678173Z                       },
2023-06-01T17:20:17.2678292Z                       {
2023-06-01T17:20:17.2678402Z                         "line": "},",
2023-06-01T17:20:17.2678536Z                         "lineNumber": 74,
2023-06-01T17:20:17.2678662Z                         "lineChange": "none"
2023-06-01T17:20:17.2678777Z                       },
2023-06-01T17:20:17.2678896Z                       {
2023-06-01T17:20:17.2679065Z                         "line": "create: function(req, done) {",
2023-06-01T17:20:17.2679246Z                         "lineNumber": 76,
2023-06-01T17:20:17.2679372Z                         "lineChange": "none"
2023-06-01T17:20:17.2679487Z                       },
2023-06-01T17:20:17.2679605Z                       {
2023-06-01T17:20:17.2679758Z                         "line": "    User.findOne({uuid: req.args.user_uuid}, function(err, user) {",
2023-06-01T17:20:17.2679944Z                         "lineNumber": 77,
2023-06-01T17:20:17.2680074Z                         "lineChange": "removed"
2023-06-01T17:20:17.2680193Z                       },
2023-06-01T17:20:17.2680315Z                       {
2023-06-01T17:20:17.2680465Z                         "line": "    User.findOne({uuid: req.user.uuid}, function(err, user) {",
2023-06-01T17:20:17.2680637Z                         "lineNumber": 77,
2023-06-01T17:20:17.2680764Z                         "lineChange": "added"
2023-06-01T17:20:17.2680879Z                       },
2023-06-01T17:20:17.2680997Z                       {
2023-06-01T17:20:17.2681118Z                         "line": "        if(err || !user) {",
2023-06-01T17:20:17.2681265Z                         "lineNumber": 79,
2023-06-01T17:20:17.2681392Z                         "lineChange": "none"
2023-06-01T17:20:17.2681506Z                       },
2023-06-01T17:20:17.2681626Z                       {
2023-06-01T17:20:17.2681795Z                         "line": "fun: 'createHook',",
2023-06-01T17:20:17.2681942Z                         "lineNumber": 85,
2023-06-01T17:20:17.2682071Z                         "lineChange": "none"
2023-06-01T17:20:17.2682187Z                       },
2023-06-01T17:20:17.2682307Z                       {
2023-06-01T17:20:17.2682420Z                         "line": "arg: {",
2023-06-01T17:20:17.2682561Z                         "lineNumber": 86,
2023-06-01T17:20:17.2682687Z                         "lineChange": "none"
2023-06-01T17:20:17.2682801Z                       },
2023-06-01T17:20:17.2682918Z                       {
2023-06-01T17:20:17.2683610Z                         "line": "    user: req.args.user,",
2023-06-01T17:20:17.2683800Z                         "lineNumber": 87,
2023-06-01T17:20:17.2683930Z                         "lineChange": "none"
2023-06-01T17:20:17.2684045Z                       },
2023-06-01T17:20:17.2684161Z                       {
2023-06-01T17:20:17.2684289Z                         "line": "    repo: req.args.repo,",
2023-06-01T17:20:17.2684441Z                         "lineNumber": 88,
2023-06-01T17:20:17.2684566Z                         "lineChange": "none"
2023-06-01T17:20:17.2684681Z                       },
2023-06-01T17:20:17.2684802Z                       {
2023-06-01T17:20:17.2684920Z                         "line": "    name: 'web',",
2023-06-01T17:20:17.2685066Z                         "lineNumber": 89,
2023-06-01T17:20:17.2685192Z                         "lineChange": "none"
2023-06-01T17:20:17.2685306Z                       }
2023-06-01T17:20:17.2685422Z                     ]
2023-06-01T17:20:17.2685524Z                   }
2023-06-01T17:20:17.2685643Z                 ],
2023-06-01T17:20:17.2685769Z                 "exampleCommitDescriptions": [],
2023-06-01T17:20:17.2685907Z                 "precision": "very-high",
2023-06-01T17:20:17.2686056Z                 "repoDatasetSize": 69,
2023-06-01T17:20:17.2686252Z                 "cwe": [
2023-06-01T17:20:17.2686382Z                   "CWE-89"
2023-06-01T17:20:17.2686490Z                 ]
2023-06-01T17:20:17.2686592Z               }
2023-06-01T17:20:17.2686709Z             }
2023-06-01T17:20:17.2686811Z           ]
2023-06-01T17:20:17.2686925Z         }
2023-06-01T17:20:17.2687028Z       },
2023-06-01T17:20:17.2687139Z       "results": [
2023-06-01T17:20:17.2687260Z         {
2023-06-01T17:20:17.2687393Z           "ruleId": "javascript/NoHardcodedPasswords",
2023-06-01T17:20:17.2687547Z           "ruleIndex": 0,
2023-06-01T17:20:17.2687670Z           "level": "warning",
2023-06-01T17:20:17.2687790Z           "message": {
2023-06-01T17:20:17.2687972Z             "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
2023-06-01T17:20:17.2688189Z             "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
2023-06-01T17:20:17.2688367Z             "arguments": [
2023-06-01T17:20:17.2688490Z               "[password](0)"
2023-06-01T17:20:17.2688603Z             ]
2023-06-01T17:20:17.2688722Z           },
2023-06-01T17:20:17.2688834Z           "locations": [
2023-06-01T17:20:17.2688962Z             {
2023-06-01T17:20:17.2689079Z               "physicalLocation": {
2023-06-01T17:20:17.2689208Z                 "artifactLocation": {
2023-06-01T17:20:17.2689356Z                   "uri": "mongoose-db.js",
2023-06-01T17:20:17.2689490Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2689621Z                 },
2023-06-01T17:20:17.2689732Z                 "region": {
2023-06-01T17:20:17.2689851Z                   "startLine": 52,
2023-06-01T17:20:17.2689991Z                   "endLine": 52,
2023-06-01T17:20:17.2690114Z                   "startColumn": 35,
2023-06-01T17:20:17.2690252Z                   "endColumn": 43
2023-06-01T17:20:17.2690366Z                 }
2023-06-01T17:20:17.2690468Z               }
2023-06-01T17:20:17.2690587Z             }
2023-06-01T17:20:17.2690691Z           ],
2023-06-01T17:20:17.2690853Z           "fingerprints": {
2023-06-01T17:20:17.2691036Z             "0": "bb47b7d48852e26400b10ea5fd18a79dda541ca243f28818319392ef255ca0c1",
2023-06-01T17:20:17.2691666Z             "1": "12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d.12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d"
2023-06-01T17:20:17.2691894Z           },
2023-06-01T17:20:17.2692005Z           "codeFlows": [
2023-06-01T17:20:17.2692129Z             {
2023-06-01T17:20:17.2692243Z               "threadFlows": [
2023-06-01T17:20:17.2692356Z                 {
2023-06-01T17:20:17.2692481Z                   "locations": [
2023-06-01T17:20:17.2692590Z                     {
2023-06-01T17:20:17.2692715Z                       "location": {
2023-06-01T17:20:17.2692831Z                         "id": 0,
2023-06-01T17:20:17.2692952Z                         "physicalLocation": {
2023-06-01T17:20:17.2693098Z                           "artifactLocation": {
2023-06-01T17:20:17.2693237Z                             "uri": "mongoose-db.js",
2023-06-01T17:20:17.2693388Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2693508Z                           },
2023-06-01T17:20:17.2693619Z                           "region": {
2023-06-01T17:20:17.2693753Z                             "startLine": 52,
2023-06-01T17:20:17.2693876Z                             "endLine": 52,
2023-06-01T17:20:17.2694016Z                             "startColumn": 35,
2023-06-01T17:20:17.2694145Z                             "endColumn": 43
2023-06-01T17:20:17.2694257Z                           }
2023-06-01T17:20:17.2694379Z                         }
2023-06-01T17:20:17.2694481Z                       }
2023-06-01T17:20:17.2694608Z                     }
2023-06-01T17:20:17.2694710Z                   ]
2023-06-01T17:20:17.2694812Z                 }
2023-06-01T17:20:17.2694929Z               ]
2023-06-01T17:20:17.2695088Z             }
2023-06-01T17:20:17.2695205Z           ],
2023-06-01T17:20:17.2695322Z           "properties": {
2023-06-01T17:20:17.2695448Z             "priorityScore": 512,
2023-06-01T17:20:17.2695599Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2695719Z               {
2023-06-01T17:20:17.2695844Z                 "label": true,
2023-06-01T17:20:17.2695976Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2696096Z               },
2023-06-01T17:20:17.2696219Z               {
2023-06-01T17:20:17.2696330Z                 "label": true,
2023-06-01T17:20:17.2696457Z                 "type": "hotFileCodeFlow"
2023-06-01T17:20:17.2696588Z               },
2023-06-01T17:20:17.2696690Z               {
2023-06-01T17:20:17.2696818Z                 "label": true,
2023-06-01T17:20:17.2696943Z                 "type": "fixExamples"
2023-06-01T17:20:17.2697055Z               }
2023-06-01T17:20:17.2697172Z             ]
2023-06-01T17:20:17.2697273Z           }
2023-06-01T17:20:17.2697393Z         },
2023-06-01T17:20:17.2697499Z         {
2023-06-01T17:20:17.2697631Z           "ruleId": "javascript/NoHardcodedPasswords",
2023-06-01T17:20:17.2697787Z           "ruleIndex": 0,
2023-06-01T17:20:17.2697910Z           "level": "warning",
2023-06-01T17:20:17.2698043Z           "message": {
2023-06-01T17:20:17.2698223Z             "text": "Do not hardcode passwords in code. Found hardcoded password used in typeorm.createConnection.",
2023-06-01T17:20:17.2698452Z             "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
2023-06-01T17:20:17.2698630Z             "arguments": [
2023-06-01T17:20:17.2698762Z               "[typeorm.createConnection](0)"
2023-06-01T17:20:17.2698903Z             ]
2023-06-01T17:20:17.2699006Z           },
2023-06-01T17:20:17.2699116Z           "locations": [
2023-06-01T17:20:17.2699240Z             {
2023-06-01T17:20:17.2699356Z               "physicalLocation": {
2023-06-01T17:20:17.2699499Z                 "artifactLocation": {
2023-06-01T17:20:17.2699678Z                   "uri": "typeorm-db.js",
2023-06-01T17:20:17.2699811Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2699946Z                 },
2023-06-01T17:20:17.2700057Z                 "region": {
2023-06-01T17:20:17.2700191Z                   "startLine": 12,
2023-06-01T17:20:17.2700313Z                   "endLine": 12,
2023-06-01T17:20:17.2700435Z                   "startColumn": 3,
2023-06-01T17:20:17.2700573Z                   "endColumn": 11
2023-06-01T17:20:17.2700686Z                 }
2023-06-01T17:20:17.2700809Z               }
2023-06-01T17:20:17.2700911Z             }
2023-06-01T17:20:17.2701014Z           ],
2023-06-01T17:20:17.2701144Z           "fingerprints": {
2023-06-01T17:20:17.2701310Z             "0": "714f86014c4086a83e6ec5960f6b9e15a6bcbc65618ec26be52f928c28e1e54e",
2023-06-01T17:20:17.2701959Z             "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2036d596.0d9a312e.4773f344.bd65d204.515f1676.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"
2023-06-01T17:20:17.2702195Z           },
2023-06-01T17:20:17.2702313Z           "codeFlows": [
2023-06-01T17:20:17.2702438Z             {
2023-06-01T17:20:17.2702551Z               "threadFlows": [
2023-06-01T17:20:17.2702682Z                 {
2023-06-01T17:20:17.2702792Z                   "locations": [
2023-06-01T17:20:17.2702903Z                     {
2023-06-01T17:20:17.2703031Z                       "location": {
2023-06-01T17:20:17.2703147Z                         "id": 0,
2023-06-01T17:20:17.2703285Z                         "physicalLocation": {
2023-06-01T17:20:17.2703417Z                           "artifactLocation": {
2023-06-01T17:20:17.2703549Z                             "uri": "typeorm-db.js",
2023-06-01T17:20:17.2703700Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2703818Z                           },
2023-06-01T17:20:17.2703946Z                           "region": {
2023-06-01T17:20:17.2704123Z                             "startLine": 6,
2023-06-01T17:20:17.2704249Z                             "endLine": 6,
2023-06-01T17:20:17.2704387Z                             "startColumn": 1,
2023-06-01T17:20:17.2704512Z                             "endColumn": 25
2023-06-01T17:20:17.2704639Z                           }
2023-06-01T17:20:17.2704743Z                         }
2023-06-01T17:20:17.2704846Z                       }
2023-06-01T17:20:17.2704963Z                     }
2023-06-01T17:20:17.2705065Z                   ]
2023-06-01T17:20:17.2705182Z                 }
2023-06-01T17:20:17.2705283Z               ]
2023-06-01T17:20:17.2705385Z             }
2023-06-01T17:20:17.2705501Z           ],
2023-06-01T17:20:17.2705614Z           "properties": {
2023-06-01T17:20:17.2705754Z             "priorityScore": 562,
2023-06-01T17:20:17.2705887Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2706005Z               {
2023-06-01T17:20:17.2706131Z                 "label": true,
2023-06-01T17:20:17.2706262Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2706400Z               },
2023-06-01T17:20:17.2706502Z               {
2023-06-01T17:20:17.2706613Z                 "label": true,
2023-06-01T17:20:17.2706752Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2706868Z               },
2023-06-01T17:20:17.2706983Z               {
2023-06-01T17:20:17.2707094Z                 "label": true,
2023-06-01T17:20:17.2707555Z                 "type": "fixExamples"
2023-06-01T17:20:17.2707699Z               }
2023-06-01T17:20:17.2707801Z             ]
2023-06-01T17:20:17.2707901Z           }
2023-06-01T17:20:17.2708019Z         },
2023-06-01T17:20:17.2708122Z         {
2023-06-01T17:20:17.2708267Z           "ruleId": "javascript/UseCsurfForExpress",
2023-06-01T17:20:17.2708406Z           "ruleIndex": 1,
2023-06-01T17:20:17.2708528Z           "level": "warning",
2023-06-01T17:20:17.2708661Z           "message": {
2023-06-01T17:20:17.2708854Z             "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
2023-06-01T17:20:17.2709192Z             "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
2023-06-01T17:20:17.2709380Z             "arguments": [
2023-06-01T17:20:17.2709519Z               "[Express app](0)"
2023-06-01T17:20:17.2709634Z             ]
2023-06-01T17:20:17.2709737Z           },
2023-06-01T17:20:17.2709863Z           "locations": [
2023-06-01T17:20:17.2709973Z             {
2023-06-01T17:20:17.2710104Z               "physicalLocation": {
2023-06-01T17:20:17.2710239Z                 "artifactLocation": {
2023-06-01T17:20:17.2710364Z                   "uri": "app.js",
2023-06-01T17:20:17.2710505Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2710623Z                 },
2023-06-01T17:20:17.2710748Z                 "region": {
2023-06-01T17:20:17.2710867Z                   "startLine": 27,
2023-06-01T17:20:17.2710992Z                   "endLine": 27,
2023-06-01T17:20:17.2711134Z                   "startColumn": 11,
2023-06-01T17:20:17.2711261Z                   "endColumn": 18
2023-06-01T17:20:17.2711387Z                 }
2023-06-01T17:20:17.2711490Z               }
2023-06-01T17:20:17.2711592Z             }
2023-06-01T17:20:17.2711709Z           ],
2023-06-01T17:20:17.2711823Z           "fingerprints": {
2023-06-01T17:20:17.2711988Z             "0": "fc3649280e5ca55cf1656172d14adf0ed7eafafe850281ae628b186dc3a7caf9",
2023-06-01T17:20:17.2712270Z             "1": "ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"
2023-06-01T17:20:17.2712479Z           },
2023-06-01T17:20:17.2712612Z           "codeFlows": [
2023-06-01T17:20:17.2712721Z             {
2023-06-01T17:20:17.2712847Z               "threadFlows": [
2023-06-01T17:20:17.2712960Z                 {
2023-06-01T17:20:17.2713115Z                   "locations": [
2023-06-01T17:20:17.2713245Z                     {
2023-06-01T17:20:17.2713357Z                       "location": {
2023-06-01T17:20:17.2713487Z                         "id": 0,
2023-06-01T17:20:17.2713609Z                         "physicalLocation": {
2023-06-01T17:20:17.2713739Z                           "artifactLocation": {
2023-06-01T17:20:17.2713879Z                             "uri": "app.js",
2023-06-01T17:20:17.2714007Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2714143Z                           },
2023-06-01T17:20:17.2714254Z                           "region": {
2023-06-01T17:20:17.2714373Z                             "startLine": 27,
2023-06-01T17:20:17.2714511Z                             "endLine": 27,
2023-06-01T17:20:17.2714635Z                             "startColumn": 11,
2023-06-01T17:20:17.2714774Z                             "endColumn": 18
2023-06-01T17:20:17.2714887Z                           }
2023-06-01T17:20:17.2714994Z                         }
2023-06-01T17:20:17.2715111Z                       }
2023-06-01T17:20:17.2715215Z                     }
2023-06-01T17:20:17.2715331Z                   ]
2023-06-01T17:20:17.2715435Z                 }
2023-06-01T17:20:17.2715537Z               ]
2023-06-01T17:20:17.2715653Z             }
2023-06-01T17:20:17.2715755Z           ],
2023-06-01T17:20:17.2715867Z           "properties": {
2023-06-01T17:20:17.2716006Z             "priorityScore": 556,
2023-06-01T17:20:17.2716139Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2716269Z               {
2023-06-01T17:20:17.2716381Z                 "label": true,
2023-06-01T17:20:17.2716507Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2716644Z               },
2023-06-01T17:20:17.2716747Z               {
2023-06-01T17:20:17.2716873Z                 "label": true,
2023-06-01T17:20:17.2716997Z                 "type": "fixExamples"
2023-06-01T17:20:17.2717110Z               }
2023-06-01T17:20:17.2717229Z             ]
2023-06-01T17:20:17.2717381Z           }
2023-06-01T17:20:17.2717498Z         },
2023-06-01T17:20:17.2717600Z         {
2023-06-01T17:20:17.2717747Z           "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2717921Z           "ruleIndex": 2,
2023-06-01T17:20:17.2718045Z           "level": "warning",
2023-06-01T17:20:17.2718179Z           "message": {
2023-06-01T17:20:17.2718457Z             "text": "This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2718892Z             "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2719137Z             "arguments": [
2023-06-01T17:20:17.2719266Z               "[endpoint handler](0)",
2023-06-01T17:20:17.2719421Z               "[a system command execution](1)"
2023-06-01T17:20:17.2719542Z             ]
2023-06-01T17:20:17.2719660Z           },
2023-06-01T17:20:17.2719771Z           "locations": [
2023-06-01T17:20:17.2719881Z             {
2023-06-01T17:20:17.2720010Z               "physicalLocation": {
2023-06-01T17:20:17.2720138Z                 "artifactLocation": {
2023-06-01T17:20:17.2720284Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2720418Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2720535Z                 },
2023-06-01T17:20:17.2720661Z                 "region": {
2023-06-01T17:20:17.2720780Z                   "startLine": 77,
2023-06-01T17:20:17.2720918Z                   "endLine": 113,
2023-06-01T17:20:17.2721043Z                   "startColumn": 18,
2023-06-01T17:20:17.2721165Z                   "endColumn": 2
2023-06-01T17:20:17.2721336Z                 }
2023-06-01T17:20:17.2721441Z               }
2023-06-01T17:20:17.2721557Z             }
2023-06-01T17:20:17.2721661Z           ],
2023-06-01T17:20:17.2721774Z           "fingerprints": {
2023-06-01T17:20:17.2721955Z             "0": "f927008c43b00df60dbeccb9e5565bb0529ea1454f7e3e665d29c61801357953",
2023-06-01T17:20:17.2722220Z             "1": "a3c051e6.9c6e2949.98501263.c559ebce.b5c66366.5fce695c.83265159.89d75565.a3c051e6.4773f344.c2905f73.c559ebce.b6be8b13.5fce695c.83265159.89d75565"
2023-06-01T17:20:17.2722441Z           },
2023-06-01T17:20:17.2722552Z           "codeFlows": [
2023-06-01T17:20:17.2722662Z             {
2023-06-01T17:20:17.2722789Z               "threadFlows": [
2023-06-01T17:20:17.2722899Z                 {
2023-06-01T17:20:17.2723030Z                   "locations": [
2023-06-01T17:20:17.2723141Z                     {
2023-06-01T17:20:17.2723252Z                       "location": {
2023-06-01T17:20:17.2723381Z                         "id": 0,
2023-06-01T17:20:17.2723506Z                         "physicalLocation": {
2023-06-01T17:20:17.2723657Z                           "artifactLocation": {
2023-06-01T17:20:17.2723790Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2723925Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2724059Z                           },
2023-06-01T17:20:17.2724170Z                           "region": {
2023-06-01T17:20:17.2724303Z                             "startLine": 77,
2023-06-01T17:20:17.2724428Z                             "endLine": 113,
2023-06-01T17:20:17.2724553Z                             "startColumn": 18,
2023-06-01T17:20:17.2724690Z                             "endColumn": 2
2023-06-01T17:20:17.2724801Z                           }
2023-06-01T17:20:17.2724919Z                         }
2023-06-01T17:20:17.2725022Z                       }
2023-06-01T17:20:17.2725127Z                     },
2023-06-01T17:20:17.2725244Z                     {
2023-06-01T17:20:17.2725357Z                       "location": {
2023-06-01T17:20:17.2725530Z                         "id": 1,
2023-06-01T17:20:17.2725653Z                         "physicalLocation": {
2023-06-01T17:20:17.2725784Z                           "artifactLocation": {
2023-06-01T17:20:17.2725931Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2726066Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2726200Z                           },
2023-06-01T17:20:17.2726313Z                           "region": {
2023-06-01T17:20:17.2726432Z                             "startLine": 86,
2023-06-01T17:20:17.2726569Z                             "endLine": 86,
2023-06-01T17:20:17.2726693Z                             "startColumn": 10,
2023-06-01T17:20:17.2726832Z                             "endColumn": 27
2023-06-01T17:20:17.2726947Z                           }
2023-06-01T17:20:17.2727065Z                         }
2023-06-01T17:20:17.2727168Z                       }
2023-06-01T17:20:17.2727274Z                     }
2023-06-01T17:20:17.2727393Z                   ]
2023-06-01T17:20:17.2727495Z                 }
2023-06-01T17:20:17.2727596Z               ]
2023-06-01T17:20:17.2727711Z             }
2023-06-01T17:20:17.2727813Z           ],
2023-06-01T17:20:17.2727942Z           "properties": {
2023-06-01T17:20:17.2728106Z             "priorityScore": 668,
2023-06-01T17:20:17.2728239Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2728409Z               {
2023-06-01T17:20:17.2728545Z                 "label": true,
2023-06-01T17:20:17.2728690Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2728813Z               },
2023-06-01T17:20:17.2728915Z               {
2023-06-01T17:20:17.2729041Z                 "label": true,
2023-06-01T17:20:17.2729168Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2729299Z               },
2023-06-01T17:20:17.2729403Z               {
2023-06-01T17:20:17.2729515Z                 "label": true,
2023-06-01T17:20:17.2729711Z                 "type": "fixExamples"
2023-06-01T17:20:17.2729829Z               },
2023-06-01T17:20:17.2729945Z               {
2023-06-01T17:20:17.2730060Z                 "label": true,
2023-06-01T17:20:17.2730187Z                 "type": "commonlyFixed"
2023-06-01T17:20:17.2730318Z               }
2023-06-01T17:20:17.2730425Z             ]
2023-06-01T17:20:17.2730526Z           }
2023-06-01T17:20:17.2730644Z         },
2023-06-01T17:20:17.2730745Z         {
2023-06-01T17:20:17.2730909Z           "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2731064Z           "ruleIndex": 2,
2023-06-01T17:20:17.2731186Z           "level": "warning",
2023-06-01T17:20:17.2731321Z           "message": {
2023-06-01T17:20:17.2732294Z             "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2733268Z             "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2733536Z             "arguments": [
2023-06-01T17:20:17.2733688Z               "[endpoint handler](0)",
2023-06-01T17:20:17.2734687Z               "[a file system operation](1)"
2023-06-01T17:20:17.2734872Z             ]
2023-06-01T17:20:17.2734981Z           },
2023-06-01T17:20:17.2735095Z           "locations": [
2023-06-01T17:20:17.2735232Z             {
2023-06-01T17:20:17.2735351Z               "physicalLocation": {
2023-06-01T17:20:17.2735483Z                 "artifactLocation": {
2023-06-01T17:20:17.2735631Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2735768Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2735907Z                 },
2023-06-01T17:20:17.2736030Z                 "region": {
2023-06-01T17:20:17.2736391Z                   "startLine": 166,
2023-06-01T17:20:17.2736535Z                   "endLine": 221,
2023-06-01T17:20:17.2736661Z                   "startColumn": 18,
2023-06-01T17:20:17.2736800Z                   "endColumn": 2
2023-06-01T17:20:17.2736912Z                 }
2023-06-01T17:20:17.2737015Z               }
2023-06-01T17:20:17.2737138Z             }
2023-06-01T17:20:17.2737243Z           ],
2023-06-01T17:20:17.2737374Z           "fingerprints": {
2023-06-01T17:20:17.2737541Z             "0": "c2357a8e5cf9d2246841d185e94a82260932a6b66fb086b92a0fc28744a2ea65",
2023-06-01T17:20:17.2737808Z             "1": "ae77ea27.9c6e2949.98501263.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.c3f8dfad.4773f344.1ec824b2.c559ebce.546471fb.5fce695c.83265159.2f05c567"
2023-06-01T17:20:17.2738030Z           },
2023-06-01T17:20:17.2738144Z           "codeFlows": [
2023-06-01T17:20:17.2738270Z             {
2023-06-01T17:20:17.2738391Z               "threadFlows": [
2023-06-01T17:20:17.2738521Z                 {
2023-06-01T17:20:17.2738635Z                   "locations": [
2023-06-01T17:20:17.2738749Z                     {
2023-06-01T17:20:17.2738876Z                       "location": {
2023-06-01T17:20:17.2738993Z                         "id": 0,
2023-06-01T17:20:17.2739117Z                         "physicalLocation": {
2023-06-01T17:20:17.2739266Z                           "artifactLocation": {
2023-06-01T17:20:17.2739401Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2739551Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2739671Z                           },
2023-06-01T17:20:17.2739797Z                           "region": {
2023-06-01T17:20:17.2739923Z                             "startLine": 166,
2023-06-01T17:20:17.2740050Z                             "endLine": 221,
2023-06-01T17:20:17.2740193Z                             "startColumn": 18,
2023-06-01T17:20:17.2740389Z                             "endColumn": 2
2023-06-01T17:20:17.2740519Z                           }
2023-06-01T17:20:17.2740629Z                         }
2023-06-01T17:20:17.2740734Z                       }
2023-06-01T17:20:17.2740857Z                     },
2023-06-01T17:20:17.2740963Z                     {
2023-06-01T17:20:17.2741091Z                       "location": {
2023-06-01T17:20:17.2741207Z                         "id": 1,
2023-06-01T17:20:17.2741331Z                         "physicalLocation": {
2023-06-01T17:20:17.2741482Z                           "artifactLocation": {
2023-06-01T17:20:17.2741615Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2741763Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2741882Z                           },
2023-06-01T17:20:17.2741994Z                           "region": {
2023-06-01T17:20:17.2742135Z                             "startLine": 184,
2023-06-01T17:20:17.2742265Z                             "endLine": 184,
2023-06-01T17:20:17.2742415Z                             "startColumn": 5,
2023-06-01T17:20:17.2742542Z                             "endColumn": 16
2023-06-01T17:20:17.2742653Z                           }
2023-06-01T17:20:17.2742776Z                         }
2023-06-01T17:20:17.2742885Z                       }
2023-06-01T17:20:17.2743012Z                     }
2023-06-01T17:20:17.2743117Z                   ]
2023-06-01T17:20:17.2743219Z                 }
2023-06-01T17:20:17.2743337Z               ]
2023-06-01T17:20:17.2743441Z             }
2023-06-01T17:20:17.2743557Z           ],
2023-06-01T17:20:17.2743671Z           "properties": {
2023-06-01T17:20:17.2743795Z             "priorityScore": 668,
2023-06-01T17:20:17.2743945Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2744062Z               {
2023-06-01T17:20:17.2744173Z                 "label": true,
2023-06-01T17:20:17.2744316Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2744440Z               },
2023-06-01T17:20:17.2744605Z               {
2023-06-01T17:20:17.2744717Z                 "label": true,
2023-06-01T17:20:17.2744842Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2744980Z               },
2023-06-01T17:20:17.2745083Z               {
2023-06-01T17:20:17.2745212Z                 "label": true,
2023-06-01T17:20:17.2745337Z                 "type": "fixExamples"
2023-06-01T17:20:17.2745460Z               },
2023-06-01T17:20:17.2745576Z               {
2023-06-01T17:20:17.2745687Z                 "label": true,
2023-06-01T17:20:17.2745832Z                 "type": "commonlyFixed"
2023-06-01T17:20:17.2745949Z               }
2023-06-01T17:20:17.2746049Z             ]
2023-06-01T17:20:17.2746166Z           }
2023-06-01T17:20:17.2746269Z         },
2023-06-01T17:20:17.2746386Z         {
2023-06-01T17:20:17.2746536Z           "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
2023-06-01T17:20:17.2746691Z           "ruleIndex": 2,
2023-06-01T17:20:17.2746833Z           "level": "warning",
2023-06-01T17:20:17.2746956Z           "message": {
2023-06-01T17:20:17.2747245Z             "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2747661Z             "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
2023-06-01T17:20:17.2747917Z             "arguments": [
2023-06-01T17:20:17.2748042Z               "[endpoint handler](0)",
2023-06-01T17:20:17.2748179Z               "[a file system operation](1)"
2023-06-01T17:20:17.2748313Z             ]
2023-06-01T17:20:17.2748417Z           },
2023-06-01T17:20:17.2748543Z           "locations": [
2023-06-01T17:20:17.2748701Z             {
2023-06-01T17:20:17.2748821Z               "physicalLocation": {
2023-06-01T17:20:17.2748969Z                 "artifactLocation": {
2023-06-01T17:20:17.2749102Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2749255Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2749376Z                 },
2023-06-01T17:20:17.2749486Z                 "region": {
2023-06-01T17:20:17.2749621Z                   "startLine": 223,
2023-06-01T17:20:17.2749745Z                   "endLine": 231,
2023-06-01T17:20:17.2749887Z                   "startColumn": 21,
2023-06-01T17:20:17.2750016Z                   "endColumn": 2
2023-06-01T17:20:17.2750127Z                 }
2023-06-01T17:20:17.2750250Z               }
2023-06-01T17:20:17.2750351Z             }
2023-06-01T17:20:17.2750466Z           ],
2023-06-01T17:20:17.2750580Z           "fingerprints": {
2023-06-01T17:20:17.2750744Z             "0": "105f8e1c4dcec8019b54822c6e014d3a4adb434b6f04ea2ea105529ee7ef33c2",
2023-06-01T17:20:17.2751031Z             "1": "ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565.ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565"
2023-06-01T17:20:17.2751253Z           },
2023-06-01T17:20:17.2751382Z           "codeFlows": [
2023-06-01T17:20:17.2751491Z             {
2023-06-01T17:20:17.2751604Z               "threadFlows": [
2023-06-01T17:20:17.2751737Z                 {
2023-06-01T17:20:17.2751848Z                   "locations": [
2023-06-01T17:20:17.2751972Z                     {
2023-06-01T17:20:17.2752086Z                       "location": {
2023-06-01T17:20:17.2752206Z                         "id": 0,
2023-06-01T17:20:17.2752343Z                         "physicalLocation": {
2023-06-01T17:20:17.2752472Z                           "artifactLocation": {
2023-06-01T17:20:17.2752623Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2752759Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2752881Z                           },
2023-06-01T17:20:17.2753047Z                           "region": {
2023-06-01T17:20:17.2753168Z                             "startLine": 223,
2023-06-01T17:20:17.2753307Z                             "endLine": 231,
2023-06-01T17:20:17.2753433Z                             "startColumn": 21,
2023-06-01T17:20:17.2753557Z                             "endColumn": 2
2023-06-01T17:20:17.2753684Z                           }
2023-06-01T17:20:17.2753788Z                         }
2023-06-01T17:20:17.2753907Z                       }
2023-06-01T17:20:17.2754012Z                     },
2023-06-01T17:20:17.2754115Z                     {
2023-06-01T17:20:17.2754242Z                       "location": {
2023-06-01T17:20:17.2754360Z                         "id": 1,
2023-06-01T17:20:17.2754499Z                         "physicalLocation": {
2023-06-01T17:20:17.2754629Z                           "artifactLocation": {
2023-06-01T17:20:17.2754761Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2754914Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2755036Z                           },
2023-06-01T17:20:17.2755165Z                           "region": {
2023-06-01T17:20:17.2755287Z                             "startLine": 225,
2023-06-01T17:20:17.2755412Z                             "endLine": 225,
2023-06-01T17:20:17.2755551Z                             "startColumn": 14,
2023-06-01T17:20:17.2755676Z                             "endColumn": 20
2023-06-01T17:20:17.2755812Z                           }
2023-06-01T17:20:17.2755916Z                         }
2023-06-01T17:20:17.2756018Z                       }
2023-06-01T17:20:17.2756142Z                     }
2023-06-01T17:20:17.2756245Z                   ]
2023-06-01T17:20:17.2756362Z                 }
2023-06-01T17:20:17.2756464Z               ]
2023-06-01T17:20:17.2756566Z             }
2023-06-01T17:20:17.2756682Z           ],
2023-06-01T17:20:17.2756793Z           "properties": {
2023-06-01T17:20:17.2756979Z             "priorityScore": 668,
2023-06-01T17:20:17.2757117Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2757235Z               {
2023-06-01T17:20:17.2757371Z                 "label": true,
2023-06-01T17:20:17.2757502Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2757641Z               },
2023-06-01T17:20:17.2757745Z               {
2023-06-01T17:20:17.2757858Z                 "label": true,
2023-06-01T17:20:17.2758009Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2758128Z               },
2023-06-01T17:20:17.2758246Z               {
2023-06-01T17:20:17.2758359Z                 "label": true,
2023-06-01T17:20:17.2758487Z                 "type": "fixExamples"
2023-06-01T17:20:17.2758623Z               },
2023-06-01T17:20:17.2758726Z               {
2023-06-01T17:20:17.2758839Z                 "label": true,
2023-06-01T17:20:17.2758980Z                 "type": "commonlyFixed"
2023-06-01T17:20:17.2759098Z               }
2023-06-01T17:20:17.2759222Z             ]
2023-06-01T17:20:17.2759327Z           }
2023-06-01T17:20:17.2759430Z         },
2023-06-01T17:20:17.2759553Z         {
2023-06-01T17:20:17.2759692Z           "ruleId": "javascript/NoHardcodedCredentials",
2023-06-01T17:20:17.2759849Z           "ruleIndex": 3,
2023-06-01T17:20:17.2759972Z           "level": "warning",
2023-06-01T17:20:17.2760091Z           "message": {
2023-06-01T17:20:17.2760287Z             "text": "Do not hardcode credentials in code. Found hardcoded credential used in typeorm.createConnection.",
2023-06-01T17:20:17.2760523Z             "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
2023-06-01T17:20:17.2760709Z             "arguments": [
2023-06-01T17:20:17.2760843Z               "[typeorm.createConnection](0)"
2023-06-01T17:20:17.2760985Z             ]
2023-06-01T17:20:17.2761124Z           },
2023-06-01T17:20:17.2762097Z           "locations": [
2023-06-01T17:20:17.2762260Z             {
2023-06-01T17:20:17.2762382Z               "physicalLocation": {
2023-06-01T17:20:17.2762634Z                 "artifactLocation": {
2023-06-01T17:20:17.2762790Z                   "uri": "typeorm-db.js",
2023-06-01T17:20:17.2762924Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2763063Z                 },
2023-06-01T17:20:17.2763173Z                 "region": {
2023-06-01T17:20:17.2763293Z                   "startLine": 11,
2023-06-01T17:20:17.2763430Z                   "endLine": 11,
2023-06-01T17:20:17.2763557Z                   "startColumn": 3,
2023-06-01T17:20:17.2763701Z                   "endColumn": 11
2023-06-01T17:20:17.2763818Z                 }
2023-06-01T17:20:17.2763919Z               }
2023-06-01T17:20:17.2764037Z             }
2023-06-01T17:20:17.2764140Z           ],
2023-06-01T17:20:17.2764271Z           "fingerprints": {
2023-06-01T17:20:17.2764451Z             "0": "4b7c3803820ba34684e825a2b41eff46f61fb0395fd6edba254171183b51c31c",
2023-06-01T17:20:17.2764747Z             "1": "12567ef6.4773f344.5db24211.e052b9a9.79a7d027.fcf3002d.ce4a9d89.5eeba349.0d9a312e.4773f344.bd65d204.515f1676.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"
2023-06-01T17:20:17.2764961Z           },
2023-06-01T17:20:17.2765088Z           "codeFlows": [
2023-06-01T17:20:17.2765200Z             {
2023-06-01T17:20:17.2765313Z               "threadFlows": [
2023-06-01T17:20:17.2765443Z                 {
2023-06-01T17:20:17.2765562Z                   "locations": [
2023-06-01T17:20:17.2765688Z                     {
2023-06-01T17:20:17.2765803Z                       "location": {
2023-06-01T17:20:17.2765923Z                         "id": 0,
2023-06-01T17:20:17.2766061Z                         "physicalLocation": {
2023-06-01T17:20:17.2766193Z                           "artifactLocation": {
2023-06-01T17:20:17.2766342Z                             "uri": "typeorm-db.js",
2023-06-01T17:20:17.2766481Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2766654Z                           },
2023-06-01T17:20:17.2766785Z                           "region": {
2023-06-01T17:20:17.2766909Z                             "startLine": 6,
2023-06-01T17:20:17.2767044Z                             "endLine": 6,
2023-06-01T17:20:17.2767167Z                             "startColumn": 1,
2023-06-01T17:20:17.2767295Z                             "endColumn": 25
2023-06-01T17:20:17.2767425Z                           }
2023-06-01T17:20:17.2767528Z                         }
2023-06-01T17:20:17.2767647Z                       }
2023-06-01T17:20:17.2767757Z                     }
2023-06-01T17:20:17.2767859Z                   ]
2023-06-01T17:20:17.2767976Z                 }
2023-06-01T17:20:17.2768077Z               ]
2023-06-01T17:20:17.2768179Z             }
2023-06-01T17:20:17.2768302Z           ],
2023-06-01T17:20:17.2768413Z           "properties": {
2023-06-01T17:20:17.2768560Z             "priorityScore": 556,
2023-06-01T17:20:17.2768691Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2768813Z               {
2023-06-01T17:20:17.2768944Z                 "label": true,
2023-06-01T17:20:17.2769075Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2769209Z               },
2023-06-01T17:20:17.2769311Z               {
2023-06-01T17:20:17.2769422Z                 "label": true,
2023-06-01T17:20:17.2769563Z                 "type": "fixExamples"
2023-06-01T17:20:17.2769678Z               }
2023-06-01T17:20:17.2769794Z             ]
2023-06-01T17:20:17.2769894Z           }
2023-06-01T17:20:17.2769997Z         },
2023-06-01T17:20:17.2770114Z         {
2023-06-01T17:20:17.2770243Z           "ruleId": "javascript/DisablePoweredBy",
2023-06-01T17:20:17.2770400Z           "ruleIndex": 4,
2023-06-01T17:20:17.2770523Z           "level": "warning",
2023-06-01T17:20:17.2770643Z           "message": {
2023-06-01T17:20:17.2770890Z             "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
2023-06-01T17:20:17.2771269Z             "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
2023-06-01T17:20:17.2771504Z             "arguments": [
2023-06-01T17:20:17.2771628Z               "[Express app](0)"
2023-06-01T17:20:17.2771758Z             ]
2023-06-01T17:20:17.2771864Z           },
2023-06-01T17:20:17.2771975Z           "locations": [
2023-06-01T17:20:17.2772103Z             {
2023-06-01T17:20:17.2772220Z               "physicalLocation": {
2023-06-01T17:20:17.2772350Z                 "artifactLocation": {
2023-06-01T17:20:17.2772489Z                   "uri": "app.js",
2023-06-01T17:20:17.2772620Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2772752Z                 },
2023-06-01T17:20:17.2772862Z                 "region": {
2023-06-01T17:20:17.2772981Z                   "startLine": 27,
2023-06-01T17:20:17.2773118Z                   "endLine": 27,
2023-06-01T17:20:17.2773247Z                   "startColumn": 11,
2023-06-01T17:20:17.2773384Z                   "endColumn": 18
2023-06-01T17:20:17.2773496Z                 }
2023-06-01T17:20:17.2773598Z               }
2023-06-01T17:20:17.2773718Z             }
2023-06-01T17:20:17.2773820Z           ],
2023-06-01T17:20:17.2773949Z           "fingerprints": {
2023-06-01T17:20:17.2774116Z             "0": "2f7b39f14456c8a7778312cb453e23aee53912793417b935a46181d29113db3f",
2023-06-01T17:20:17.2774383Z             "1": "ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"
2023-06-01T17:20:17.2774606Z           },
2023-06-01T17:20:17.2774717Z           "codeFlows": [
2023-06-01T17:20:17.2774839Z             {
2023-06-01T17:20:17.2774961Z               "threadFlows": [
2023-06-01T17:20:17.2775089Z                 {
2023-06-01T17:20:17.2776226Z                   "locations": [
2023-06-01T17:20:17.2776389Z                     {
2023-06-01T17:20:17.2776561Z                       "location": {
2023-06-01T17:20:17.2776680Z                         "id": 0,
2023-06-01T17:20:17.2776807Z                         "physicalLocation": {
2023-06-01T17:20:17.2776955Z                           "artifactLocation": {
2023-06-01T17:20:17.2777084Z                             "uri": "app.js",
2023-06-01T17:20:17.2777226Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2777349Z                           },
2023-06-01T17:20:17.2777477Z                           "region": {
2023-06-01T17:20:17.2777600Z                             "startLine": 27,
2023-06-01T17:20:17.2777726Z                             "endLine": 27,
2023-06-01T17:20:17.2777868Z                             "startColumn": 11,
2023-06-01T17:20:17.2777994Z                             "endColumn": 18
2023-06-01T17:20:17.2778122Z                           }
2023-06-01T17:20:17.2778233Z                         }
2023-06-01T17:20:17.2778338Z                       }
2023-06-01T17:20:17.2778459Z                     }
2023-06-01T17:20:17.2778562Z                   ]
2023-06-01T17:20:17.2778679Z                 }
2023-06-01T17:20:17.2778781Z               ]
2023-06-01T17:20:17.2778882Z             }
2023-06-01T17:20:17.2778999Z           ],
2023-06-01T17:20:17.2779112Z           "properties": {
2023-06-01T17:20:17.2779237Z             "priorityScore": 556,
2023-06-01T17:20:17.2779385Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2779508Z               {
2023-06-01T17:20:17.2779635Z                 "label": true,
2023-06-01T17:20:17.2779760Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2779878Z               },
2023-06-01T17:20:17.2780005Z               {
2023-06-01T17:20:17.2780120Z                 "label": true,
2023-06-01T17:20:17.2780266Z                 "type": "fixExamples"
2023-06-01T17:20:17.2780381Z               }
2023-06-01T17:20:17.2780486Z             ]
2023-06-01T17:20:17.2780699Z           }
2023-06-01T17:20:17.2780802Z         },
2023-06-01T17:20:17.2780919Z         {
2023-06-01T17:20:17.2781046Z           "ruleId": "javascript/HttpToHttps",
2023-06-01T17:20:17.2781181Z           "ruleIndex": 5,
2023-06-01T17:20:17.2781323Z           "level": "warning",
2023-06-01T17:20:17.2781442Z           "message": {
2023-06-01T17:20:17.2781759Z             "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
2023-06-01T17:20:17.2782223Z             "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
2023-06-01T17:20:17.2782518Z             "arguments": [
2023-06-01T17:20:17.2782647Z               "[http.createServer](0)"
2023-06-01T17:20:17.2782763Z             ]
2023-06-01T17:20:17.2782885Z           },
2023-06-01T17:20:17.2782997Z           "locations": [
2023-06-01T17:20:17.2783122Z             {
2023-06-01T17:20:17.2783238Z               "physicalLocation": {
2023-06-01T17:20:17.2783367Z                 "artifactLocation": {
2023-06-01T17:20:17.2783507Z                   "uri": "app.js",
2023-06-01T17:20:17.2783634Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2783768Z                 },
2023-06-01T17:20:17.2783878Z                 "region": {
2023-06-01T17:20:17.2783998Z                   "startLine": 76,
2023-06-01T17:20:17.2784133Z                   "endLine": 76,
2023-06-01T17:20:17.2784255Z                   "startColumn": 1,
2023-06-01T17:20:17.2784392Z                   "endColumn": 18
2023-06-01T17:20:17.2784503Z                 }
2023-06-01T17:20:17.2784661Z               }
2023-06-01T17:20:17.2784781Z             }
2023-06-01T17:20:17.2784886Z           ],
2023-06-01T17:20:17.2785013Z           "fingerprints": {
2023-06-01T17:20:17.2785180Z             "0": "533ec15879f9dfe65e2020c30adace5afffdecd6f6e6ed811cfca297fb171e7a",
2023-06-01T17:20:17.2785446Z             "1": "aac70831.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb.aac70831.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb"
2023-06-01T17:20:17.2785667Z           },
2023-06-01T17:20:17.2785778Z           "codeFlows": [
2023-06-01T17:20:17.2785904Z             {
2023-06-01T17:20:17.2786017Z               "threadFlows": [
2023-06-01T17:20:17.2786128Z                 {
2023-06-01T17:20:17.2786259Z                   "locations": [
2023-06-01T17:20:17.2786369Z                     {
2023-06-01T17:20:17.2786495Z                       "location": {
2023-06-01T17:20:17.2786611Z                         "id": 0,
2023-06-01T17:20:17.2786732Z                         "physicalLocation": {
2023-06-01T17:20:17.2786882Z                           "artifactLocation": {
2023-06-01T17:20:17.2787011Z                             "uri": "app.js",
2023-06-01T17:20:17.2787156Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2787278Z                           },
2023-06-01T17:20:17.2787390Z                           "region": {
2023-06-01T17:20:17.2787522Z                             "startLine": 76,
2023-06-01T17:20:17.2787646Z                             "endLine": 76,
2023-06-01T17:20:17.2787784Z                             "startColumn": 1,
2023-06-01T17:20:17.2787914Z                             "endColumn": 18
2023-06-01T17:20:17.2788027Z                           }
2023-06-01T17:20:17.2788146Z                         }
2023-06-01T17:20:17.2788249Z                       }
2023-06-01T17:20:17.2788367Z                     }
2023-06-01T17:20:17.2788469Z                   ]
2023-06-01T17:20:17.2788573Z                 }
2023-06-01T17:20:17.2788692Z               ]
2023-06-01T17:20:17.2788850Z             }
2023-06-01T17:20:17.2788966Z           ],
2023-06-01T17:20:17.2789077Z           "properties": {
2023-06-01T17:20:17.2789203Z             "priorityScore": 556,
2023-06-01T17:20:17.2789350Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2789469Z               {
2023-06-01T17:20:17.2789597Z                 "label": true,
2023-06-01T17:20:17.2789725Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2789843Z               },
2023-06-01T17:20:17.2789961Z               {
2023-06-01T17:20:17.2790071Z                 "label": true,
2023-06-01T17:20:17.2790214Z                 "type": "fixExamples"
2023-06-01T17:20:17.2790331Z               }
2023-06-01T17:20:17.2790432Z             ]
2023-06-01T17:20:17.2790548Z           }
2023-06-01T17:20:17.2790651Z         },
2023-06-01T17:20:17.2790753Z         {
2023-06-01T17:20:17.2790904Z           "ruleId": "javascript/HardcodedNonCryptoSecret",
2023-06-01T17:20:17.2791051Z           "ruleIndex": 6,
2023-06-01T17:20:17.2791190Z           "level": "error",
2023-06-01T17:20:17.2791308Z           "message": {
2023-06-01T17:20:17.2791484Z             "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
2023-06-01T17:20:17.2791727Z             "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
2023-06-01T17:20:17.2791892Z             "arguments": [
2023-06-01T17:20:17.2792036Z               "[a hardcoded string](0)",
2023-06-01T17:20:17.2792161Z               "[here](1)"
2023-06-01T17:20:17.2792283Z             ]
2023-06-01T17:20:17.2792385Z           },
2023-06-01T17:20:17.2792498Z           "locations": [
2023-06-01T17:20:17.2792624Z             {
2023-06-01T17:20:17.2792740Z               "physicalLocation": {
2023-06-01T17:20:17.2792870Z                 "artifactLocation": {
2023-06-01T17:20:17.2793014Z                   "uri": "app.js",
2023-06-01T17:20:17.2793141Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2793325Z                 },
2023-06-01T17:20:17.2793435Z                 "region": {
2023-06-01T17:20:17.2793555Z                   "startLine": 73,
2023-06-01T17:20:17.2793689Z                   "endLine": 73,
2023-06-01T17:20:17.2793811Z                   "startColumn": 5,
2023-06-01T17:20:17.2793946Z                   "endColumn": 10
2023-06-01T17:20:17.2794057Z                 }
2023-06-01T17:20:17.2794158Z               }
2023-06-01T17:20:17.2794275Z             }
2023-06-01T17:20:17.2794378Z           ],
2023-06-01T17:20:17.2794539Z           "fingerprints": {
2023-06-01T17:20:17.2795464Z             "0": "d492a3d37d1188e171f660a822ae2fa1f206291871c61025336cfc874be5990c",
2023-06-01T17:20:17.2795743Z             "1": "46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565.46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565"
2023-06-01T17:20:17.2795972Z           },
2023-06-01T17:20:17.2796092Z           "codeFlows": [
2023-06-01T17:20:17.2796224Z             {
2023-06-01T17:20:17.2796336Z               "threadFlows": [
2023-06-01T17:20:17.2796448Z                 {
2023-06-01T17:20:17.2796573Z                   "locations": [
2023-06-01T17:20:17.2796683Z                     {
2023-06-01T17:20:17.2796975Z                       "location": {
2023-06-01T17:20:17.2797103Z                         "id": 0,
2023-06-01T17:20:17.2797225Z                         "physicalLocation": {
2023-06-01T17:20:17.2797377Z                           "artifactLocation": {
2023-06-01T17:20:17.2797505Z                             "uri": "app.js",
2023-06-01T17:20:17.2797649Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2797769Z                           },
2023-06-01T17:20:17.2797895Z                           "region": {
2023-06-01T17:20:17.2798022Z                             "startLine": 73,
2023-06-01T17:20:17.2798149Z                             "endLine": 73,
2023-06-01T17:20:17.2798299Z                             "startColumn": 13,
2023-06-01T17:20:17.2798537Z                             "endColumn": 67
2023-06-01T17:20:17.2798667Z                           }
2023-06-01T17:20:17.2798772Z                         }
2023-06-01T17:20:17.2798879Z                       }
2023-06-01T17:20:17.2798997Z                     },
2023-06-01T17:20:17.2799101Z                     {
2023-06-01T17:20:17.2799212Z                       "location": {
2023-06-01T17:20:17.2799345Z                         "id": 1,
2023-06-01T17:20:17.2799467Z                         "physicalLocation": {
2023-06-01T17:20:17.2800217Z                           "artifactLocation": {
2023-06-01T17:20:17.2800373Z                             "uri": "app.js",
2023-06-01T17:20:17.2800522Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2800642Z                           },
2023-06-01T17:20:17.2800753Z                           "region": {
2023-06-01T17:20:17.2800888Z                             "startLine": 73,
2023-06-01T17:20:17.2801020Z                             "endLine": 73,
2023-06-01T17:20:17.2801158Z                             "startColumn": 5,
2023-06-01T17:20:17.2801282Z                             "endColumn": 10
2023-06-01T17:20:17.2801393Z                           }
2023-06-01T17:20:17.2801518Z                         }
2023-06-01T17:20:17.2801621Z                       }
2023-06-01T17:20:17.2801747Z                     }
2023-06-01T17:20:17.2801851Z                   ]
2023-06-01T17:20:17.2801953Z                 }
2023-06-01T17:20:17.2802070Z               ]
2023-06-01T17:20:17.2802172Z             }
2023-06-01T17:20:17.2802274Z           ],
2023-06-01T17:20:17.2802399Z           "properties": {
2023-06-01T17:20:17.2802524Z             "priorityScore": 806,
2023-06-01T17:20:17.2802670Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2802789Z               {
2023-06-01T17:20:17.2802900Z                 "label": true,
2023-06-01T17:20:17.2803144Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2803264Z               },
2023-06-01T17:20:17.2803383Z               {
2023-06-01T17:20:17.2803494Z                 "label": true,
2023-06-01T17:20:17.2803618Z                 "type": "fixExamples"
2023-06-01T17:20:17.2803747Z               }
2023-06-01T17:20:17.2803848Z             ]
2023-06-01T17:20:17.2803968Z           }
2023-06-01T17:20:17.2804071Z         },
2023-06-01T17:20:17.2804172Z         {
2023-06-01T17:20:17.2804312Z           "ruleId": "javascript/NoSqli",
2023-06-01T17:20:17.2804441Z           "ruleIndex": 7,
2023-06-01T17:20:17.2804582Z           "level": "error",
2023-06-01T17:20:17.2804701Z           "message": {
2023-06-01T17:20:17.2804917Z             "text": "Unsanitized input from the HTTP request body flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2805234Z             "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2805437Z             "arguments": [
2023-06-01T17:20:17.2805579Z               "[the HTTP request body](0)",
2023-06-01T17:20:17.2805716Z               "[flows](1),(2),(3),(4)",
2023-06-01T17:20:17.2805853Z               "[find](5)"
2023-06-01T17:20:17.2805960Z             ]
2023-06-01T17:20:17.2806063Z           },
2023-06-01T17:20:17.2806189Z           "locations": [
2023-06-01T17:20:17.2806297Z             {
2023-06-01T17:20:17.2806415Z               "physicalLocation": {
2023-06-01T17:20:17.2806566Z                 "artifactLocation": {
2023-06-01T17:20:17.2806697Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2806844Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2806962Z                 },
2023-06-01T17:20:17.2807073Z                 "region": {
2023-06-01T17:20:17.2807206Z                   "startLine": 39,
2023-06-01T17:20:17.2807327Z                   "endLine": 39,
2023-06-01T17:20:17.2807468Z                   "startColumn": 8,
2023-06-01T17:20:17.2808099Z                   "endColumn": 12
2023-06-01T17:20:17.2808212Z                 }
2023-06-01T17:20:17.2808337Z               }
2023-06-01T17:20:17.2808439Z             }
2023-06-01T17:20:17.2808558Z           ],
2023-06-01T17:20:17.2808673Z           "fingerprints": {
2023-06-01T17:20:17.2808837Z             "0": "5dacd021007d5479cb1b35404420a56a7fc14480d99c3f62ac16a87ad2bfe1ed",
2023-06-01T17:20:17.2809821Z             "1": "12567ef6.4773f344.7fde84c3.750eb3ec.cea4e9be.8020cfdf.cd61fc56.3cd69235.f759b1f9.4773f344.7fde84c3.08906714.79a7d027.5fce695c.c0a0d45c.1ce8e212"
2023-06-01T17:20:17.2810045Z           },
2023-06-01T17:20:17.2810178Z           "codeFlows": [
2023-06-01T17:20:17.2810287Z             {
2023-06-01T17:20:17.2810399Z               "threadFlows": [
2023-06-01T17:20:17.2810526Z                 {
2023-06-01T17:20:17.2810637Z                   "locations": [
2023-06-01T17:20:17.2810776Z                     {
2023-06-01T17:20:17.2810892Z                       "location": {
2023-06-01T17:20:17.2811006Z                         "id": 0,
2023-06-01T17:20:17.2811143Z                         "physicalLocation": {
2023-06-01T17:20:17.2811278Z                           "artifactLocation": {
2023-06-01T17:20:17.2811426Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2811562Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2811680Z                           },
2023-06-01T17:20:17.2811806Z                           "region": {
2023-06-01T17:20:17.2811927Z                             "startLine": 39,
2023-06-01T17:20:17.2812063Z                             "endLine": 39,
2023-06-01T17:20:17.2812189Z                             "startColumn": 29,
2023-06-01T17:20:17.2812327Z                             "endColumn": 33
2023-06-01T17:20:17.2812439Z                           }
2023-06-01T17:20:17.2812543Z                         }
2023-06-01T17:20:17.2812769Z                       }
2023-06-01T17:20:17.2812877Z                     },
2023-06-01T17:20:17.2812982Z                     {
2023-06-01T17:20:17.2813108Z                       "location": {
2023-06-01T17:20:17.2813224Z                         "id": 1,
2023-06-01T17:20:17.2813362Z                         "physicalLocation": {
2023-06-01T17:20:17.2813492Z                           "artifactLocation": {
2023-06-01T17:20:17.2813625Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2813774Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2813893Z                           },
2023-06-01T17:20:17.2814017Z                           "region": {
2023-06-01T17:20:17.2814138Z                             "startLine": 39,
2023-06-01T17:20:17.2814278Z                             "endLine": 39,
2023-06-01T17:20:17.2814403Z                             "startColumn": 29,
2023-06-01T17:20:17.2814526Z                             "endColumn": 33
2023-06-01T17:20:17.2814657Z                           }
2023-06-01T17:20:17.2814762Z                         }
2023-06-01T17:20:17.2814883Z                       }
2023-06-01T17:20:17.2814988Z                     },
2023-06-01T17:20:17.2815091Z                     {
2023-06-01T17:20:17.2815216Z                       "location": {
2023-06-01T17:20:17.2815333Z                         "id": 2,
2023-06-01T17:20:17.2815469Z                         "physicalLocation": {
2023-06-01T17:20:17.2815600Z                           "artifactLocation": {
2023-06-01T17:20:17.2815733Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2815882Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2816001Z                           },
2023-06-01T17:20:17.2816128Z                           "region": {
2023-06-01T17:20:17.2816248Z                             "startLine": 39,
2023-06-01T17:20:17.2816370Z                             "endLine": 39,
2023-06-01T17:20:17.2816513Z                             "startColumn": 25,
2023-06-01T17:20:17.2816686Z                             "endColumn": 33
2023-06-01T17:20:17.2816815Z                           }
2023-06-01T17:20:17.2816918Z                         }
2023-06-01T17:20:17.2817020Z                       }
2023-06-01T17:20:17.2817139Z                     },
2023-06-01T17:20:17.2817243Z                     {
2023-06-01T17:20:17.2817367Z                       "location": {
2023-06-01T17:20:17.2817489Z                         "id": 3,
2023-06-01T17:20:17.2817609Z                         "physicalLocation": {
2023-06-01T17:20:17.2817757Z                           "artifactLocation": {
2023-06-01T17:20:17.2817890Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2818040Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2818159Z                           },
2023-06-01T17:20:17.2818269Z                           "region": {
2023-06-01T17:20:17.2818407Z                             "startLine": 39,
2023-06-01T17:20:17.2818536Z                             "endLine": 39,
2023-06-01T17:20:17.2818677Z                             "startColumn": 15,
2023-06-01T17:20:17.2818801Z                             "endColumn": 23
2023-06-01T17:20:17.2818912Z                           }
2023-06-01T17:20:17.2819031Z                         }
2023-06-01T17:20:17.2819132Z                       }
2023-06-01T17:20:17.2819253Z                     },
2023-06-01T17:20:17.2819357Z                     {
2023-06-01T17:20:17.2819466Z                       "location": {
2023-06-01T17:20:17.2819596Z                         "id": 4,
2023-06-01T17:20:17.2819718Z                         "physicalLocation": {
2023-06-01T17:20:17.2819864Z                           "artifactLocation": {
2023-06-01T17:20:17.2819996Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2820130Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2820262Z                           },
2023-06-01T17:20:17.2820414Z                           "region": {
2023-06-01T17:20:17.2820552Z                             "startLine": 39,
2023-06-01T17:20:17.2820673Z                             "endLine": 39,
2023-06-01T17:20:17.2820798Z                             "startColumn": 13,
2023-06-01T17:20:17.2820941Z                             "endColumn": 73
2023-06-01T17:20:17.2821052Z                           }
2023-06-01T17:20:17.2821169Z                         }
2023-06-01T17:20:17.2821271Z                       }
2023-06-01T17:20:17.2821378Z                     },
2023-06-01T17:20:17.2821495Z                     {
2023-06-01T17:20:17.2821605Z                       "location": {
2023-06-01T17:20:17.2821735Z                         "id": 5,
2023-06-01T17:20:17.2821915Z                         "physicalLocation": {
2023-06-01T17:20:17.2822045Z                           "artifactLocation": {
2023-06-01T17:20:17.2822192Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2822329Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2822464Z                           },
2023-06-01T17:20:17.2822574Z                           "region": {
2023-06-01T17:20:17.2822694Z                             "startLine": 39,
2023-06-01T17:20:17.2822835Z                             "endLine": 39,
2023-06-01T17:20:17.2822958Z                             "startColumn": 8,
2023-06-01T17:20:17.2823095Z                             "endColumn": 12
2023-06-01T17:20:17.2823207Z                           }
2023-06-01T17:20:17.2823308Z                         }
2023-06-01T17:20:17.2823425Z                       }
2023-06-01T17:20:17.2823528Z                     }
2023-06-01T17:20:17.2823645Z                   ]
2023-06-01T17:20:17.2823748Z                 }
2023-06-01T17:20:17.2823849Z               ]
2023-06-01T17:20:17.2823966Z             }
2023-06-01T17:20:17.2824067Z           ],
2023-06-01T17:20:17.2824191Z           "properties": {
2023-06-01T17:20:17.2824319Z             "priorityScore": 818,
2023-06-01T17:20:17.2824497Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2824627Z               {
2023-06-01T17:20:17.2824739Z                 "label": true,
2023-06-01T17:20:17.2824882Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2825004Z               },
2023-06-01T17:20:17.2825105Z               {
2023-06-01T17:20:17.2825232Z                 "label": true,
2023-06-01T17:20:17.2825359Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2825488Z               },
2023-06-01T17:20:17.2825592Z               {
2023-06-01T17:20:17.2825703Z                 "label": true,
2023-06-01T17:20:17.2825840Z                 "type": "fixExamples"
2023-06-01T17:20:17.2825954Z               }
2023-06-01T17:20:17.2826055Z             ]
2023-06-01T17:20:17.2826170Z           }
2023-06-01T17:20:17.2826273Z         },
2023-06-01T17:20:17.2826389Z         {
2023-06-01T17:20:17.2826510Z           "ruleId": "javascript/NoSqli",
2023-06-01T17:20:17.2826642Z           "ruleIndex": 7,
2023-06-01T17:20:17.2826780Z           "level": "error",
2023-06-01T17:20:17.2826898Z           "message": {
2023-06-01T17:20:17.2827130Z             "text": "Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2827429Z             "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2827644Z             "arguments": [
2023-06-01T17:20:17.2827771Z               "[an HTTP parameter](0)",
2023-06-01T17:20:17.2827903Z               "[flows](1),(2),(3)",
2023-06-01T17:20:17.2828040Z               "[findById](4)"
2023-06-01T17:20:17.2828151Z             ]
2023-06-01T17:20:17.2828268Z           },
2023-06-01T17:20:17.2828381Z           "locations": [
2023-06-01T17:20:17.2828491Z             {
2023-06-01T17:20:17.2828662Z               "physicalLocation": {
2023-06-01T17:20:17.2828795Z                 "artifactLocation": {
2023-06-01T17:20:17.2828940Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2829075Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2829193Z                 },
2023-06-01T17:20:17.2829317Z                 "region": {
2023-06-01T17:20:17.2829436Z                   "startLine": 116,
2023-06-01T17:20:17.2829710Z                   "endLine": 116,
2023-06-01T17:20:17.2829838Z                   "startColumn": 8,
2023-06-01T17:20:17.2829960Z                   "endColumn": 16
2023-06-01T17:20:17.2830086Z                 }
2023-06-01T17:20:17.2830188Z               }
2023-06-01T17:20:17.2830303Z             }
2023-06-01T17:20:17.2830406Z           ],
2023-06-01T17:20:17.2830519Z           "fingerprints": {
2023-06-01T17:20:17.2830697Z             "0": "554c9e4d45c7e592d275a3ed9e055135b84585bdbb8acb649705786728e3b248",
2023-06-01T17:20:17.2830962Z             "1": "d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"
2023-06-01T17:20:17.2831197Z           },
2023-06-01T17:20:17.2831309Z           "codeFlows": [
2023-06-01T17:20:17.2831418Z             {
2023-06-01T17:20:17.2831545Z               "threadFlows": [
2023-06-01T17:20:17.2831656Z                 {
2023-06-01T17:20:17.2831784Z                   "locations": [
2023-06-01T17:20:17.2831895Z                     {
2023-06-01T17:20:17.2832008Z                       "location": {
2023-06-01T17:20:17.2832139Z                         "id": 0,
2023-06-01T17:20:17.2832261Z                         "physicalLocation": {
2023-06-01T17:20:17.2832405Z                           "artifactLocation": {
2023-06-01T17:20:17.2832539Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2832674Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2832807Z                           },
2023-06-01T17:20:17.2832921Z                           "region": {
2023-06-01T17:20:17.2833118Z                             "startLine": 116,
2023-06-01T17:20:17.2833244Z                             "endLine": 116,
2023-06-01T17:20:17.2833372Z                             "startColumn": 21,
2023-06-01T17:20:17.2833514Z                             "endColumn": 27
2023-06-01T17:20:17.2833625Z                           }
2023-06-01T17:20:17.2833742Z                         }
2023-06-01T17:20:17.2833844Z                       }
2023-06-01T17:20:17.2833947Z                     },
2023-06-01T17:20:17.2834063Z                     {
2023-06-01T17:20:17.2834173Z                       "location": {
2023-06-01T17:20:17.2834300Z                         "id": 1,
2023-06-01T17:20:17.2834421Z                         "physicalLocation": {
2023-06-01T17:20:17.2834551Z                           "artifactLocation": {
2023-06-01T17:20:17.2834696Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2834832Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2834967Z                           },
2023-06-01T17:20:17.2835077Z                           "region": {
2023-06-01T17:20:17.2835198Z                             "startLine": 116,
2023-06-01T17:20:17.2835336Z                             "endLine": 116,
2023-06-01T17:20:17.2835460Z                             "startColumn": 21,
2023-06-01T17:20:17.2835598Z                             "endColumn": 27
2023-06-01T17:20:17.2835709Z                           }
2023-06-01T17:20:17.2835811Z                         }
2023-06-01T17:20:17.2835928Z                       }
2023-06-01T17:20:17.2836032Z                     },
2023-06-01T17:20:17.2836150Z                     {
2023-06-01T17:20:17.2836263Z                       "location": {
2023-06-01T17:20:17.2836378Z                         "id": 2,
2023-06-01T17:20:17.2836512Z                         "physicalLocation": {
2023-06-01T17:20:17.2836642Z                           "artifactLocation": {
2023-06-01T17:20:17.2836836Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2836971Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2837090Z                           },
2023-06-01T17:20:17.2837214Z                           "region": {
2023-06-01T17:20:17.2837335Z                             "startLine": 116,
2023-06-01T17:20:17.2837477Z                             "endLine": 116,
2023-06-01T17:20:17.2837601Z                             "startColumn": 17,
2023-06-01T17:20:17.2837727Z                             "endColumn": 27
2023-06-01T17:20:17.2837852Z                           }
2023-06-01T17:20:17.2837955Z                         }
2023-06-01T17:20:17.2838070Z                       }
2023-06-01T17:20:17.2838174Z                     },
2023-06-01T17:20:17.2838279Z                     {
2023-06-01T17:20:17.2838403Z                       "location": {
2023-06-01T17:20:17.2838518Z                         "id": 3,
2023-06-01T17:20:17.2838657Z                         "physicalLocation": {
2023-06-01T17:20:17.2838788Z                           "artifactLocation": {
2023-06-01T17:20:17.2838921Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2839071Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2839190Z                           },
2023-06-01T17:20:17.2839314Z                           "region": {
2023-06-01T17:20:17.2839434Z                             "startLine": 116,
2023-06-01T17:20:17.2839559Z                             "endLine": 116,
2023-06-01T17:20:17.2839697Z                             "startColumn": 17,
2023-06-01T17:20:17.2839820Z                             "endColumn": 30
2023-06-01T17:20:17.2839946Z                           }
2023-06-01T17:20:17.2840048Z                         }
2023-06-01T17:20:17.2840151Z                       }
2023-06-01T17:20:17.2840269Z                     },
2023-06-01T17:20:17.2840373Z                     {
2023-06-01T17:20:17.2840500Z                       "location": {
2023-06-01T17:20:17.2840662Z                         "id": 4,
2023-06-01T17:20:17.2840785Z                         "physicalLocation": {
2023-06-01T17:20:17.2840931Z                           "artifactLocation": {
2023-06-01T17:20:17.2841064Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2841213Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2841331Z                           },
2023-06-01T17:20:17.2841453Z                           "region": {
2023-06-01T17:20:17.2841573Z                             "startLine": 116,
2023-06-01T17:20:17.2841698Z                             "endLine": 116,
2023-06-01T17:20:17.2841836Z                             "startColumn": 8,
2023-06-01T17:20:17.2841961Z                             "endColumn": 16
2023-06-01T17:20:17.2842084Z                           }
2023-06-01T17:20:17.2842187Z                         }
2023-06-01T17:20:17.2842293Z                       }
2023-06-01T17:20:17.2842413Z                     }
2023-06-01T17:20:17.2842516Z                   ]
2023-06-01T17:20:17.2842630Z                 }
2023-06-01T17:20:17.2842733Z               ]
2023-06-01T17:20:17.2842834Z             }
2023-06-01T17:20:17.2842950Z           ],
2023-06-01T17:20:17.2843062Z           "properties": {
2023-06-01T17:20:17.2843186Z             "priorityScore": 818,
2023-06-01T17:20:17.2843331Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2843449Z               {
2023-06-01T17:20:17.2843575Z                 "label": true,
2023-06-01T17:20:17.2843704Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2843827Z               },
2023-06-01T17:20:17.2843945Z               {
2023-06-01T17:20:17.2844055Z                 "label": true,
2023-06-01T17:20:17.2844195Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2844455Z               },
2023-06-01T17:20:17.2844610Z               {
2023-06-01T17:20:17.2844828Z                 "label": true,
2023-06-01T17:20:17.2844957Z                 "type": "fixExamples"
2023-06-01T17:20:17.2845086Z               }
2023-06-01T17:20:17.2845188Z             ]
2023-06-01T17:20:17.2845288Z           }
2023-06-01T17:20:17.2845408Z         },
2023-06-01T17:20:17.2845510Z         {
2023-06-01T17:20:17.2845632Z           "ruleId": "javascript/NoSqli",
2023-06-01T17:20:17.2845781Z           "ruleIndex": 7,
2023-06-01T17:20:17.2845902Z           "level": "error",
2023-06-01T17:20:17.2846035Z           "message": {
2023-06-01T17:20:17.2846253Z             "text": "Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2846570Z             "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
2023-06-01T17:20:17.2846768Z             "arguments": [
2023-06-01T17:20:17.2846897Z               "[an HTTP parameter](0)",
2023-06-01T17:20:17.2847055Z               "[flows](1),(2),(3)",
2023-06-01T17:20:17.2847180Z               "[findById](4)"
2023-06-01T17:20:17.2847304Z             ]
2023-06-01T17:20:17.2847406Z           },
2023-06-01T17:20:17.2847517Z           "locations": [
2023-06-01T17:20:17.2847640Z             {
2023-06-01T17:20:17.2847757Z               "physicalLocation": {
2023-06-01T17:20:17.2847899Z                 "artifactLocation": {
2023-06-01T17:20:17.2848030Z                   "uri": "routes/index.js",
2023-06-01T17:20:17.2848162Z                   "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2848295Z                 },
2023-06-01T17:20:17.2848407Z                 "region": {
2023-06-01T17:20:17.2848538Z                   "startLine": 144,
2023-06-01T17:20:17.2848661Z                   "endLine": 144,
2023-06-01T17:20:17.2848784Z                   "startColumn": 8,
2023-06-01T17:20:17.2848920Z                   "endColumn": 16
2023-06-01T17:20:17.2849032Z                 }
2023-06-01T17:20:17.2849202Z               }
2023-06-01T17:20:17.2849305Z             }
2023-06-01T17:20:17.2849407Z           ],
2023-06-01T17:20:17.2849533Z           "fingerprints": {
2023-06-01T17:20:17.2849698Z             "0": "7411360805c50d8c4bc0bc5fd48895ca9355d0598b8aaa1f9a01476df07a3f83",
2023-06-01T17:20:17.2849976Z             "1": "d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"
2023-06-01T17:20:17.2850189Z           },
2023-06-01T17:20:17.2850300Z           "codeFlows": [
2023-06-01T17:20:17.2850422Z             {
2023-06-01T17:20:17.2850534Z               "threadFlows": [
2023-06-01T17:20:17.2850662Z                 {
2023-06-01T17:20:17.2850773Z                   "locations": [
2023-06-01T17:20:17.2850883Z                     {
2023-06-01T17:20:17.2851007Z                       "location": {
2023-06-01T17:20:17.2851122Z                         "id": 0,
2023-06-01T17:20:17.2851266Z                         "physicalLocation": {
2023-06-01T17:20:17.2851400Z                           "artifactLocation": {
2023-06-01T17:20:17.2851533Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2851682Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2851801Z                           },
2023-06-01T17:20:17.2851927Z                           "region": {
2023-06-01T17:20:17.2852047Z                             "startLine": 144,
2023-06-01T17:20:17.2852170Z                             "endLine": 144,
2023-06-01T17:20:17.2852308Z                             "startColumn": 21,
2023-06-01T17:20:17.2852432Z                             "endColumn": 27
2023-06-01T17:20:17.2852561Z                           }
2023-06-01T17:20:17.2852663Z                         }
2023-06-01T17:20:17.2852766Z                       }
2023-06-01T17:20:17.2852883Z                     },
2023-06-01T17:20:17.2852987Z                     {
2023-06-01T17:20:17.2853163Z                       "location": {
2023-06-01T17:20:17.2853280Z                         "id": 1,
2023-06-01T17:20:17.2853403Z                         "physicalLocation": {
2023-06-01T17:20:17.2853546Z                           "artifactLocation": {
2023-06-01T17:20:17.2853677Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2853827Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2853946Z                           },
2023-06-01T17:20:17.2854055Z                           "region": {
2023-06-01T17:20:17.2854188Z                             "startLine": 144,
2023-06-01T17:20:17.2854312Z                             "endLine": 144,
2023-06-01T17:20:17.2854457Z                             "startColumn": 21,
2023-06-01T17:20:17.2854583Z                             "endColumn": 27
2023-06-01T17:20:17.2854707Z                           }
2023-06-01T17:20:17.2854811Z                         }
2023-06-01T17:20:17.2854918Z                       }
2023-06-01T17:20:17.2855041Z                     },
2023-06-01T17:20:17.2855144Z                     {
2023-06-01T17:20:17.2855254Z                       "location": {
2023-06-01T17:20:17.2855381Z                         "id": 2,
2023-06-01T17:20:17.2855502Z                         "physicalLocation": {
2023-06-01T17:20:17.2855646Z                           "artifactLocation": {
2023-06-01T17:20:17.2855778Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2855923Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2856044Z                           },
2023-06-01T17:20:17.2856153Z                           "region": {
2023-06-01T17:20:17.2856294Z                             "startLine": 144,
2023-06-01T17:20:17.2856417Z                             "endLine": 144,
2023-06-01T17:20:17.2856554Z                             "startColumn": 17,
2023-06-01T17:20:17.2856679Z                             "endColumn": 27
2023-06-01T17:20:17.2856793Z                           }
2023-06-01T17:20:17.2856965Z                         }
2023-06-01T17:20:17.2857067Z                       }
2023-06-01T17:20:17.2857185Z                     },
2023-06-01T17:20:17.2857291Z                     {
2023-06-01T17:20:17.2857401Z                       "location": {
2023-06-01T17:20:17.2857537Z                         "id": 3,
2023-06-01T17:20:17.2857659Z                         "physicalLocation": {
2023-06-01T17:20:17.2857803Z                           "artifactLocation": {
2023-06-01T17:20:17.2857936Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2858070Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2858200Z                           },
2023-06-01T17:20:17.2858311Z                           "region": {
2023-06-01T17:20:17.2858445Z                             "startLine": 144,
2023-06-01T17:20:17.2858570Z                             "endLine": 144,
2023-06-01T17:20:17.2858694Z                             "startColumn": 17,
2023-06-01T17:20:17.2858841Z                             "endColumn": 30
2023-06-01T17:20:17.2858952Z                           }
2023-06-01T17:20:17.2859072Z                         }
2023-06-01T17:20:17.2859177Z                       }
2023-06-01T17:20:17.2859281Z                     },
2023-06-01T17:20:17.2859400Z                     {
2023-06-01T17:20:17.2859511Z                       "location": {
2023-06-01T17:20:17.2859640Z                         "id": 4,
2023-06-01T17:20:17.2859763Z                         "physicalLocation": {
2023-06-01T17:20:17.2859892Z                           "artifactLocation": {
2023-06-01T17:20:17.2860039Z                             "uri": "routes/index.js",
2023-06-01T17:20:17.2860173Z                             "uriBaseId": "%SRCROOT%"
2023-06-01T17:20:17.2860307Z                           },
2023-06-01T17:20:17.2860417Z                           "region": {
2023-06-01T17:20:17.2860537Z                             "startLine": 144,
2023-06-01T17:20:17.2860730Z                             "endLine": 144,
2023-06-01T17:20:17.2860857Z                             "startColumn": 8,
2023-06-01T17:20:17.2860993Z                             "endColumn": 16
2023-06-01T17:20:17.2861107Z                           }
2023-06-01T17:20:17.2861210Z                         }
2023-06-01T17:20:17.2861325Z                       }
2023-06-01T17:20:17.2861428Z                     }
2023-06-01T17:20:17.2861546Z                   ]
2023-06-01T17:20:17.2861652Z                 }
2023-06-01T17:20:17.2861752Z               ]
2023-06-01T17:20:17.2861872Z             }
2023-06-01T17:20:17.2861973Z           ],
2023-06-01T17:20:17.2862095Z           "properties": {
2023-06-01T17:20:17.2862220Z             "priorityScore": 818,
2023-06-01T17:20:17.2862352Z             "priorityScoreFactors": [
2023-06-01T17:20:17.2862483Z               {
2023-06-01T17:20:17.2862597Z                 "label": true,
2023-06-01T17:20:17.2862728Z                 "type": "multipleOccurrence"
2023-06-01T17:20:17.2862865Z               },
2023-06-01T17:20:17.2862968Z               {
2023-06-01T17:20:17.2863092Z                 "label": true,
2023-06-01T17:20:17.2863217Z                 "type": "hotFileSource"
2023-06-01T17:20:17.2863333Z               },
2023-06-01T17:20:17.2863448Z               {
2023-06-01T17:20:17.2863560Z                 "label": true,
2023-06-01T17:20:17.2863696Z                 "type": "fixExamples"
2023-06-01T17:20:17.2863810Z               }
2023-06-01T17:20:17.2863910Z             ]
2023-06-01T17:20:17.2864023Z           }
2023-06-01T17:20:17.2864124Z         }
2023-06-01T17:20:17.2864240Z       ],
2023-06-01T17:20:17.2864352Z       "properties": {
2023-06-01T17:20:17.2864470Z         "coverage": [
2023-06-01T17:20:17.2864596Z           {
2023-06-01T17:20:17.2864711Z             "isSupported": true,
2023-06-01T17:20:17.2864850Z             "lang": "EJS",
2023-06-01T17:20:17.2864967Z             "files": 1,
2023-06-01T17:20:17.2865089Z             "type": "SUPPORTED"
2023-06-01T17:20:17.2865272Z           },
2023-06-01T17:20:17.2865374Z           {
2023-06-01T17:20:17.2865490Z             "isSupported": true,
2023-06-01T17:20:17.2865626Z             "lang": "XML",
2023-06-01T17:20:17.2865741Z             "files": 5,
2023-06-01T17:20:17.2865875Z             "type": "SUPPORTED"
2023-06-01T17:20:17.2865988Z           },
2023-06-01T17:20:17.2866089Z           {
2023-06-01T17:20:17.2866229Z             "isSupported": true,
2023-06-01T17:20:17.2867205Z             "lang": "JavaScript",
2023-06-01T17:20:17.2867370Z             "files": 8,
2023-06-01T17:20:17.2867492Z             "type": "SUPPORTED"
2023-06-01T17:20:17.2867604Z           },
2023-06-01T17:20:17.2867723Z           {
2023-06-01T17:20:17.2867839Z             "isSupported": false,
2023-06-01T17:20:17.2867976Z             "lang": "EJS",
2023-06-01T17:20:17.2868092Z             "files": 3,
2023-06-01T17:20:17.2868214Z             "type": "FAILED_PARSING"
2023-06-01T17:20:17.2868351Z           },
2023-06-01T17:20:17.2868457Z           {
2023-06-01T17:20:17.2868592Z             "isSupported": false,
2023-06-01T17:20:17.2868719Z             "lang": "HTML",
2023-06-01T17:20:17.2868837Z             "files": 1,
2023-06-01T17:20:17.2868976Z             "type": "FAILED_PARSING"
2023-06-01T17:20:17.2869090Z           }
2023-06-01T17:20:17.2869191Z         ]
2023-06-01T17:20:17.2869306Z       }
2023-06-01T17:20:17.2869406Z     }
2023-06-01T17:20:17.2869520Z   ]
2023-06-01T17:20:17.2869621Z }
2023-06-01T17:20:17.9381981Z 2023-06-01T17:20:17.928Z snyk Exit code: 1
2023-06-01T17:20:18.1925380Z 2023-06-01T17:20:18.182Z snyk analytics {
2023-06-01T17:20:18.1925847Z   "args": [
2023-06-01T17:20:18.1925967Z     {
2023-06-01T17:20:18.1926108Z       "sarif": true,
2023-06-01T17:20:18.1926235Z       "debug": true,
2023-06-01T17:20:18.1926355Z       "code": true
2023-06-01T17:20:18.1926478Z     }
2023-06-01T17:20:18.1926581Z   ],
2023-06-01T17:20:18.1926965Z   "command": "test",
2023-06-01T17:20:18.1927093Z   "metadata": {
2023-06-01T17:20:18.1927237Z     "upgradable-snyk-protect-paths": 0,
2023-06-01T17:20:18.1927392Z     "sast-scan": true,
2023-06-01T17:20:18.1927523Z     "sast-issues-found": 13,
2023-06-01T17:20:18.1927687Z     "error-message": "Vulnerabilities found",
2023-06-01T17:20:18.1927829Z     "error-code": "VULNS",
2023-06-01T17:20:18.1927955Z     "command": "test"
2023-06-01T17:20:18.1928080Z   },
2023-06-01T17:20:18.1928204Z   "os": "Windows Server 2019",
2023-06-01T17:20:18.1928335Z   "osPlatform": "win32",
2023-06-01T17:20:18.1928482Z   "osRelease": "10.0.17763",
2023-06-01T17:20:18.1928608Z   "osArch": "x64",
2023-06-01T17:20:18.1928746Z   "version": "1.1171.0",
2023-06-01T17:20:18.1928876Z   "nodeVersion": "v16.16.0",
2023-06-01T17:20:18.1929007Z   "standalone": true,
2023-06-01T17:20:18.1929161Z   "integrationName": "CLI_V1_PLUGIN",
2023-06-01T17:20:18.1929308Z   "integrationVersion": "1.1171.0",
2023-06-01T17:20:18.1929466Z   "integrationEnvironment": "",
2023-06-01T17:20:18.1929613Z   "integrationEnvironmentVersion": "",
2023-06-01T17:20:18.1929772Z   "id": "18860d98acf9bfb4b24b77d7ead5fbf5e5d020da",
2023-06-01T17:20:18.1929927Z   "ci": true,
2023-06-01T17:20:18.1930050Z   "durationMs": 8497,
2023-06-01T17:20:18.1930185Z   "metrics": {
2023-06-01T17:20:18.1930304Z     "network_time": {
2023-06-01T17:20:18.1930424Z       "type": "timer",
2023-06-01T17:20:18.1930554Z       "values": [
2023-06-01T17:20:18.1930667Z         1631,
2023-06-01T17:20:18.1930789Z         1465
2023-06-01T17:20:18.1930897Z       ],
2023-06-01T17:20:18.1931008Z       "total": 3096
2023-06-01T17:20:18.1931130Z     },
2023-06-01T17:20:18.1931239Z     "cpu_time": {
2023-06-01T17:20:18.1931359Z       "type": "synthetic",
2023-06-01T17:20:18.1931491Z       "values": [
2023-06-01T17:20:18.1931601Z         5401
2023-06-01T17:20:18.1931720Z       ],
2023-06-01T17:20:18.1931833Z       "total": 5401
2023-06-01T17:20:18.1931942Z     }
2023-06-01T17:20:18.1932061Z   }
2023-06-01T17:20:18.1932163Z }
2023-06-01T17:20:18.1934432Z 2023-06-01T17:20:18.183Z snyk sending request to: https://api.snyk.io/v1/analytics/cli
2023-06-01T17:20:18.1937603Z 2023-06-01T17:20:18.183Z snyk request body size: 737
2023-06-01T17:20:18.1938225Z 2023-06-01T17:20:18.183Z snyk gzipped request body size: 443
2023-06-01T17:20:18.1945921Z 2023-06-01T17:20:18.184Z snyk using proxy: http://snykcli:***@127.0.0.1:50022
2023-06-01T17:20:18.2433567Z 2023-06-01T17:20:18Z legacycli:1 - [011] INFO: Running 1 CONNECT handlers
2023-06-01T17:20:18.2434288Z 2023-06-01T17:20:18Z legacycli:1 - HandleConnect - basic authentication result:  &{0 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:18.2434818Z 2023-06-01T17:20:18Z legacycli:1 - [011] INFO: on 0th handler: &{2 <nil> 0x11d2520} api.snyk.io:443
2023-06-01T17:20:18.2435248Z 2023-06-01T17:20:18Z legacycli:1 - [011] INFO: Assuming CONNECT is TLS, mitm proxying it
2023-06-01T17:20:18.2435757Z 2023-06-01T17:20:18Z legacycli:1 - [011] INFO: signing for api.snyk.io
2023-06-01T17:20:18.4458032Z 2023-06-01T17:20:18Z legacycli:1 - [012] INFO: req api.snyk.io:443
2023-06-01T17:20:18.4458641Z 2023-06-01T17:20:18Z legacycli:1 - [012] INFO: Sending request POST https://api.snyk.io:443/v1/analytics/cli
2023-06-01T17:20:20.2988549Z 2023-06-01T17:20:20Z legacycli:1 - [012] INFO: resp 200 OK
2023-06-01T17:20:20.3020761Z 2023-06-01T17:20:20Z legacycli:1 - [011] INFO: Exiting on EOF
2023-06-01T17:20:20.3594902Z 2023-06-01T17:20:20Z legacycli:1 - Proxy successfully shut down
2023-06-01T17:20:20.3595540Z 2023-06-01T17:20:20Z legacycli:1 - deleting temp cert file: C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/tmp\snyk-cli-cert-1826463228.crt
2023-06-01T17:20:20.3598496Z 2023-06-01T17:20:20Z legacycli:1 - deleted temp cert file: C:\Users\VssAdministrator\AppData\Local/snyk/1.1171.0/tmp\snyk-cli-cert-1826463228.crt
2023-06-01T17:20:20.3598989Z 2023-06-01T17:20:20Z main - Exiting with 1
2023-06-01T17:20:20.3600417Z 2023-06-01T17:20:20Z main - Sending Analytics
2023-06-01T17:20:20.6092915Z 2023-06-01T17:20:20Z main - Analytics successfully send
2023-06-01T17:20:20.9932370Z Vulnerability snapshot saved at D:\a\1\a/results-code.html
2023-06-01T17:20:21.1013493Z ##[section]Finishing: SnykCode